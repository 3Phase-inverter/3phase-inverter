
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007c  00800100  0000299c  00002a30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000299c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002b  0080017c  0080017c  00002aac  2**0
                  ALLOC
  3 .stab         00001734  00000000  00000000  00002aac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000535  00000000  00000000  000041e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000100  00000000  00000000  00004715  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000005ac  00000000  00000000  00004815  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000020fa  00000000  00000000  00004dc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000acb  00000000  00000000  00006ebb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000026e3  00000000  00000000  00007986  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000480  00000000  00000000  0000a06c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000833  00000000  00000000  0000a4ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000125e  00000000  00000000  0000ad1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000001e2  00000000  00000000  0000bf7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000070  00000000  00000000  0000c15f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 9b 06 	jmp	0xd36	; 0xd36 <__ctors_end>
       4:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
       8:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
       c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      10:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      14:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      18:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      1c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      20:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      24:	0c 94 bc 0f 	jmp	0x1f78	; 0x1f78 <__vector_9>
      28:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      2c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      30:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      34:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      38:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      3c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      40:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      44:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      48:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      4c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      50:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      54:	0c 94 0d 07 	jmp	0xe1a	; 0xe1a <__vector_21>
      58:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      5c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      60:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      64:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      68:	0c 94 79 0e 	jmp	0x1cf2	; 0x1cf2 <__vector_26>
      6c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      70:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      74:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      78:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      7c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      80:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      84:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      88:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>

0000008c <ef5x7>:
      8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      bc:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
      cc:	00 08 08 08 08 08 00 30 30 00 00 20 10 08 04 02     .......00.. ....
      dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     10c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     11c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     14c:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     16c:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     19c:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     1ac:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     1bc:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1ec:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     1fc:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     25c:	00 00 41 36 08 00 08 08 2a 1c 08 08 1c 2a 08 08     ..A6....*....*..

0000026c <sine0>:
     26c:	80 83 86 89 8c 8f 92 95 98 9c 9f a2 a5 a8 ab ae     ................
     27c:	b0 b3 b6 b9 bc bf c1 c4 c7 c9 cc ce d1 d3 d5 d8     ................
     28c:	da dc de e0 e2 e4 e6 e8 ea ec ed ef f0 f2 f3 f5     ................
     29c:	f6 f7 f8 f9 fa fb fc fc fd fe fe ff ff ff ff ff     ................
     2ac:	ff ff ff ff ff ff fe fe fd fc fc fb fa f9 f8 f7     ................
     2bc:	f6 f5 f3 f2 f0 ef ed ec ea e8 e6 e4 e2 e0 de dc     ................
     2cc:	da d8 d5 d3 d1 ce cc c9 c7 c4 c1 bf bc b9 b6 b3     ................
     2dc:	b0 ae ab a8 a5 a2 9f 9c 98 95 92 8f 8c 89 86 83     ................
     2ec:	80 7c 79 76 73 70 6d 6a 67 63 60 5d 5a 57 54 51     .|yvspmjgc`]ZWTQ
     2fc:	4f 4c 49 46 43 40 3e 3b 38 36 33 31 2e 2c 2a 27     OLIFC@>;8631.,*'
     30c:	25 23 21 1f 1d 1b 19 17 15 13 12 10 0f 0d 0c 0a     %#!.............
     31c:	09 08 07 06 05 04 03 03 02 01 01 00 00 00 00 00     ................
     32c:	00 00 00 00 00 00 01 01 02 03 03 04 05 06 07 08     ................
     33c:	09 0a 0c 0d 0f 10 12 13 15 17 19 1b 1d 1f 21 23     ..............!#
     34c:	25 27 2a 2c 2e 31 33 36 38 3b 3e 40 43 46 49 4c     %'*,.1368;>@CFIL
     35c:	4f 51 54 57 5a 5d 60 63 67 6a 6d 70 73 76 79 7c     OQTWZ]`cgjmpsvy|

0000036c <sine>:
     36c:	80 83 86 89 8c 8f 92 95 98 9c 9f a2 a5 a8 ab ae     ................
     37c:	b0 b3 b6 b9 bc bf c1 c4 c7 c9 cc ce d1 d3 d5 d8     ................
     38c:	da dc de e0 e2 e4 e6 e8 ea ec ed ef f0 f2 f3 f5     ................
     39c:	f6 f7 f8 f9 fa fb fc fc fd fe fe ff ff ff ff ff     ................
     3ac:	ff ff ff ff ff ff fe fe fd fc fc fb fa f9 f8 f7     ................
     3bc:	f6 f5 f3 f2 f0 ef ed ec ea e8 e6 e4 e2 e0 de dc     ................
     3cc:	da d8 d5 d3 d1 ce cc c9 c7 c4 c1 bf bc b9 b6 b3     ................
     3dc:	b0 ae ab a8 a5 a2 9f 9c 98 95 92 8f 8c 89 86 83     ................
     3ec:	80 7c 79 76 73 70 6d 6a 67 63 60 5d 5a 57 54 51     .|yvspmjgc`]ZWTQ
     3fc:	4f 4c 49 46 43 40 3e 3b 38 36 33 31 2e 2c 2a 27     OLIFC@>;8631.,*'
     40c:	25 23 21 1f 1d 1b 19 17 15 13 12 10 0f 0d 0c 0a     %#!.............
     41c:	09 08 07 06 05 04 03 03 02 01 01 00 00 00 00 00     ................
     42c:	00 00 00 00 00 00 01 01 02 03 03 04 05 06 07 08     ................
     43c:	09 0a 0c 0d 0f 10 12 13 15 17 19 1b 1d 1f 21 23     ..............!#
     44c:	25 27 2a 2c 2e 31 33 36 38 3b 3e 40 43 46 49 4c     %'*,.1368;>@CFIL
     45c:	4f 51 54 57 5a 5d 60 63 67 6a 6d 70 73 76 79 7c     OQTWZ]`cgjmpsvy|

0000046c <sine1>:
     46c:	00 05 09 0e 13 17 1c 21 25 2a 2f 33 38 3c 41 46     .......!%*/38<AF
     47c:	4a 4f 53 57 5c 60 64 69 6d 71 75 7a 7e 82 86 8a     JOSW\`dimquz~...
     48c:	8e 92 95 99 9d a1 a4 a8 ab af b2 b5 b9 bc bf c2     ................
     49c:	c5 c8 cb ce d0 d3 d6 d8 db dd df e2 e4 e6 e8 ea     ................
     4ac:	ec ed ef f1 f2 f4 f5 f6 f7 f8 f9 fa fb fc fd fd     ................
     4bc:	fe fe ff ff ff ff ff ff ff fe fe fe fd fc fc fb     ................
     4cc:	fa f9 f8 f7 f6 f4 f3 f2 f0 ee ed eb e9 e7 e5 e3     ................
     4dc:	e1 df dc da d7 d5 d2 d0 cd ca c7 c4 c1 be bb b8     ................
     4ec:	b4 b1 ae aa a7 a3 9f 9c 98 94 90 8c 88 84 80 7c     ...............|
     4fc:	78 74 70 6c 67 63 5f 5a 56 51 4d 49 44 3f 3b 36     xtplgc_ZVQMID?;6
     50c:	32 2d 29 24 1f 1b 16 11 0d 08 03 fe fa f5 f0 ec     2-)$............
     51c:	e7 e2 de d9 d4 d0 cb c7 c2 bd b9 b4 b0 ac a7 a3     ................
     52c:	9e 9a 96 92 8d 89 85 81 7d 79 75 71 6d 69 66 62     ........}yuqmifb
     53c:	5e 5b 57 54 50 4d 49 46 43 40 3d 3a 37 34 31 2f     ^[WTPMIFC@=:741/
     54c:	2c 29 27 24 22 20 1e 1c 19 18 16 14 12 10 0f 0d     ,)'$" ..........
     55c:	0c 0b 09 08 07 06 05 04 04 03 03 02 02 01 01 01     ................

0000056c <Timer_Value>:
     56c:	00 00 24 f4 73 cb 63 ae 97 98 a2 87 12 7a f9 6e     ..$.s.c......z.n
     57c:	ba 65 e6 5d 31 57 61 51 4b 4c ce 47 d1 43 3f 40     .e.]1WaQKL.G.C?@
     58c:	09 3d 21 3a 7d 37 13 35 dd 32 d4 30 f3 2e 36 2d     .=!:}7.5.2.0..6-
     59c:	99 2b 18 2a b1 28 61 27 26 26 fe 24 e7 23 e1 22     .+.*.(a'&&.$.#."
     5ac:	e9 21 fe 20 20 20 4d 1f 85 1e c6 1d 10 1d 63 1c     .!.   M.......c.
     5bc:	be 1b 20 1b 89 1a f9 19 6e 19 ea 18 6a 18 ef 17     .. .....n...j...
     5cc:	7a 17 08 17 9b 16 32 16 cc 15 6a 15 0c 15 b1 14     z.....2...j.....
     5dc:	58 14 03 14 b0 13 60 13 13 13 c8 12 7f 12 38 12     X.....`.......8.
     5ec:	f4 11 b1 11 70 11 31 11 f4 10 b9 10 7f 10 47 10     ....p.1.......G.
     5fc:	10 10 da 0f a6 0f 74 0f 42 0f 12 0f e3 0e b5 0e     ......t.B.......
     60c:	88 0e 5c 0e 32 0e 08 0e df 0d b7 0d 90 0d 6a 0d     ..\.2.........j.
     61c:	45 0d 20 0d fc 0c d9 0c b7 0c 96 0c 75 0c 55 0c     E. .........u.U.
     62c:	35 0c 16 0c f8 0b da 0b bd 0b a0 0b 84 0b 69 0b     5.............i.
     63c:	4e 0b 33 0b 19 0b ff 0a e6 0a cd 0a b5 0a 9d 0a     N.3.............
     64c:	86 0a 6f 0a 58 0a 42 0a 2c 0a 17 0a 01 0a ed 09     ..o.X.B.,.......
     65c:	d8 09 c4 09 b0 09 9d 09 89 09 76 09 64 09 51 09     ..........v.d.Q.
     66c:	3f 09 2e 09 1c 09 0b 09 fa 08 e9 08 d8 08 c8 08     ?...............
     67c:	b8 08 a8 08 99 08 89 08 7a 08 6b 08 5c 08 4e 08     ........z.k.\.N.
     68c:	3f 08 31 08 23 08 16 08 08 08 fa 07 ed 07 e0 07     ?.1.#...........
     69c:	d3 07 c6 07 ba 07 ad 07 a1 07 95 07 89 07 7d 07     ..............}.
     6ac:	71 07 66 07 5b 07 4f 07 44 07 39 07 2e 07 23 07     q.f.[.O.D.9...#.
     6bc:	19 07 0e 07 04 07 fa 06 f0 06 e6 06 dc 06 d2 06     ................
     6cc:	c8 06 bf 06 b5 06 ac 06 a2 06 99 06 90 06 87 06     ................
     6dc:	7e 06 75 06 6d 06 64 06 5c 06 53 06 4b 06 43 06     ~.u.m.d.\.S.K.C.
     6ec:	3a 06 32 06 2a 06 22 06 35 0c 25 0c 16 0c 07 0c     :.2.*.".5.%.....
     6fc:	f8 0b e9 0b da 0b cb 0b bd 0b ae 0b a0 0b 92 0b     ................
     70c:	84 0b 76 0b 69 0b 5b 0b 4e 0b 40 0b 33 0b 26 0b     ..v.i.[.N.@.3.&.
     71c:	19 0b 0c 0b ff 0a f3 0a e6 0a da 0a cd 0a c1 0a     ................
     72c:	b5 0a a9 0a 9d 0a 92 0a 86 0a 7a 0a 6f 0a 64 0a     ..........z.o.d.
     73c:	58 0a 4d 0a 42 0a 37 0a 2c 0a 21 0a 17 0a 0c 0a     X.M.B.7.,.!.....
     74c:	01 0a f7 09 ed 09 e2 09 d8 09 ce 09 c4 09 ba 09     ................
     75c:	b0 09 a6 09 9d 09 93 09 89 09 80 09 76 09 6d 09     ............v.m.
     76c:	64 09 5b 09 51 09 48 09 3f 09 36 09 2e 09 25 09     d.[.Q.H.?.6...%.
     77c:	1c 09 13 09 0b 09 02 09 fa 08 f1 08 e9 08 e1 08     ................
     78c:	d8 08 d0 08 c8 08 c0 08 b8 08 b0 08 a8 08 a0 08     ................
     79c:	99 08 91 08 89 08 82 08 7a 08 73 08 6b 08 64 08     ........z.s.k.d.
     7ac:	5c 08 55 08 4e 08 47 08 3f 08 38 08 31 08 2a 08     \.U.N.G.?.8.1.*.
     7bc:	23 08 1c 08 16 08 0f 08 08 08 01 08 fa 07 f4 07     #...............
     7cc:	ed 07 e7 07 e0 07 da 07 d3 07 cd 07 c6 07 c0 07     ................
     7dc:	ba 07 b4 07 ad 07 a7 07 a1 07 9b 07 95 07 8f 07     ................
     7ec:	89 07 83 07 7d 07 77 07 71 07 6c 07 66 07 60 07     ....}.w.q.l.f.`.
     7fc:	5b 07 55 07 4f 07 4a 07 44 07 3f 07 39 07 34 07     [.U.O.J.D.?.9.4.
     80c:	2e 07 29 07 23 07 1e 07 19 07 14 07 0e 07 09 07     ..).#...........
     81c:	04 07 ff 06 fa 06 f5 06 f0 06 eb 06 e6 06 e1 06     ................
     82c:	dc 06 d7 06 d2 06 cd 06 c8 06 c3 06 bf 06 ba 06     ................
     83c:	b5 06 b0 06 ac 06 a7 06 a2 06 9e 06 99 06 95 06     ................
     84c:	90 06 8c 06 87 06 83 06 7e 06 7a 06 75 06 71 06     ........~.z.u.q.
     85c:	6d 06 68 06 64 06 60 06 5c 06 57 06 53 06 4f 06     m.h.d.`.\.W.S.O.
     86c:	4b 06 47 06 43 06 3e 06 3a 06 36 06 32 06 2e 06     K.G.C.>.:.6.2...
     87c:	2a 06 26 06 22 06 1e 06 35 0c 2d 0c 25 0c 1e 0c     *.&."...5.-.%...
     88c:	16 0c 0e 0c 07 0c ff 0b f8 0b f0 0b e9 0b e1 0b     ................
     89c:	da 0b d3 0b cb 0b c4 0b bd 0b b6 0b ae 0b a7 0b     ................
     8ac:	a0 0b 99 0b 92 0b 8b 0b 84 0b 7d 0b 76 0b 6f 0b     ..........}.v.o.
     8bc:	69 0b 62 0b 5b 0b 54 0b 4e 0b 47 0b 40 0b 3a 0b     i.b.[.T.N.G.@.:.
     8cc:	33 0b 2c 0b 26 0b 1f 0b 19 0b 12 0b 0c 0b 06 0b     3.,.&...........
     8dc:	ff 0a f9 0a f3 0a ec 0a e6 0a e0 0a da 0a d4 0a     ................
     8ec:	cd 0a c7 0a c1 0a bb 0a b5 0a af 0a a9 0a a3 0a     ................
     8fc:	9d 0a 97 0a 92 0a 8c 0a 86 0a 80 0a 7a 0a 75 0a     ............z.u.
     90c:	6f 0a 69 0a 64 0a 5e 0a 58 0a 53 0a 4d 0a 48 0a     o.i.d.^.X.S.M.H.
     91c:	42 0a 3d 0a 37 0a 32 0a 2c 0a 27 0a 21 0a 1c 0a     B.=.7.2.,.'.!...
     92c:	17 0a 11 0a 0c 0a 07 0a 01 0a fc 09 f7 09 f2 09     ................
     93c:	ed 09 e7 09 e2 09 dd 09 d8 09 d3 09 ce 09 c9 09     ................
     94c:	c4 09 bf 09 ba 09 b5 09 b0 09 ab 09 a6 09 a1 09     ................
     95c:	9d 09 98 09 93 09 8e 09 89 09 85 09 80 09 7b 09     ..............{.
     96c:	76 09 72 09 6d 09 68 09 64 09 5f 09 5b 09 56 09     v.r.m.h.d._.[.V.
     97c:	51 09 4d 09 48 09 44 09 3f 09 3b 09 36 09 32 09     Q.M.H.D.?.;.6.2.
     98c:	2e 09 29 09 25 09 20 09 1c 09 18 09 13 09 0f 09     ..).%. .........
     99c:	0b 09 07 09 02 09 fe 08 fa 08 f6 08 f1 08 ed 08     ................
     9ac:	e9 08 e5 08 e1 08 dd 08 d8 08 d4 08 d0 08 cc 08     ................
     9bc:	c8 08 c4 08 c0 08 bc 08 b8 08 b4 08 b0 08 ac 08     ................
     9cc:	a8 08 a4 08 a0 08 9d 08 99 08 95 08 91 08 8d 08     ................
     9dc:	89 08 86 08 82 08 7e 08 7a 08 76 08 73 08 6f 08     ......~.z.v.s.o.
     9ec:	6b 08 67 08 64 08 60 08 5c 08 59 08 55 08 51 08     k.g.d.`.\.Y.U.Q.
     9fc:	4e 08 4a 08 47 08 43 08 3f 08 3c 08 38 08 35 08     N.J.G.C.?.<.8.5.
     a0c:	31 08 2e 08 2a 08 27 08 47 10 40 10 39 10 32 10     1...*.'.G.@.9.2.
     a1c:	2b 10 24 10 1d 10 17 10 10 10 09 10 02 10 fc 0f     +.$.............
     a2c:	f5 0f ee 0f e8 0f e1 0f da 0f d4 0f cd 0f c7 0f     ................
     a3c:	c0 0f ba 0f b3 0f ad 0f a6 0f a0 0f 9a 0f 93 0f     ................
     a4c:	8d 0f 87 0f 80 0f 7a 0f 74 0f 6d 0f 67 0f 61 0f     ......z.t.m.g.a.
     a5c:	5b 0f 55 0f 4e 0f 48 0f 42 0f 3c 0f 36 0f 30 0f     [.U.N.H.B.<.6.0.
     a6c:	2a 0f 24 0f 1e 0f 18 0f 12 0f 0c 0f 06 0f 00 0f     *.$.............
     a7c:	fa 0e f4 0e ef 0e e9 0e e3 0e dd 0e d7 0e d2 0e     ................
     a8c:	cc 0e c6 0e c0 0e bb 0e b5 0e af 0e aa 0e a4 0e     ................
     a9c:	9f 0e 99 0e 93 0e 8e 0e 88 0e 83 0e 7d 0e 78 0e     ............}.x.
     aac:	72 0e 6d 0e 67 0e 62 0e 5c 0e 57 0e 52 0e 4c 0e     r.m.g.b.\.W.R.L.
     abc:	47 0e 42 0e 3c 0e 37 0e 32 0e 2c 0e 27 0e 22 0e     G.B.<.7.2.,.'.".
     acc:	1d 0e 18 0e 12 0e 0d 0e 08 0e 03 0e fe 0d f9 0d     ................
     adc:	f3 0d ee 0d e9 0d e4 0d df 0d da 0d d5 0d d0 0d     ................
     aec:	cb 0d c6 0d c1 0d bc 0d b7 0d b2 0d ad 0d a9 0d     ................
     afc:	a4 0d 9f 0d 9a 0d 95 0d 90 0d 8b 0d 87 0d 82 0d     ................
     b0c:	7d 0d 78 0d 74 0d 6f 0d 6a 0d 65 0d 61 0d 5c 0d     }.x.t.o.j.e.a.\.
     b1c:	57 0d 53 0d 4e 0d 49 0d 45 0d 40 0d 3c 0d 37 0d     W.S.N.I.E.@.<.7.
     b2c:	32 0d 2e 0d 29 0d 25 0d 20 0d 1c 0d 17 0d 13 0d     2...).%. .......
     b3c:	0e 0d 0a 0d 05 0d 01 0d fc 0c f8 0c f4 0c ef 0c     ................
     b4c:	eb 0c e7 0c e2 0c de 0c d9 0c d5 0c d1 0c cd 0c     ................
     b5c:	c8 0c c4 0c c0 0c bb 0c b7 0c b3 0c af 0c ab 0c     ................
     b6c:	a6 0c a2 0c 9e 0c 9a 0c 96 0c 92 0c 8d 0c 89 0c     ................
     b7c:	85 0c 81 0c 7d 0c 79 0c 75 0c 71 0c 6d 0c 69 0c     ....}.y.u.q.m.i.
     b8c:	65 0c 61 0c 5d 0c 59 0c 55 0c 51 0c 4d 0c 49 0c     e.a.].Y.U.Q.M.I.
     b9c:	45 0c 41 0c 3d 0c 39 0c 6a 18 62 18 5a 18 53 18     E.A.=.9.j.b.Z.S.
     bac:	4b 18 43 18 3b 18 34 18 2c 18 24 18 1d 18 15 18     K.C.;.4.,.$.....
     bbc:	0e 18 06 18 ff 17 f7 17 ef 17 e8 17 e0 17 d9 17     ................
     bcc:	d2 17 ca 17 c3 17 bb 17 b4 17 ad 17 a5 17 9e 17     ................
     bdc:	97 17 8f 17 88 17 81 17 7a 17 72 17 6b 17 64 17     ........z.r.k.d.
     bec:	5d 17 56 17 4f 17 47 17 40 17 39 17 32 17 2b 17     ].V.O.G.@.9.2.+.
     bfc:	24 17 1d 17 16 17 0f 17 08 17 01 17 fa 16 f3 16     $...............
     c0c:	ed 16 e6 16 df 16 d8 16 d1 16 ca 16 c4 16 bd 16     ................
     c1c:	b6 16 af 16 a8 16 a2 16 9b 16 94 16 8e 16 87 16     ................
     c2c:	80 16 7a 16 73 16 6d 16 66 16 5f 16 59 16 52 16     ..z.s.m.f._.Y.R.
     c3c:	4c 16 45 16 3f 16 38 16 32 16 2b 16 25 16 1f 16     L.E.?.8.2.+.%...
     c4c:	18 16 12 16 0b 16 05 16 ff 15 f8 15 f2 15 ec 15     ................
     c5c:	e5 15 df 15 d9 15 d3 15 cc 15 c6 15 c0 15 ba 15     ................
     c6c:	b4 15 ad 15 a7 15 a1 15 9b 15 95 15 8f 15 89 15     ................
     c7c:	83 15 7d 15 77 15 70 15 6a 15 64 15 5e 15 58 15     ..}.w.p.j.d.^.X.
     c8c:	53 15 4d 15 47 15 41 15 3b 15 35 15 2f 15 29 15     S.M.G.A.;.5./.).
     c9c:	23 15 1d 15 18 15 12 15 0c 15 06 15 00 15 fb 14     #...............
     cac:	f5 14 ef 14 e9 14 e4 14 de 14 d8 14 d2 14 cd 14     ................
     cbc:	c7 14 c1 14 bc 14 b6 14 b1 14 ab 14 a5 14 a0 14     ................
     ccc:	9a 14 95 14 8f 14 8a 14 84 14 7f 14 79 14 74 14     ............y.t.
     cdc:	6e 14 69 14 63 14 5e 14 58 14 53 14 4e 14 48 14     n.i.c.^.X.S.N.H.
     cec:	43 14 3d 14 38 14 33 14 2d 14 28 14 23 14 1d 14     C.=.8.3.-.(.#...
     cfc:	18 14 13 14 0d 14 08 14 03 14 fe 13 f8 13 f3 13     ................
     d0c:	ee 13 e9 13 e4 13 de 13 d9 13 d4 13 cf 13 ca 13     ................
     d1c:	c5 13 c0 13 bb 13 b5 13 b0 13 ab 13 a6 13 a1 13     ................
     d2c:	9c 13 97 13 92 13 8d 13 88 13                       ..........

00000d36 <__ctors_end>:
     d36:	11 24       	eor	r1, r1
     d38:	1f be       	out	0x3f, r1	; 63
     d3a:	cf ef       	ldi	r28, 0xFF	; 255
     d3c:	d0 e1       	ldi	r29, 0x10	; 16
     d3e:	de bf       	out	0x3e, r29	; 62
     d40:	cd bf       	out	0x3d, r28	; 61

00000d42 <__do_copy_data>:
     d42:	11 e0       	ldi	r17, 0x01	; 1
     d44:	a0 e0       	ldi	r26, 0x00	; 0
     d46:	b1 e0       	ldi	r27, 0x01	; 1
     d48:	ec e9       	ldi	r30, 0x9C	; 156
     d4a:	f9 e2       	ldi	r31, 0x29	; 41
     d4c:	00 e0       	ldi	r16, 0x00	; 0
     d4e:	0b bf       	out	0x3b, r16	; 59
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <__do_copy_data+0x14>
     d52:	07 90       	elpm	r0, Z+
     d54:	0d 92       	st	X+, r0
     d56:	ac 37       	cpi	r26, 0x7C	; 124
     d58:	b1 07       	cpc	r27, r17
     d5a:	d9 f7       	brne	.-10     	; 0xd52 <__do_copy_data+0x10>

00000d5c <__do_clear_bss>:
     d5c:	11 e0       	ldi	r17, 0x01	; 1
     d5e:	ac e7       	ldi	r26, 0x7C	; 124
     d60:	b1 e0       	ldi	r27, 0x01	; 1
     d62:	01 c0       	rjmp	.+2      	; 0xd66 <.do_clear_bss_start>

00000d64 <.do_clear_bss_loop>:
     d64:	1d 92       	st	X+, r1

00000d66 <.do_clear_bss_start>:
     d66:	a7 3a       	cpi	r26, 0xA7	; 167
     d68:	b1 07       	cpc	r27, r17
     d6a:	e1 f7       	brne	.-8      	; 0xd64 <.do_clear_bss_loop>
     d6c:	0e 94 3e 0c 	call	0x187c	; 0x187c <main>
     d70:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <_exit>

00000d74 <__bad_interrupt>:
     d74:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000d78 <a2dSingleSample>:
     d78:	35 98       	cbi	0x06, 5	; 6
     d7a:	08 95       	ret

00000d7c <a2dAutoTrigger>:
     d7c:	35 9a       	sbi	0x06, 5	; 6
     d7e:	08 95       	ret

00000d80 <a2dSet10bit>:
     d80:	3d 98       	cbi	0x07, 5	; 7
     d82:	08 95       	ret

00000d84 <a2dSet8bit>:
     d84:	3d 9a       	sbi	0x07, 5	; 7
     d86:	08 95       	ret

00000d88 <a2dTurnOn>:
     d88:	37 9a       	sbi	0x06, 7	; 6
     d8a:	08 95       	ret

00000d8c <a2dTurnOff>:
     d8c:	33 98       	cbi	0x06, 3	; 6
     d8e:	37 98       	cbi	0x06, 7	; 6
     d90:	08 95       	ret

00000d92 <a2dSetPrescaler>:
     d92:	96 b1       	in	r25, 0x06	; 6
     d94:	98 7f       	andi	r25, 0xF8	; 248
     d96:	89 2b       	or	r24, r25
     d98:	86 b9       	out	0x06, r24	; 6
     d9a:	08 95       	ret

00000d9c <a2dSetReference>:
     d9c:	97 b1       	in	r25, 0x07	; 7
     d9e:	82 95       	swap	r24
     da0:	88 0f       	add	r24, r24
     da2:	88 0f       	add	r24, r24
     da4:	80 7c       	andi	r24, 0xC0	; 192
     da6:	9f 73       	andi	r25, 0x3F	; 63
     da8:	98 2b       	or	r25, r24
     daa:	97 b9       	out	0x07, r25	; 7
     dac:	08 95       	ret

00000dae <a2dInit>:
     dae:	0e 94 c4 06 	call	0xd88	; 0xd88 <a2dTurnOn>
     db2:	0e 94 bc 06 	call	0xd78	; 0xd78 <a2dSingleSample>
     db6:	86 e0       	ldi	r24, 0x06	; 6
     db8:	0e 94 c9 06 	call	0xd92	; 0xd92 <a2dSetPrescaler>
     dbc:	81 e0       	ldi	r24, 0x01	; 1
     dbe:	0e 94 ce 06 	call	0xd9c	; 0xd9c <a2dSetReference>
     dc2:	0e 94 c0 06 	call	0xd80	; 0xd80 <a2dSet10bit>
     dc6:	10 92 89 01 	sts	0x0189, r1
     dca:	33 9a       	sbi	0x06, 3	; 6
     dcc:	78 94       	sei
     dce:	08 95       	ret

00000dd0 <a2dSetChannel>:
     dd0:	97 b1       	in	r25, 0x07	; 7
     dd2:	8f 71       	andi	r24, 0x1F	; 31
     dd4:	90 7e       	andi	r25, 0xE0	; 224
     dd6:	98 2b       	or	r25, r24
     dd8:	97 b9       	out	0x07, r25	; 7
     dda:	08 95       	ret

00000ddc <a2dStartConvert>:
     ddc:	34 9a       	sbi	0x06, 4	; 6
     dde:	36 9a       	sbi	0x06, 6	; 6
     de0:	08 95       	ret

00000de2 <a2dIsComplete>:
     de2:	86 b1       	in	r24, 0x06	; 6
     de4:	80 74       	andi	r24, 0x40	; 64
     de6:	08 95       	ret

00000de8 <a2dConvert10bit>:
     de8:	10 92 89 01 	sts	0x0189, r1
     dec:	97 b1       	in	r25, 0x07	; 7
     dee:	8f 71       	andi	r24, 0x1F	; 31
     df0:	90 7e       	andi	r25, 0xE0	; 224
     df2:	98 2b       	or	r25, r24
     df4:	97 b9       	out	0x07, r25	; 7
     df6:	34 9a       	sbi	0x06, 4	; 6
     df8:	36 9a       	sbi	0x06, 6	; 6
     dfa:	80 91 89 01 	lds	r24, 0x0189
     dfe:	88 23       	and	r24, r24
     e00:	e1 f3       	breq	.-8      	; 0xdfa <a2dConvert10bit+0x12>
     e02:	24 b1       	in	r18, 0x04	; 4
     e04:	35 b1       	in	r19, 0x05	; 5
     e06:	82 2f       	mov	r24, r18
     e08:	93 2f       	mov	r25, r19
     e0a:	08 95       	ret

00000e0c <a2dConvert8bit>:
     e0c:	0e 94 f4 06 	call	0xde8	; 0xde8 <a2dConvert10bit>
     e10:	96 95       	lsr	r25
     e12:	87 95       	ror	r24
     e14:	96 95       	lsr	r25
     e16:	87 95       	ror	r24
     e18:	08 95       	ret

00000e1a <__vector_21>:
     e1a:	1f 92       	push	r1
     e1c:	0f 92       	push	r0
     e1e:	0f b6       	in	r0, 0x3f	; 63
     e20:	0f 92       	push	r0
     e22:	11 24       	eor	r1, r1
     e24:	8f 93       	push	r24
     e26:	81 e0       	ldi	r24, 0x01	; 1
     e28:	80 93 89 01 	sts	0x0189, r24
     e2c:	8f 91       	pop	r24
     e2e:	0f 90       	pop	r0
     e30:	0f be       	out	0x3f, r0	; 63
     e32:	0f 90       	pop	r0
     e34:	1f 90       	pop	r1
     e36:	18 95       	reti

00000e38 <HW_init>:
	//***************************************************************************************
	//***************************************************************************************	
	void HW_init(void)
	{
		//--------- Initial all inputs/outputs & Start values
		BUZER_init();						// output & OFF
     e38:	a7 9a       	sbi	0x14, 7	; 20
     e3a:	af 98       	cbi	0x15, 7	; 21
		
		GLED_init();						// output & OFF
     e3c:	a5 9a       	sbi	0x14, 5	; 20
     e3e:	ad 98       	cbi	0x15, 5	; 21
		RLED_init();						// output & OFF
     e40:	a6 9a       	sbi	0x14, 6	; 20
     e42:	ae 98       	cbi	0x15, 6	; 21
	}	//HW_init
     e44:	08 95       	ret

00000e46 <BUZZER>:
	
	void BUZZER(unsigned char times)
	{
		unsigned char 				i;

		for(i=0; i<times; i++)
     e46:	88 23       	and	r24, r24
     e48:	91 f0       	breq	.+36     	; 0xe6e <BUZZER+0x28>
     e4a:	90 e0       	ldi	r25, 0x00	; 0
		{
			BUZER(ON);
     e4c:	af 9a       	sbi	0x15, 7	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e4e:	e7 e9       	ldi	r30, 0x97	; 151
     e50:	fa e3       	ldi	r31, 0x3A	; 58
     e52:	31 97       	sbiw	r30, 0x01	; 1
     e54:	f1 f7       	brne	.-4      	; 0xe52 <BUZZER+0xc>
     e56:	00 c0       	rjmp	.+0      	; 0xe58 <BUZZER+0x12>
     e58:	00 00       	nop
				_delay_ms(SIGNAL_ON_DUR *30);
			
			BUZER(OFF);
     e5a:	af 98       	cbi	0x15, 7	; 21
     e5c:	e7 ec       	ldi	r30, 0xC7	; 199
     e5e:	ff ea       	ldi	r31, 0xAF	; 175
     e60:	31 97       	sbiw	r30, 0x01	; 1
     e62:	f1 f7       	brne	.-4      	; 0xe60 <BUZZER+0x1a>
     e64:	00 c0       	rjmp	.+0      	; 0xe66 <BUZZER+0x20>
     e66:	00 00       	nop
	
	void BUZZER(unsigned char times)
	{
		unsigned char 				i;

		for(i=0; i<times; i++)
     e68:	9f 5f       	subi	r25, 0xFF	; 255
     e6a:	98 17       	cp	r25, r24
     e6c:	78 f3       	brcs	.-34     	; 0xe4c <BUZZER+0x6>
     e6e:	08 95       	ret

00000e70 <pinChange>:

#include<util/delay.h>

void pinChange(int a, int b)
{
	if(b == 0)
     e70:	61 15       	cp	r22, r1
     e72:	71 05       	cpc	r23, r1
     e74:	09 f0       	breq	.+2      	; 0xe78 <pinChange+0x8>
     e76:	a0 c0       	rjmp	.+320    	; 0xfb8 <pinChange+0x148>
	{
		if(a == eS_PORTA0)
     e78:	00 97       	sbiw	r24, 0x00	; 0
     e7a:	11 f4       	brne	.+4      	; 0xe80 <pinChange+0x10>
		  PORTA &= ~(1<<PA0);
     e7c:	d8 98       	cbi	0x1b, 0	; 27
     e7e:	08 95       	ret
		else if(a == eS_PORTA1)
     e80:	81 30       	cpi	r24, 0x01	; 1
     e82:	91 05       	cpc	r25, r1
     e84:	11 f4       	brne	.+4      	; 0xe8a <pinChange+0x1a>
		  PORTA &= ~(1<<PA1); 
     e86:	d9 98       	cbi	0x1b, 1	; 27
     e88:	08 95       	ret
		else if(a == eS_PORTA2)
     e8a:	82 30       	cpi	r24, 0x02	; 2
     e8c:	91 05       	cpc	r25, r1
     e8e:	11 f4       	brne	.+4      	; 0xe94 <pinChange+0x24>
		  PORTA &= ~(1<<PA2);
     e90:	da 98       	cbi	0x1b, 2	; 27
     e92:	08 95       	ret
		else if(a == eS_PORTA3)
     e94:	83 30       	cpi	r24, 0x03	; 3
     e96:	91 05       	cpc	r25, r1
     e98:	11 f4       	brne	.+4      	; 0xe9e <pinChange+0x2e>
		  PORTA &= ~(1<<PA3); 
     e9a:	db 98       	cbi	0x1b, 3	; 27
     e9c:	08 95       	ret
		else if(a == eS_PORTA4)
     e9e:	84 30       	cpi	r24, 0x04	; 4
     ea0:	91 05       	cpc	r25, r1
     ea2:	11 f4       	brne	.+4      	; 0xea8 <pinChange+0x38>
		  PORTA &= ~(1<<PA4); 
     ea4:	dc 98       	cbi	0x1b, 4	; 27
     ea6:	08 95       	ret
		else if(a == eS_PORTA5)
     ea8:	85 30       	cpi	r24, 0x05	; 5
     eaa:	91 05       	cpc	r25, r1
     eac:	11 f4       	brne	.+4      	; 0xeb2 <pinChange+0x42>
		  PORTA &= ~(1<<PA5); 
     eae:	dd 98       	cbi	0x1b, 5	; 27
     eb0:	08 95       	ret
		else if(a == eS_PORTA6)
     eb2:	86 30       	cpi	r24, 0x06	; 6
     eb4:	91 05       	cpc	r25, r1
     eb6:	11 f4       	brne	.+4      	; 0xebc <pinChange+0x4c>
		  PORTA &= ~(1<<PA6);  
     eb8:	de 98       	cbi	0x1b, 6	; 27
     eba:	08 95       	ret
		else if(a == eS_PORTA7)
     ebc:	87 30       	cpi	r24, 0x07	; 7
     ebe:	91 05       	cpc	r25, r1
     ec0:	11 f4       	brne	.+4      	; 0xec6 <pinChange+0x56>
		  PORTA &= ~(1<<PA7);
     ec2:	df 98       	cbi	0x1b, 7	; 27
     ec4:	08 95       	ret
		else if(a == eS_PORTB0)
     ec6:	8a 30       	cpi	r24, 0x0A	; 10
     ec8:	91 05       	cpc	r25, r1
     eca:	11 f4       	brne	.+4      	; 0xed0 <pinChange+0x60>
		  PORTB &= ~(1<<PB0);  
     ecc:	c0 98       	cbi	0x18, 0	; 24
     ece:	08 95       	ret
		else if(a == eS_PORTB1)
     ed0:	8b 30       	cpi	r24, 0x0B	; 11
     ed2:	91 05       	cpc	r25, r1
     ed4:	11 f4       	brne	.+4      	; 0xeda <pinChange+0x6a>
		  PORTB &= ~(1<<PB1);
     ed6:	c1 98       	cbi	0x18, 1	; 24
     ed8:	08 95       	ret
		else if(a == eS_PORTB2)
     eda:	8c 30       	cpi	r24, 0x0C	; 12
     edc:	91 05       	cpc	r25, r1
     ede:	11 f4       	brne	.+4      	; 0xee4 <pinChange+0x74>
		  PORTB &= ~(1<<PB2);  
     ee0:	c2 98       	cbi	0x18, 2	; 24
     ee2:	08 95       	ret
		else if(a == eS_PORTB3)
     ee4:	8d 30       	cpi	r24, 0x0D	; 13
     ee6:	91 05       	cpc	r25, r1
     ee8:	11 f4       	brne	.+4      	; 0xeee <pinChange+0x7e>
		  PORTB &= ~(1<<PB3);  
     eea:	c3 98       	cbi	0x18, 3	; 24
     eec:	08 95       	ret
		else if(a == eS_PORTB4)
     eee:	8e 30       	cpi	r24, 0x0E	; 14
     ef0:	91 05       	cpc	r25, r1
     ef2:	11 f4       	brne	.+4      	; 0xef8 <pinChange+0x88>
		  PORTB &= ~(1<<PB4);  
     ef4:	c4 98       	cbi	0x18, 4	; 24
     ef6:	08 95       	ret
		else if(a == eS_PORTB5)
     ef8:	8f 30       	cpi	r24, 0x0F	; 15
     efa:	91 05       	cpc	r25, r1
     efc:	11 f4       	brne	.+4      	; 0xf02 <pinChange+0x92>
		  PORTB &= ~(1<<PB5);  
     efe:	c5 98       	cbi	0x18, 5	; 24
     f00:	08 95       	ret
		else if(a == eS_PORTB6)
     f02:	80 31       	cpi	r24, 0x10	; 16
     f04:	91 05       	cpc	r25, r1
     f06:	11 f4       	brne	.+4      	; 0xf0c <pinChange+0x9c>
		  PORTB &= ~(1<<PB6);  
     f08:	c6 98       	cbi	0x18, 6	; 24
     f0a:	08 95       	ret
		else if(a == eS_PORTB7)
     f0c:	81 31       	cpi	r24, 0x11	; 17
     f0e:	91 05       	cpc	r25, r1
     f10:	11 f4       	brne	.+4      	; 0xf16 <pinChange+0xa6>
		  PORTB &= ~(1<<PB7);
     f12:	c7 98       	cbi	0x18, 7	; 24
     f14:	08 95       	ret
		else if(a == eS_PORTC0)
     f16:	84 31       	cpi	r24, 0x14	; 20
     f18:	91 05       	cpc	r25, r1
     f1a:	11 f4       	brne	.+4      	; 0xf20 <pinChange+0xb0>
		  PORTC &= ~(1<<PC0);   
     f1c:	a8 98       	cbi	0x15, 0	; 21
     f1e:	08 95       	ret
		else if(a == eS_PORTC1)
     f20:	85 31       	cpi	r24, 0x15	; 21
     f22:	91 05       	cpc	r25, r1
     f24:	11 f4       	brne	.+4      	; 0xf2a <pinChange+0xba>
		  PORTC &= ~(1<<PC1); 
     f26:	a9 98       	cbi	0x15, 1	; 21
     f28:	08 95       	ret
		else if(a == eS_PORTC2)
     f2a:	86 31       	cpi	r24, 0x16	; 22
     f2c:	91 05       	cpc	r25, r1
     f2e:	11 f4       	brne	.+4      	; 0xf34 <pinChange+0xc4>
		  PORTC &= ~(1<<PC2);
     f30:	aa 98       	cbi	0x15, 2	; 21
     f32:	08 95       	ret
		else if(a == eS_PORTC3)
     f34:	87 31       	cpi	r24, 0x17	; 23
     f36:	91 05       	cpc	r25, r1
     f38:	11 f4       	brne	.+4      	; 0xf3e <pinChange+0xce>
		  PORTC &= ~(1<<PC3);   
     f3a:	ab 98       	cbi	0x15, 3	; 21
     f3c:	08 95       	ret
		else if(a == eS_PORTC4)
     f3e:	88 31       	cpi	r24, 0x18	; 24
     f40:	91 05       	cpc	r25, r1
     f42:	11 f4       	brne	.+4      	; 0xf48 <pinChange+0xd8>
		  PORTC &= ~(1<<PC4);  
     f44:	ac 98       	cbi	0x15, 4	; 21
     f46:	08 95       	ret
		else if(a == eS_PORTC5)
     f48:	89 31       	cpi	r24, 0x19	; 25
     f4a:	91 05       	cpc	r25, r1
     f4c:	11 f4       	brne	.+4      	; 0xf52 <pinChange+0xe2>
		  PORTC &= ~(1<<PC5);  
     f4e:	ad 98       	cbi	0x15, 5	; 21
     f50:	08 95       	ret
        else if(a == eS_PORTC6)
     f52:	8a 31       	cpi	r24, 0x1A	; 26
     f54:	91 05       	cpc	r25, r1
     f56:	11 f4       	brne	.+4      	; 0xf5c <pinChange+0xec>
          PORTC &= ~(1<<PC6);		
     f58:	ae 98       	cbi	0x15, 6	; 21
     f5a:	08 95       	ret
		else if(a == eS_PORTC7)
     f5c:	8b 31       	cpi	r24, 0x1B	; 27
     f5e:	91 05       	cpc	r25, r1
     f60:	11 f4       	brne	.+4      	; 0xf66 <pinChange+0xf6>
		  PORTC &= ~(1<<PC7);
     f62:	af 98       	cbi	0x15, 7	; 21
     f64:	08 95       	ret
		else if(a == eS_PORTD0)
     f66:	8e 31       	cpi	r24, 0x1E	; 30
     f68:	91 05       	cpc	r25, r1
     f6a:	11 f4       	brne	.+4      	; 0xf70 <pinChange+0x100>
		  PORTD &= ~(1<<PD0);
     f6c:	90 98       	cbi	0x12, 0	; 18
     f6e:	08 95       	ret
		else if(a == eS_PORTD1)
     f70:	8f 31       	cpi	r24, 0x1F	; 31
     f72:	91 05       	cpc	r25, r1
     f74:	11 f4       	brne	.+4      	; 0xf7a <pinChange+0x10a>
		  PORTD &= ~(1<<PD1);  
     f76:	91 98       	cbi	0x12, 1	; 18
     f78:	08 95       	ret
		else if(a == eS_PORTD2)
     f7a:	80 32       	cpi	r24, 0x20	; 32
     f7c:	91 05       	cpc	r25, r1
     f7e:	11 f4       	brne	.+4      	; 0xf84 <pinChange+0x114>
		  PORTD &= ~(1<<PD2);
     f80:	92 98       	cbi	0x12, 2	; 18
     f82:	08 95       	ret
		else if(a == eS_PORTD3)
     f84:	81 32       	cpi	r24, 0x21	; 33
     f86:	91 05       	cpc	r25, r1
     f88:	11 f4       	brne	.+4      	; 0xf8e <pinChange+0x11e>
		  PORTD &= ~(1<<PD3);
     f8a:	93 98       	cbi	0x12, 3	; 18
     f8c:	08 95       	ret
		else if(a == eS_PORTD4)
     f8e:	82 32       	cpi	r24, 0x22	; 34
     f90:	91 05       	cpc	r25, r1
     f92:	11 f4       	brne	.+4      	; 0xf98 <pinChange+0x128>
		  PORTD &= ~(1<<PD4);
     f94:	94 98       	cbi	0x12, 4	; 18
     f96:	08 95       	ret
		else if(a == eS_PORTD5)
     f98:	83 32       	cpi	r24, 0x23	; 35
     f9a:	91 05       	cpc	r25, r1
     f9c:	11 f4       	brne	.+4      	; 0xfa2 <pinChange+0x132>
		  PORTD &= ~(1<<PD5);
     f9e:	95 98       	cbi	0x12, 5	; 18
     fa0:	08 95       	ret
		else if(a == eS_PORTD6)
     fa2:	84 32       	cpi	r24, 0x24	; 36
     fa4:	91 05       	cpc	r25, r1
     fa6:	11 f4       	brne	.+4      	; 0xfac <pinChange+0x13c>
		  PORTD &= ~(1<<PD6);   
     fa8:	96 98       	cbi	0x12, 6	; 18
     faa:	08 95       	ret
		else if(a == eS_PORTD7)
     fac:	85 32       	cpi	r24, 0x25	; 37
     fae:	91 05       	cpc	r25, r1
     fb0:	09 f0       	breq	.+2      	; 0xfb4 <pinChange+0x144>
     fb2:	a0 c0       	rjmp	.+320    	; 0x10f4 <pinChange+0x284>
		  PORTD &= ~(1<<PD7);           
     fb4:	97 98       	cbi	0x12, 7	; 18
     fb6:	08 95       	ret
	}
	else
	{
		if(a == eS_PORTA0)
     fb8:	00 97       	sbiw	r24, 0x00	; 0
     fba:	11 f4       	brne	.+4      	; 0xfc0 <pinChange+0x150>
		  PORTA |= (1<<PA0);
     fbc:	d8 9a       	sbi	0x1b, 0	; 27
     fbe:	08 95       	ret
		else if(a == eS_PORTA1)
     fc0:	81 30       	cpi	r24, 0x01	; 1
     fc2:	91 05       	cpc	r25, r1
     fc4:	11 f4       	brne	.+4      	; 0xfca <pinChange+0x15a>
		  PORTA |= (1<<PA1);
     fc6:	d9 9a       	sbi	0x1b, 1	; 27
     fc8:	08 95       	ret
		else if(a == eS_PORTA2)
     fca:	82 30       	cpi	r24, 0x02	; 2
     fcc:	91 05       	cpc	r25, r1
     fce:	11 f4       	brne	.+4      	; 0xfd4 <pinChange+0x164>
		  PORTA |= (1<<PA2);
     fd0:	da 9a       	sbi	0x1b, 2	; 27
     fd2:	08 95       	ret
		else if(a == eS_PORTA3)
     fd4:	83 30       	cpi	r24, 0x03	; 3
     fd6:	91 05       	cpc	r25, r1
     fd8:	11 f4       	brne	.+4      	; 0xfde <pinChange+0x16e>
		  PORTA |= (1<<PA3);
     fda:	db 9a       	sbi	0x1b, 3	; 27
     fdc:	08 95       	ret
		else if(a == eS_PORTA4)
     fde:	84 30       	cpi	r24, 0x04	; 4
     fe0:	91 05       	cpc	r25, r1
     fe2:	11 f4       	brne	.+4      	; 0xfe8 <pinChange+0x178>
		  PORTA |= (1<<PA4);
     fe4:	dc 9a       	sbi	0x1b, 4	; 27
     fe6:	08 95       	ret
		else if(a == eS_PORTA5)
     fe8:	85 30       	cpi	r24, 0x05	; 5
     fea:	91 05       	cpc	r25, r1
     fec:	11 f4       	brne	.+4      	; 0xff2 <pinChange+0x182>
		  PORTA |= (1<<PA5);
     fee:	dd 9a       	sbi	0x1b, 5	; 27
     ff0:	08 95       	ret
		else if(a == eS_PORTA6)
     ff2:	86 30       	cpi	r24, 0x06	; 6
     ff4:	91 05       	cpc	r25, r1
     ff6:	11 f4       	brne	.+4      	; 0xffc <pinChange+0x18c>
		  PORTA |= (1<<PA6);
     ff8:	de 9a       	sbi	0x1b, 6	; 27
     ffa:	08 95       	ret
		else if(a == eS_PORTA7)
     ffc:	87 30       	cpi	r24, 0x07	; 7
     ffe:	91 05       	cpc	r25, r1
    1000:	11 f4       	brne	.+4      	; 0x1006 <pinChange+0x196>
		  PORTA |= (1<<PA7);
    1002:	df 9a       	sbi	0x1b, 7	; 27
    1004:	08 95       	ret
		else if(a == eS_PORTB0)
    1006:	8a 30       	cpi	r24, 0x0A	; 10
    1008:	91 05       	cpc	r25, r1
    100a:	11 f4       	brne	.+4      	; 0x1010 <pinChange+0x1a0>
	  	  PORTB |= (1<<PB0);
    100c:	c0 9a       	sbi	0x18, 0	; 24
    100e:	08 95       	ret
		else if(a == eS_PORTB1)
    1010:	8b 30       	cpi	r24, 0x0B	; 11
    1012:	91 05       	cpc	r25, r1
    1014:	11 f4       	brne	.+4      	; 0x101a <pinChange+0x1aa>
		  PORTB |= (1<<PB1);
    1016:	c1 9a       	sbi	0x18, 1	; 24
    1018:	08 95       	ret
		else if(a == eS_PORTB2)
    101a:	8c 30       	cpi	r24, 0x0C	; 12
    101c:	91 05       	cpc	r25, r1
    101e:	11 f4       	brne	.+4      	; 0x1024 <pinChange+0x1b4>
		  PORTB |= (1<<PB2);
    1020:	c2 9a       	sbi	0x18, 2	; 24
    1022:	08 95       	ret
		else if(a == eS_PORTB3)
    1024:	8d 30       	cpi	r24, 0x0D	; 13
    1026:	91 05       	cpc	r25, r1
    1028:	11 f4       	brne	.+4      	; 0x102e <pinChange+0x1be>
		  PORTB |= (1<<PB3);
    102a:	c3 9a       	sbi	0x18, 3	; 24
    102c:	08 95       	ret
		else if(a == eS_PORTB4)
    102e:	8e 30       	cpi	r24, 0x0E	; 14
    1030:	91 05       	cpc	r25, r1
    1032:	11 f4       	brne	.+4      	; 0x1038 <pinChange+0x1c8>
		  PORTB |= (1<<PB4);
    1034:	c4 9a       	sbi	0x18, 4	; 24
    1036:	08 95       	ret
		else if(a == eS_PORTB5)
    1038:	8f 30       	cpi	r24, 0x0F	; 15
    103a:	91 05       	cpc	r25, r1
    103c:	11 f4       	brne	.+4      	; 0x1042 <pinChange+0x1d2>
		  PORTB |= (1<<PB5);
    103e:	c5 9a       	sbi	0x18, 5	; 24
    1040:	08 95       	ret
		else if(a == eS_PORTB6)
    1042:	80 31       	cpi	r24, 0x10	; 16
    1044:	91 05       	cpc	r25, r1
    1046:	11 f4       	brne	.+4      	; 0x104c <pinChange+0x1dc>
		  PORTB |= (1<<PB6);
    1048:	c6 9a       	sbi	0x18, 6	; 24
    104a:	08 95       	ret
		else if(a == eS_PORTB7)
    104c:	81 31       	cpi	r24, 0x11	; 17
    104e:	91 05       	cpc	r25, r1
    1050:	11 f4       	brne	.+4      	; 0x1056 <pinChange+0x1e6>
		  PORTB |= (1<<PB7);
    1052:	c7 9a       	sbi	0x18, 7	; 24
    1054:	08 95       	ret
		else if(a == eS_PORTC0)
    1056:	84 31       	cpi	r24, 0x14	; 20
    1058:	91 05       	cpc	r25, r1
    105a:	11 f4       	brne	.+4      	; 0x1060 <pinChange+0x1f0>
		  PORTC |= (1<<PC0);
    105c:	a8 9a       	sbi	0x15, 0	; 21
    105e:	08 95       	ret
		else if(a == eS_PORTC1)
    1060:	85 31       	cpi	r24, 0x15	; 21
    1062:	91 05       	cpc	r25, r1
    1064:	11 f4       	brne	.+4      	; 0x106a <pinChange+0x1fa>
		  PORTC |= (1<<PC1);
    1066:	a9 9a       	sbi	0x15, 1	; 21
    1068:	08 95       	ret
		else if(a == eS_PORTC2)
    106a:	86 31       	cpi	r24, 0x16	; 22
    106c:	91 05       	cpc	r25, r1
    106e:	11 f4       	brne	.+4      	; 0x1074 <pinChange+0x204>
	  	  PORTC |= (1<<PC2);
    1070:	aa 9a       	sbi	0x15, 2	; 21
    1072:	08 95       	ret
		else if(a == eS_PORTC3)
    1074:	87 31       	cpi	r24, 0x17	; 23
    1076:	91 05       	cpc	r25, r1
    1078:	11 f4       	brne	.+4      	; 0x107e <pinChange+0x20e>
		  PORTC |= (1<<PC3);
    107a:	ab 9a       	sbi	0x15, 3	; 21
    107c:	08 95       	ret
		else if(a == eS_PORTC4)
    107e:	88 31       	cpi	r24, 0x18	; 24
    1080:	91 05       	cpc	r25, r1
    1082:	11 f4       	brne	.+4      	; 0x1088 <pinChange+0x218>
		  PORTC |= (1<<PC4);
    1084:	ac 9a       	sbi	0x15, 4	; 21
    1086:	08 95       	ret
		else if(a == eS_PORTC5)
    1088:	89 31       	cpi	r24, 0x19	; 25
    108a:	91 05       	cpc	r25, r1
    108c:	11 f4       	brne	.+4      	; 0x1092 <pinChange+0x222>
		  PORTC |= (1<<PC5);
    108e:	ad 9a       	sbi	0x15, 5	; 21
    1090:	08 95       	ret
		else if(a == eS_PORTC6)
    1092:	8a 31       	cpi	r24, 0x1A	; 26
    1094:	91 05       	cpc	r25, r1
    1096:	11 f4       	brne	.+4      	; 0x109c <pinChange+0x22c>
		  PORTC |= (1<<PC6);  
    1098:	ae 9a       	sbi	0x15, 6	; 21
    109a:	08 95       	ret
		else if(a == eS_PORTC7)
    109c:	8b 31       	cpi	r24, 0x1B	; 27
    109e:	91 05       	cpc	r25, r1
    10a0:	11 f4       	brne	.+4      	; 0x10a6 <pinChange+0x236>
		  PORTC |= (1<<PC7);
    10a2:	af 9a       	sbi	0x15, 7	; 21
    10a4:	08 95       	ret
		else if(a == eS_PORTD0)
    10a6:	8e 31       	cpi	r24, 0x1E	; 30
    10a8:	91 05       	cpc	r25, r1
    10aa:	11 f4       	brne	.+4      	; 0x10b0 <pinChange+0x240>
		  PORTD |= (1<<PD0);
    10ac:	90 9a       	sbi	0x12, 0	; 18
    10ae:	08 95       	ret
		else if(a == eS_PORTD1)
    10b0:	8f 31       	cpi	r24, 0x1F	; 31
    10b2:	91 05       	cpc	r25, r1
    10b4:	11 f4       	brne	.+4      	; 0x10ba <pinChange+0x24a>
		  PORTD |= (1<<PD1);
    10b6:	91 9a       	sbi	0x12, 1	; 18
    10b8:	08 95       	ret
		else if(a == eS_PORTD2)
    10ba:	80 32       	cpi	r24, 0x20	; 32
    10bc:	91 05       	cpc	r25, r1
    10be:	11 f4       	brne	.+4      	; 0x10c4 <pinChange+0x254>
		  PORTD |= (1<<PD2);
    10c0:	92 9a       	sbi	0x12, 2	; 18
    10c2:	08 95       	ret
		else if(a == eS_PORTD3)
    10c4:	81 32       	cpi	r24, 0x21	; 33
    10c6:	91 05       	cpc	r25, r1
    10c8:	11 f4       	brne	.+4      	; 0x10ce <pinChange+0x25e>
		  PORTD |= (1<<PD3);
    10ca:	93 9a       	sbi	0x12, 3	; 18
    10cc:	08 95       	ret
		else if(a == eS_PORTD4)
    10ce:	82 32       	cpi	r24, 0x22	; 34
    10d0:	91 05       	cpc	r25, r1
    10d2:	11 f4       	brne	.+4      	; 0x10d8 <pinChange+0x268>
		  PORTD |= (1<<PD4);
    10d4:	94 9a       	sbi	0x12, 4	; 18
    10d6:	08 95       	ret
		else if(a == eS_PORTD5)
    10d8:	83 32       	cpi	r24, 0x23	; 35
    10da:	91 05       	cpc	r25, r1
    10dc:	11 f4       	brne	.+4      	; 0x10e2 <pinChange+0x272>
		  PORTD |= (1<<PD5);
    10de:	95 9a       	sbi	0x12, 5	; 18
    10e0:	08 95       	ret
		else if(a == eS_PORTD6)
    10e2:	84 32       	cpi	r24, 0x24	; 36
    10e4:	91 05       	cpc	r25, r1
    10e6:	11 f4       	brne	.+4      	; 0x10ec <pinChange+0x27c>
		  PORTD |= (1<<PD6);
    10e8:	96 9a       	sbi	0x12, 6	; 18
    10ea:	08 95       	ret
		else if(a == eS_PORTD7)
    10ec:	85 32       	cpi	r24, 0x25	; 37
    10ee:	91 05       	cpc	r25, r1
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <pinChange+0x284>
		  PORTD |= (1<<PD7);
    10f2:	97 9a       	sbi	0x12, 7	; 18
    10f4:	08 95       	ret

000010f6 <Lcd8_Port>:



//LCD 8 Bit Interfacing Functions
void Lcd8_Port(char a)
{
    10f6:	0f 93       	push	r16
    10f8:	1f 93       	push	r17
    10fa:	08 2f       	mov	r16, r24
	if(a & 1)
    10fc:	18 2f       	mov	r17, r24
    10fe:	80 ff       	sbrs	r24, 0
    1100:	07 c0       	rjmp	.+14     	; 0x1110 <__stack+0x11>
	pinChange(D0,1);
    1102:	80 e0       	ldi	r24, 0x00	; 0
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	61 e0       	ldi	r22, 0x01	; 1
    1108:	70 e0       	ldi	r23, 0x00	; 0
    110a:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    110e:	06 c0       	rjmp	.+12     	; 0x111c <__stack+0x1d>
	else
	pinChange(D0,0);
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	60 e0       	ldi	r22, 0x00	; 0
    1116:	70 e0       	ldi	r23, 0x00	; 0
    1118:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 2)
    111c:	11 ff       	sbrs	r17, 1
    111e:	07 c0       	rjmp	.+14     	; 0x112e <__stack+0x2f>
	pinChange(D1,1);
    1120:	81 e0       	ldi	r24, 0x01	; 1
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	61 e0       	ldi	r22, 0x01	; 1
    1126:	70 e0       	ldi	r23, 0x00	; 0
    1128:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    112c:	06 c0       	rjmp	.+12     	; 0x113a <__stack+0x3b>
	else
	pinChange(D1,0);
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	60 e0       	ldi	r22, 0x00	; 0
    1134:	70 e0       	ldi	r23, 0x00	; 0
    1136:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 4)
    113a:	12 ff       	sbrs	r17, 2
    113c:	07 c0       	rjmp	.+14     	; 0x114c <__stack+0x4d>
	pinChange(D2,1);
    113e:	82 e0       	ldi	r24, 0x02	; 2
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	70 e0       	ldi	r23, 0x00	; 0
    1146:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    114a:	06 c0       	rjmp	.+12     	; 0x1158 <__stack+0x59>
	else
	pinChange(D2,0);
    114c:	82 e0       	ldi	r24, 0x02	; 2
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	60 e0       	ldi	r22, 0x00	; 0
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 8)
    1158:	13 ff       	sbrs	r17, 3
    115a:	07 c0       	rjmp	.+14     	; 0x116a <__stack+0x6b>
	pinChange(D3,1);
    115c:	83 e0       	ldi	r24, 0x03	; 3
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	61 e0       	ldi	r22, 0x01	; 1
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1168:	06 c0       	rjmp	.+12     	; 0x1176 <__stack+0x77>
	else
	pinChange(D3,0);
    116a:	83 e0       	ldi	r24, 0x03	; 3
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 16)
    1176:	14 ff       	sbrs	r17, 4
    1178:	07 c0       	rjmp	.+14     	; 0x1188 <__stack+0x89>
	pinChange(D4,1);
    117a:	88 e1       	ldi	r24, 0x18	; 24
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	61 e0       	ldi	r22, 0x01	; 1
    1180:	70 e0       	ldi	r23, 0x00	; 0
    1182:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1186:	06 c0       	rjmp	.+12     	; 0x1194 <__stack+0x95>
	else
	pinChange(D4,0);
    1188:	88 e1       	ldi	r24, 0x18	; 24
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	60 e0       	ldi	r22, 0x00	; 0
    118e:	70 e0       	ldi	r23, 0x00	; 0
    1190:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>

	if(a & 32)
    1194:	15 ff       	sbrs	r17, 5
    1196:	07 c0       	rjmp	.+14     	; 0x11a6 <__stack+0xa7>
	pinChange(D5,1);
    1198:	89 e1       	ldi	r24, 0x19	; 25
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	61 e0       	ldi	r22, 0x01	; 1
    119e:	70 e0       	ldi	r23, 0x00	; 0
    11a0:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    11a4:	06 c0       	rjmp	.+12     	; 0x11b2 <__stack+0xb3>
	else
	pinChange(D5,0);
    11a6:	89 e1       	ldi	r24, 0x19	; 25
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	60 e0       	ldi	r22, 0x00	; 0
    11ac:	70 e0       	ldi	r23, 0x00	; 0
    11ae:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 64)
    11b2:	16 ff       	sbrs	r17, 6
    11b4:	07 c0       	rjmp	.+14     	; 0x11c4 <__stack+0xc5>
	pinChange(D6,1);
    11b6:	8a e1       	ldi	r24, 0x1A	; 26
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	61 e0       	ldi	r22, 0x01	; 1
    11bc:	70 e0       	ldi	r23, 0x00	; 0
    11be:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    11c2:	06 c0       	rjmp	.+12     	; 0x11d0 <__stack+0xd1>
	else
	pinChange(D6,0);
    11c4:	8a e1       	ldi	r24, 0x1A	; 26
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	60 e0       	ldi	r22, 0x00	; 0
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 128)
    11d0:	00 23       	and	r16, r16
    11d2:	3c f4       	brge	.+14     	; 0x11e2 <__stack+0xe3>
	pinChange(D7,1);
    11d4:	8b e1       	ldi	r24, 0x1B	; 27
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	61 e0       	ldi	r22, 0x01	; 1
    11da:	70 e0       	ldi	r23, 0x00	; 0
    11dc:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    11e0:	06 c0       	rjmp	.+12     	; 0x11ee <__stack+0xef>
	else
	pinChange(D7,0);
    11e2:	8b e1       	ldi	r24, 0x1B	; 27
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	60 e0       	ldi	r22, 0x00	; 0
    11e8:	70 e0       	ldi	r23, 0x00	; 0
    11ea:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
}
    11ee:	1f 91       	pop	r17
    11f0:	0f 91       	pop	r16
    11f2:	08 95       	ret

000011f4 <Lcd8_Cmd>:
void Lcd8_Cmd(char a)
{
    11f4:	1f 93       	push	r17
    11f6:	18 2f       	mov	r17, r24
	pinChange(RS,0);             // => RS = 0
    11f8:	86 e1       	ldi	r24, 0x16	; 22
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	60 e0       	ldi	r22, 0x00	; 0
    11fe:	70 e0       	ldi	r23, 0x00	; 0
    1200:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	Lcd8_Port(a);             //Data transfer
    1204:	81 2f       	mov	r24, r17
    1206:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <Lcd8_Port>
	pinChange(EN,1);             // => E = 1
    120a:	87 e1       	ldi	r24, 0x17	; 23
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	61 e0       	ldi	r22, 0x01	; 1
    1210:	70 e0       	ldi	r23, 0x00	; 0
    1212:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1216:	89 ef       	ldi	r24, 0xF9	; 249
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	01 97       	sbiw	r24, 0x01	; 1
    121c:	f1 f7       	brne	.-4      	; 0x121a <Lcd8_Cmd+0x26>
    121e:	00 c0       	rjmp	.+0      	; 0x1220 <Lcd8_Cmd+0x2c>
    1220:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 0
    1222:	87 e1       	ldi	r24, 0x17	; 23
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	60 e0       	ldi	r22, 0x00	; 0
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    122e:	89 ef       	ldi	r24, 0xF9	; 249
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	01 97       	sbiw	r24, 0x01	; 1
    1234:	f1 f7       	brne	.-4      	; 0x1232 <Lcd8_Cmd+0x3e>
    1236:	00 c0       	rjmp	.+0      	; 0x1238 <Lcd8_Cmd+0x44>
    1238:	00 00       	nop
	_delay_ms(1);
}
    123a:	1f 91       	pop	r17
    123c:	08 95       	ret

0000123e <Lcd8_Clear>:

void Lcd8_Clear()
{
	Lcd8_Cmd(1);
    123e:	81 e0       	ldi	r24, 0x01	; 1
    1240:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
}
    1244:	08 95       	ret

00001246 <Lcd8_Set_Cursor>:

void Lcd8_Set_Cursor(char a, char b)
{
	if(a == 1)
    1246:	81 30       	cpi	r24, 0x01	; 1
    1248:	29 f4       	brne	.+10     	; 0x1254 <Lcd8_Set_Cursor+0xe>
	Lcd8_Cmd(0x80 + b);
    124a:	86 2f       	mov	r24, r22
    124c:	80 58       	subi	r24, 0x80	; 128
    124e:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    1252:	08 95       	ret
	else if(a == 2)
    1254:	82 30       	cpi	r24, 0x02	; 2
    1256:	21 f4       	brne	.+8      	; 0x1260 <Lcd8_Set_Cursor+0x1a>
	Lcd8_Cmd(0xC0 + b);
    1258:	86 2f       	mov	r24, r22
    125a:	80 54       	subi	r24, 0x40	; 64
    125c:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    1260:	08 95       	ret

00001262 <Lcd8_Init>:
}

void Lcd8_Init()
{
	pinChange(RS,0);
    1262:	86 e1       	ldi	r24, 0x16	; 22
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	60 e0       	ldi	r22, 0x00	; 0
    1268:	70 e0       	ldi	r23, 0x00	; 0
    126a:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	pinChange(EN,0);
    126e:	87 e1       	ldi	r24, 0x17	; 23
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	60 e0       	ldi	r22, 0x00	; 0
    1274:	70 e0       	ldi	r23, 0x00	; 0
    1276:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    127a:	87 e8       	ldi	r24, 0x87	; 135
    127c:	93 e1       	ldi	r25, 0x13	; 19
    127e:	01 97       	sbiw	r24, 0x01	; 1
    1280:	f1 f7       	brne	.-4      	; 0x127e <Lcd8_Init+0x1c>
    1282:	00 c0       	rjmp	.+0      	; 0x1284 <Lcd8_Init+0x22>
    1284:	00 00       	nop
	_delay_ms(20);
	///////////// Reset process from datasheet /////////
	Lcd8_Cmd(0x30);
    1286:	80 e3       	ldi	r24, 0x30	; 48
    1288:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    128c:	81 ee       	ldi	r24, 0xE1	; 225
    128e:	94 e0       	ldi	r25, 0x04	; 4
    1290:	01 97       	sbiw	r24, 0x01	; 1
    1292:	f1 f7       	brne	.-4      	; 0x1290 <Lcd8_Init+0x2e>
    1294:	00 c0       	rjmp	.+0      	; 0x1296 <Lcd8_Init+0x34>
    1296:	00 00       	nop
	_delay_ms(5);
	Lcd8_Cmd(0x30);
    1298:	80 e3       	ldi	r24, 0x30	; 48
    129a:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    129e:	89 ef       	ldi	r24, 0xF9	; 249
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	01 97       	sbiw	r24, 0x01	; 1
    12a4:	f1 f7       	brne	.-4      	; 0x12a2 <Lcd8_Init+0x40>
    12a6:	00 c0       	rjmp	.+0      	; 0x12a8 <Lcd8_Init+0x46>
    12a8:	00 00       	nop
	_delay_ms(1);
	Lcd8_Cmd(0x30);
    12aa:	80 e3       	ldi	r24, 0x30	; 48
    12ac:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    12b0:	83 ec       	ldi	r24, 0xC3	; 195
    12b2:	99 e0       	ldi	r25, 0x09	; 9
    12b4:	01 97       	sbiw	r24, 0x01	; 1
    12b6:	f1 f7       	brne	.-4      	; 0x12b4 <Lcd8_Init+0x52>
    12b8:	00 c0       	rjmp	.+0      	; 0x12ba <Lcd8_Init+0x58>
    12ba:	00 00       	nop
	_delay_ms(10);
	/////////////////////////////////////////////////////
	Lcd8_Cmd(0x38);    //function set
    12bc:	88 e3       	ldi	r24, 0x38	; 56
    12be:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
	Lcd8_Cmd(0x0C);    //display on,cursor off,blink off
    12c2:	8c e0       	ldi	r24, 0x0C	; 12
    12c4:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
	Lcd8_Cmd(0x01);    //clear display
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
	Lcd8_Cmd(0x06);    //entry mode, set increment
    12ce:	86 e0       	ldi	r24, 0x06	; 6
    12d0:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
}
    12d4:	08 95       	ret

000012d6 <Lcd8_Write_Char>:

void Lcd8_Write_Char(char a)
{
    12d6:	1f 93       	push	r17
    12d8:	18 2f       	mov	r17, r24
	pinChange(RS,1);             // => RS = 1
    12da:	86 e1       	ldi	r24, 0x16	; 22
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	61 e0       	ldi	r22, 0x01	; 1
    12e0:	70 e0       	ldi	r23, 0x00	; 0
    12e2:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	Lcd8_Port(a);             //Data transfer
    12e6:	81 2f       	mov	r24, r17
    12e8:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <Lcd8_Port>
	pinChange(EN,1);             // => E = 1
    12ec:	87 e1       	ldi	r24, 0x17	; 23
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	61 e0       	ldi	r22, 0x01	; 1
    12f2:	70 e0       	ldi	r23, 0x00	; 0
    12f4:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    12f8:	89 ef       	ldi	r24, 0xF9	; 249
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	01 97       	sbiw	r24, 0x01	; 1
    12fe:	f1 f7       	brne	.-4      	; 0x12fc <Lcd8_Write_Char+0x26>
    1300:	00 c0       	rjmp	.+0      	; 0x1302 <Lcd8_Write_Char+0x2c>
    1302:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 04
    1304:	87 e1       	ldi	r24, 0x17	; 23
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	60 e0       	ldi	r22, 0x00	; 0
    130a:	70 e0       	ldi	r23, 0x00	; 0
    130c:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1310:	89 ef       	ldi	r24, 0xF9	; 249
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	01 97       	sbiw	r24, 0x01	; 1
    1316:	f1 f7       	brne	.-4      	; 0x1314 <Lcd8_Write_Char+0x3e>
    1318:	00 c0       	rjmp	.+0      	; 0x131a <Lcd8_Write_Char+0x44>
    131a:	00 00       	nop
	_delay_ms(1);
}
    131c:	1f 91       	pop	r17
    131e:	08 95       	ret

00001320 <Lcd8_Write_String>:

void Lcd8_Write_String(char *a)
{
    1320:	cf 93       	push	r28
    1322:	df 93       	push	r29
    1324:	ec 01       	movw	r28, r24
	int i;
	for(i=0;a[i]!='\0';i++)
    1326:	88 81       	ld	r24, Y
    1328:	88 23       	and	r24, r24
    132a:	31 f0       	breq	.+12     	; 0x1338 <Lcd8_Write_String+0x18>
	_delay_ms(1);
	pinChange(EN,0);             // => E = 04
	_delay_ms(1);
}

void Lcd8_Write_String(char *a)
    132c:	21 96       	adiw	r28, 0x01	; 1
{
	int i;
	for(i=0;a[i]!='\0';i++)
	Lcd8_Write_Char(a[i]);
    132e:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <Lcd8_Write_Char>
}

void Lcd8_Write_String(char *a)
{
	int i;
	for(i=0;a[i]!='\0';i++)
    1332:	89 91       	ld	r24, Y+
    1334:	88 23       	and	r24, r24
    1336:	d9 f7       	brne	.-10     	; 0x132e <Lcd8_Write_String+0xe>
	Lcd8_Write_Char(a[i]);
}
    1338:	df 91       	pop	r29
    133a:	cf 91       	pop	r28
    133c:	08 95       	ret

0000133e <Lcd8_Shift_Right>:

void Lcd8_Shift_Right()
{
	Lcd8_Cmd(0x1C);
    133e:	8c e1       	ldi	r24, 0x1C	; 28
    1340:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
}
    1344:	08 95       	ret

00001346 <Lcd8_Shift_Left>:

void Lcd8_Shift_Left()
{
	Lcd8_Cmd(0x18);
    1346:	88 e1       	ldi	r24, 0x18	; 24
    1348:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
}
    134c:	08 95       	ret

0000134e <Lcd4_Port>:
//End LCD 8 Bit Interfacing Functions

//LCD 4 Bit Interfacing Functions

void Lcd4_Port(char a)
{
    134e:	cf 93       	push	r28
    1350:	df 93       	push	r29
	if(a & 1)
    1352:	c8 2f       	mov	r28, r24
    1354:	d0 e0       	ldi	r29, 0x00	; 0
    1356:	ce 01       	movw	r24, r28
    1358:	80 ff       	sbrs	r24, 0
    135a:	07 c0       	rjmp	.+14     	; 0x136a <Lcd4_Port+0x1c>
	pinChange(D4,1);
    135c:	88 e1       	ldi	r24, 0x18	; 24
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	61 e0       	ldi	r22, 0x01	; 1
    1362:	70 e0       	ldi	r23, 0x00	; 0
    1364:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <Lcd4_Port+0x28>
	else
	pinChange(D4,0);
    136a:	88 e1       	ldi	r24, 0x18	; 24
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	60 e0       	ldi	r22, 0x00	; 0
    1370:	70 e0       	ldi	r23, 0x00	; 0
    1372:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 2)
    1376:	c1 ff       	sbrs	r28, 1
    1378:	07 c0       	rjmp	.+14     	; 0x1388 <Lcd4_Port+0x3a>
	pinChange(D5,1);
    137a:	89 e1       	ldi	r24, 0x19	; 25
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	61 e0       	ldi	r22, 0x01	; 1
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1386:	06 c0       	rjmp	.+12     	; 0x1394 <Lcd4_Port+0x46>
	else
	pinChange(D5,0);
    1388:	89 e1       	ldi	r24, 0x19	; 25
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 4)
    1394:	c2 ff       	sbrs	r28, 2
    1396:	07 c0       	rjmp	.+14     	; 0x13a6 <Lcd4_Port+0x58>
	pinChange(D6,1);
    1398:	8a e1       	ldi	r24, 0x1A	; 26
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	61 e0       	ldi	r22, 0x01	; 1
    139e:	70 e0       	ldi	r23, 0x00	; 0
    13a0:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    13a4:	06 c0       	rjmp	.+12     	; 0x13b2 <Lcd4_Port+0x64>
	else
	pinChange(D6,0);
    13a6:	8a e1       	ldi	r24, 0x1A	; 26
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	60 e0       	ldi	r22, 0x00	; 0
    13ac:	70 e0       	ldi	r23, 0x00	; 0
    13ae:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 8)
    13b2:	c3 ff       	sbrs	r28, 3
    13b4:	07 c0       	rjmp	.+14     	; 0x13c4 <Lcd4_Port+0x76>
	pinChange(D7,1);
    13b6:	8b e1       	ldi	r24, 0x1B	; 27
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	61 e0       	ldi	r22, 0x01	; 1
    13bc:	70 e0       	ldi	r23, 0x00	; 0
    13be:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    13c2:	06 c0       	rjmp	.+12     	; 0x13d0 <Lcd4_Port+0x82>
	else
	pinChange(D7,0);
    13c4:	8b e1       	ldi	r24, 0x1B	; 27
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	60 e0       	ldi	r22, 0x00	; 0
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
}
    13d0:	df 91       	pop	r29
    13d2:	cf 91       	pop	r28
    13d4:	08 95       	ret

000013d6 <Lcd4_Cmd>:
void Lcd4_Cmd(char a)
{
    13d6:	1f 93       	push	r17
    13d8:	18 2f       	mov	r17, r24
	pinChange(RS,0);             // => RS = 0
    13da:	86 e1       	ldi	r24, 0x16	; 22
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	60 e0       	ldi	r22, 0x00	; 0
    13e0:	70 e0       	ldi	r23, 0x00	; 0
    13e2:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	Lcd4_Port(a);
    13e6:	81 2f       	mov	r24, r17
    13e8:	0e 94 a7 09 	call	0x134e	; 0x134e <Lcd4_Port>
	pinChange(EN,1);            // => E = 1
    13ec:	87 e1       	ldi	r24, 0x17	; 23
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	61 e0       	ldi	r22, 0x01	; 1
    13f2:	70 e0       	ldi	r23, 0x00	; 0
    13f4:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    13f8:	89 ef       	ldi	r24, 0xF9	; 249
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	01 97       	sbiw	r24, 0x01	; 1
    13fe:	f1 f7       	brne	.-4      	; 0x13fc <Lcd4_Cmd+0x26>
    1400:	00 c0       	rjmp	.+0      	; 0x1402 <Lcd4_Cmd+0x2c>
    1402:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 0
    1404:	87 e1       	ldi	r24, 0x17	; 23
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	60 e0       	ldi	r22, 0x00	; 0
    140a:	70 e0       	ldi	r23, 0x00	; 0
    140c:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1410:	89 ef       	ldi	r24, 0xF9	; 249
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	01 97       	sbiw	r24, 0x01	; 1
    1416:	f1 f7       	brne	.-4      	; 0x1414 <Lcd4_Cmd+0x3e>
    1418:	00 c0       	rjmp	.+0      	; 0x141a <Lcd4_Cmd+0x44>
    141a:	00 00       	nop
	_delay_ms(1);
}
    141c:	1f 91       	pop	r17
    141e:	08 95       	ret

00001420 <Lcd4_Clear>:

void Lcd4_Clear()
{
	Lcd4_Cmd(0);
    1420:	80 e0       	ldi	r24, 0x00	; 0
    1422:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(1);
    1426:	81 e0       	ldi	r24, 0x01	; 1
    1428:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
}
    142c:	08 95       	ret

0000142e <Lcd4_Set_Cursor>:

void Lcd4_Set_Cursor(char a, char b)
{
    142e:	1f 93       	push	r17
	char temp,z,y;
	if(a == 1)
    1430:	81 30       	cpi	r24, 0x01	; 1
    1432:	61 f4       	brne	.+24     	; 0x144c <Lcd4_Set_Cursor+0x1e>
	{
		temp = 0x80 + b;
    1434:	16 2f       	mov	r17, r22
    1436:	10 58       	subi	r17, 0x80	; 128
		z = temp>>4;
		y = (0x80+b) & 0x0F;
		Lcd4_Cmd(z);
    1438:	81 2f       	mov	r24, r17
    143a:	82 95       	swap	r24
    143c:	8f 70       	andi	r24, 0x0F	; 15
    143e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
		Lcd4_Cmd(y);
    1442:	81 2f       	mov	r24, r17
    1444:	8f 70       	andi	r24, 0x0F	; 15
    1446:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
    144a:	0d c0       	rjmp	.+26     	; 0x1466 <Lcd4_Set_Cursor+0x38>
	}
	else if(a == 2)
    144c:	82 30       	cpi	r24, 0x02	; 2
    144e:	59 f4       	brne	.+22     	; 0x1466 <Lcd4_Set_Cursor+0x38>
	{
		temp = 0xC0 + b;
    1450:	16 2f       	mov	r17, r22
    1452:	10 54       	subi	r17, 0x40	; 64
		z = temp>>4;
		y = (0xC0+b) & 0x0F;
		Lcd4_Cmd(z);
    1454:	81 2f       	mov	r24, r17
    1456:	82 95       	swap	r24
    1458:	8f 70       	andi	r24, 0x0F	; 15
    145a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
		Lcd4_Cmd(y);
    145e:	81 2f       	mov	r24, r17
    1460:	8f 70       	andi	r24, 0x0F	; 15
    1462:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	}
}
    1466:	1f 91       	pop	r17
    1468:	08 95       	ret

0000146a <Lcd4_Init>:

void Lcd4_Init()
{
	Lcd4_Port(0x00);
    146a:	80 e0       	ldi	r24, 0x00	; 0
    146c:	0e 94 a7 09 	call	0x134e	; 0x134e <Lcd4_Port>
    1470:	87 e8       	ldi	r24, 0x87	; 135
    1472:	93 e1       	ldi	r25, 0x13	; 19
    1474:	01 97       	sbiw	r24, 0x01	; 1
    1476:	f1 f7       	brne	.-4      	; 0x1474 <Lcd4_Init+0xa>
    1478:	00 c0       	rjmp	.+0      	; 0x147a <Lcd4_Init+0x10>
    147a:	00 00       	nop
	_delay_ms(20);
	///////////// Reset process from datasheet /////////
	Lcd4_Cmd(0x03);
    147c:	83 e0       	ldi	r24, 0x03	; 3
    147e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
    1482:	81 ee       	ldi	r24, 0xE1	; 225
    1484:	94 e0       	ldi	r25, 0x04	; 4
    1486:	01 97       	sbiw	r24, 0x01	; 1
    1488:	f1 f7       	brne	.-4      	; 0x1486 <Lcd4_Init+0x1c>
    148a:	00 c0       	rjmp	.+0      	; 0x148c <Lcd4_Init+0x22>
    148c:	00 00       	nop
	_delay_ms(5);
	Lcd4_Cmd(0x03);
    148e:	83 e0       	ldi	r24, 0x03	; 3
    1490:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
    1494:	8d eb       	ldi	r24, 0xBD	; 189
    1496:	9a e0       	ldi	r25, 0x0A	; 10
    1498:	01 97       	sbiw	r24, 0x01	; 1
    149a:	f1 f7       	brne	.-4      	; 0x1498 <Lcd4_Init+0x2e>
    149c:	00 c0       	rjmp	.+0      	; 0x149e <Lcd4_Init+0x34>
    149e:	00 00       	nop
	_delay_ms(11);
	Lcd4_Cmd(0x03);
    14a0:	83 e0       	ldi	r24, 0x03	; 3
    14a2:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	/////////////////////////////////////////////////////
	Lcd4_Cmd(0x02);
    14a6:	82 e0       	ldi	r24, 0x02	; 2
    14a8:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x02);
    14ac:	82 e0       	ldi	r24, 0x02	; 2
    14ae:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
    14b2:	88 e0       	ldi	r24, 0x08	; 8
    14b4:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x0C);
    14be:	8c e0       	ldi	r24, 0x0C	; 12
    14c0:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
    14c4:	80 e0       	ldi	r24, 0x00	; 0
    14c6:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x06);
    14ca:	86 e0       	ldi	r24, 0x06	; 6
    14cc:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
}
    14d0:	08 95       	ret

000014d2 <Lcd4_Write_Char>:

void Lcd4_Write_Char(char a)
{
    14d2:	1f 93       	push	r17
    14d4:	18 2f       	mov	r17, r24
	char temp,y;
	temp = a&0x0F;
	y = a&0xF0;
	pinChange(RS,1);             // => RS = 1
    14d6:	86 e1       	ldi	r24, 0x16	; 22
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	61 e0       	ldi	r22, 0x01	; 1
    14dc:	70 e0       	ldi	r23, 0x00	; 0
    14de:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	Lcd4_Port(y>>4);             //Data transfer
    14e2:	81 2f       	mov	r24, r17
    14e4:	82 95       	swap	r24
    14e6:	8f 70       	andi	r24, 0x0F	; 15
    14e8:	0e 94 a7 09 	call	0x134e	; 0x134e <Lcd4_Port>
	pinChange(EN,1);
    14ec:	87 e1       	ldi	r24, 0x17	; 23
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	61 e0       	ldi	r22, 0x01	; 1
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    14f8:	89 ef       	ldi	r24, 0xF9	; 249
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	01 97       	sbiw	r24, 0x01	; 1
    14fe:	f1 f7       	brne	.-4      	; 0x14fc <Lcd4_Write_Char+0x2a>
    1500:	00 c0       	rjmp	.+0      	; 0x1502 <Lcd4_Write_Char+0x30>
    1502:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
    1504:	87 e1       	ldi	r24, 0x17	; 23
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	70 e0       	ldi	r23, 0x00	; 0
    150c:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1510:	89 ef       	ldi	r24, 0xF9	; 249
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	01 97       	sbiw	r24, 0x01	; 1
    1516:	f1 f7       	brne	.-4      	; 0x1514 <Lcd4_Write_Char+0x42>
    1518:	00 c0       	rjmp	.+0      	; 0x151a <Lcd4_Write_Char+0x48>
    151a:	00 00       	nop
	_delay_ms(1);
	Lcd4_Port(temp);
    151c:	81 2f       	mov	r24, r17
    151e:	8f 70       	andi	r24, 0x0F	; 15
    1520:	0e 94 a7 09 	call	0x134e	; 0x134e <Lcd4_Port>
	pinChange(EN,1);
    1524:	87 e1       	ldi	r24, 0x17	; 23
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	61 e0       	ldi	r22, 0x01	; 1
    152a:	70 e0       	ldi	r23, 0x00	; 0
    152c:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1530:	89 ef       	ldi	r24, 0xF9	; 249
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	01 97       	sbiw	r24, 0x01	; 1
    1536:	f1 f7       	brne	.-4      	; 0x1534 <Lcd4_Write_Char+0x62>
    1538:	00 c0       	rjmp	.+0      	; 0x153a <Lcd4_Write_Char+0x68>
    153a:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
    153c:	87 e1       	ldi	r24, 0x17	; 23
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	60 e0       	ldi	r22, 0x00	; 0
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1548:	89 ef       	ldi	r24, 0xF9	; 249
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	01 97       	sbiw	r24, 0x01	; 1
    154e:	f1 f7       	brne	.-4      	; 0x154c <Lcd4_Write_Char+0x7a>
    1550:	00 c0       	rjmp	.+0      	; 0x1552 <Lcd4_Write_Char+0x80>
    1552:	00 00       	nop
	_delay_ms(1);
}
    1554:	1f 91       	pop	r17
    1556:	08 95       	ret

00001558 <Lcd4_Write_String>:

void Lcd4_Write_String(char *a)
{
    1558:	cf 93       	push	r28
    155a:	df 93       	push	r29
    155c:	ec 01       	movw	r28, r24
	int i;
	for(i=0;a[i]!='\0';i++)
    155e:	88 81       	ld	r24, Y
    1560:	88 23       	and	r24, r24
    1562:	31 f0       	breq	.+12     	; 0x1570 <Lcd4_Write_String+0x18>
	_delay_ms(1);
	pinChange(EN,0);
	_delay_ms(1);
}

void Lcd4_Write_String(char *a)
    1564:	21 96       	adiw	r28, 0x01	; 1
{
	int i;
	for(i=0;a[i]!='\0';i++)
	Lcd4_Write_Char(a[i]);
    1566:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <Lcd4_Write_Char>
}

void Lcd4_Write_String(char *a)
{
	int i;
	for(i=0;a[i]!='\0';i++)
    156a:	89 91       	ld	r24, Y+
    156c:	88 23       	and	r24, r24
    156e:	d9 f7       	brne	.-10     	; 0x1566 <Lcd4_Write_String+0xe>
	Lcd4_Write_Char(a[i]);
}
    1570:	df 91       	pop	r29
    1572:	cf 91       	pop	r28
    1574:	08 95       	ret

00001576 <Lcd4_Shift_Right>:

void Lcd4_Shift_Right()
{
	Lcd4_Cmd(0x01);
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x0C);
    157c:	8c e0       	ldi	r24, 0x0C	; 12
    157e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
}
    1582:	08 95       	ret

00001584 <Lcd4_Shift_Left>:

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
    158a:	88 e0       	ldi	r24, 0x08	; 8
    158c:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
}
    1590:	08 95       	ret

00001592 <Splash>:
			"Copyright:",
			"    OZHAN KD"
			};

	//-------------
	StringAt(0, 2, SPchar[0]);
    1592:	82 e0       	ldi	r24, 0x02	; 2
    1594:	60 e0       	ldi	r22, 0x00	; 0
    1596:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <N11_GotoXR>
    159a:	80 e0       	ldi	r24, 0x00	; 0
    159c:	91 e0       	ldi	r25, 0x01	; 1
    159e:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <N11_PrintString>
	StringAt(2, 2, SPchar[1]);
    15a2:	82 e0       	ldi	r24, 0x02	; 2
    15a4:	62 e0       	ldi	r22, 0x02	; 2
    15a6:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <N11_GotoXR>
    15aa:	8f e0       	ldi	r24, 0x0F	; 15
    15ac:	91 e0       	ldi	r25, 0x01	; 1
    15ae:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <N11_PrintString>
	StringAt(3, 2, SPchar[2]);
    15b2:	82 e0       	ldi	r24, 0x02	; 2
    15b4:	63 e0       	ldi	r22, 0x03	; 3
    15b6:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <N11_GotoXR>
    15ba:	84 e1       	ldi	r24, 0x14	; 20
    15bc:	91 e0       	ldi	r25, 0x01	; 1
    15be:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <N11_PrintString>
	StringAt(5, 2, SPchar[3]);
    15c2:	82 e0       	ldi	r24, 0x02	; 2
    15c4:	65 e0       	ldi	r22, 0x05	; 5
    15c6:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <N11_GotoXR>
    15ca:	8a e2       	ldi	r24, 0x2A	; 42
    15cc:	91 e0       	ldi	r25, 0x01	; 1
    15ce:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <N11_PrintString>
	StringAt(6, 2, SPchar[4]);
    15d2:	82 e0       	ldi	r24, 0x02	; 2
    15d4:	66 e0       	ldi	r22, 0x06	; 6
    15d6:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <N11_GotoXR>
    15da:	85 e3       	ldi	r24, 0x35	; 53
    15dc:	91 e0       	ldi	r25, 0x01	; 1
    15de:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <N11_PrintString>
    15e2:	8f eb       	ldi	r24, 0xBF	; 191
    15e4:	97 e2       	ldi	r25, 0x27	; 39
    15e6:	a9 e0       	ldi	r26, 0x09	; 9
    15e8:	81 50       	subi	r24, 0x01	; 1
    15ea:	90 40       	sbci	r25, 0x00	; 0
    15ec:	a0 40       	sbci	r26, 0x00	; 0
    15ee:	e1 f7       	brne	.-8      	; 0x15e8 <Splash+0x56>
    15f0:	00 c0       	rjmp	.+0      	; 0x15f2 <Splash+0x60>
    15f2:	00 00       	nop

	//-------------
	_delay_ms(3000);
	N11_CLS();
    15f4:	0e 94 76 0d 	call	0x1aec	; 0x1aec <N11_CLS>
}	//Splash
    15f8:	08 95       	ret

000015fa <Initial>:

//---------------------------------------------------------//
//---------------------------------------------------------//
void Initial(void)
{
	cli();												//Interrupts disable
    15fa:	f8 94       	cli

	HW_init();
    15fc:	0e 94 1c 07 	call	0xe38	; 0xe38 <HW_init>
	a2dInit();										//AVCC & DIV64
    1600:	0e 94 d7 06 	call	0xdae	; 0xdae <a2dInit>
    1604:	8f e9       	ldi	r24, 0x9F	; 159
    1606:	96 e8       	ldi	r25, 0x86	; 134
    1608:	a1 e0       	ldi	r26, 0x01	; 1
    160a:	81 50       	subi	r24, 0x01	; 1
    160c:	90 40       	sbci	r25, 0x00	; 0
    160e:	a0 40       	sbci	r26, 0x00	; 0
    1610:	e1 f7       	brne	.-8      	; 0x160a <Initial+0x10>
    1612:	00 c0       	rjmp	.+0      	; 0x1614 <Initial+0x1a>
    1614:	00 00       	nop
	
	_delay_ms(500);

	//----------------------
	N11_Init();
    1616:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <N11_Init>
	N11_Contrast(10);
    161a:	8a e0       	ldi	r24, 0x0A	; 10
    161c:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <N11_Contrast>
	N11_Backlight(ON);
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <N11_Backlight>
	
	//----------------------
	BUZZER(BOOT_sign);
    1626:	82 e0       	ldi	r24, 0x02	; 2
    1628:	0e 94 23 07 	call	0xe46	; 0xe46 <BUZZER>
    162c:	8f e9       	ldi	r24, 0x9F	; 159
    162e:	96 e8       	ldi	r25, 0x86	; 134
    1630:	a1 e0       	ldi	r26, 0x01	; 1
    1632:	81 50       	subi	r24, 0x01	; 1
    1634:	90 40       	sbci	r25, 0x00	; 0
    1636:	a0 40       	sbci	r26, 0x00	; 0
    1638:	e1 f7       	brne	.-8      	; 0x1632 <Initial+0x38>
    163a:	00 c0       	rjmp	.+0      	; 0x163c <Initial+0x42>
    163c:	00 00       	nop

	//----------------------
	//static FILE mystdout = FDEV_SETUP_STREAM(N11_PrintChar, NULL, _FDEV_SETUP_WRITE);
  //stdout = &mystdout;
	
	N11_CLS();
    163e:	0e 94 76 0d 	call	0x1aec	; 0x1aec <N11_CLS>
	
	//----------------------
	Splash();
    1642:	0e 94 c9 0a 	call	0x1592	; 0x1592 <Splash>
	BUZZER(OK_sign);
    1646:	81 e0       	ldi	r24, 0x01	; 1
    1648:	0e 94 23 07 	call	0xe46	; 0xe46 <BUZZER>

	//------------
	sei();												//Interrupts enabel	
    164c:	78 94       	sei
}	//Initial
    164e:	08 95       	ret

00001650 <test01>:


//---------------------------------------------------------//
//---------------------------------------------------------//
void test01(void)
{
    1650:	3f 92       	push	r3
    1652:	4f 92       	push	r4
    1654:	5f 92       	push	r5
    1656:	6f 92       	push	r6
    1658:	7f 92       	push	r7
    165a:	8f 92       	push	r8
    165c:	9f 92       	push	r9
    165e:	af 92       	push	r10
    1660:	bf 92       	push	r11
    1662:	cf 92       	push	r12
    1664:	df 92       	push	r13
    1666:	ef 92       	push	r14
    1668:	ff 92       	push	r15
    166a:	0f 93       	push	r16
    166c:	1f 93       	push	r17
    166e:	df 93       	push	r29
    1670:	cf 93       	push	r28
    1672:	cd b7       	in	r28, 0x3d	; 61
    1674:	de b7       	in	r29, 0x3e	; 62
    1676:	60 97       	sbiw	r28, 0x10	; 16
    1678:	0f b6       	in	r0, 0x3f	; 63
    167a:	f8 94       	cli
    167c:	de bf       	out	0x3e, r29	; 62
    167e:	0f be       	out	0x3f, r0	; 63
    1680:	cd bf       	out	0x3d, r28	; 61

	unsigned int				FRQtemp;
	unsigned char				ACCtemp;
	unsigned char				DECtemp;

	SPWM_init();
    1682:	0e 94 72 10 	call	0x20e4	; 0x20e4 <SPWM_init>
	
	ADC_CH_init(FRQ_ACH);
    1686:	a1 e6       	ldi	r26, 0x61	; 97
    1688:	b0 e0       	ldi	r27, 0x00	; 0
    168a:	8c 91       	ld	r24, X
    168c:	8e 7f       	andi	r24, 0xFE	; 254
    168e:	8c 93       	st	X, r24
    1690:	e2 e6       	ldi	r30, 0x62	; 98
    1692:	f0 e0       	ldi	r31, 0x00	; 0
    1694:	80 81       	ld	r24, Z
    1696:	8e 7f       	andi	r24, 0xFE	; 254
    1698:	80 83       	st	Z, r24
	ADC_CH_init(ACC_ACH);
    169a:	8c 91       	ld	r24, X
    169c:	8d 7f       	andi	r24, 0xFD	; 253
    169e:	8c 93       	st	X, r24
    16a0:	80 81       	ld	r24, Z
    16a2:	8d 7f       	andi	r24, 0xFD	; 253
    16a4:	80 83       	st	Z, r24
	ADC_CH_init(DEC_ACH);
    16a6:	8c 91       	ld	r24, X
    16a8:	8b 7f       	andi	r24, 0xFB	; 251
    16aa:	8c 93       	st	X, r24
    16ac:	80 81       	ld	r24, Z
    16ae:	8b 7f       	andi	r24, 0xFB	; 251
    16b0:	80 83       	st	Z, r24
//---------------------------------------------------------//
void test01(void)
{
	unsigned char				LVflag 	= 0;
	unsigned int				TCRtemp = 0;
	unsigned char				i 			= 0;
    16b2:	aa 24       	eor	r10, r10
//---------------------------------------------------------//
//---------------------------------------------------------//
void test01(void)
{
	unsigned char				LVflag 	= 0;
	unsigned int				TCRtemp = 0;
    16b4:	cc 24       	eor	r12, r12
    16b6:	dd 24       	eor	r13, r13

//---------------------------------------------------------//
//---------------------------------------------------------//
void test01(void)
{
	unsigned char				LVflag 	= 0;
    16b8:	ff 24       	eor	r15, r15
			//-------------------------------
			
			float a;
			char str[16];

			a = (FRQtemp/10); // or some other calculation
    16ba:	0f 2e       	mov	r0, r31
    16bc:	fa e0       	ldi	r31, 0x0A	; 10
    16be:	4f 2e       	mov	r4, r31
    16c0:	55 24       	eor	r5, r5
    16c2:	f0 2d       	mov	r31, r0
			
			Lcd4_Set_Cursor(1,5);
			Lcd4_Write_String(str) ;   
			*/
			
			sprintf(Ctemp, "FRQ:%03d.%01dHz ", (FRQtemp/10), (FRQtemp%10));
    16c4:	0a e8       	ldi	r16, 0x8A	; 138
    16c6:	11 e0       	ldi	r17, 0x01	; 1
	ADC_CH_init(DEC_ACH);
	
	//----- main loop!
	while(1)  
	{		
		if((TCounter>=TCRtemp))  // && !bit_is_set(PORTD, 1))									//100mS //loop until fault is coming from portd.1 
    16c8:	80 91 85 01 	lds	r24, 0x0185
    16cc:	90 91 86 01 	lds	r25, 0x0186
    16d0:	8c 15       	cp	r24, r12
    16d2:	9d 05       	cpc	r25, r13
    16d4:	08 f4       	brcc	.+2      	; 0x16d8 <test01+0x88>
    16d6:	b7 c0       	rjmp	.+366    	; 0x1846 <test01+0x1f6>
		{
			TCRtemp = TCounter +100;						//1mS x100
    16d8:	80 91 85 01 	lds	r24, 0x0185
    16dc:	90 91 86 01 	lds	r25, 0x0186
    16e0:	0f 2e       	mov	r0, r31
    16e2:	f4 e6       	ldi	r31, 0x64	; 100
    16e4:	cf 2e       	mov	r12, r31
    16e6:	dd 24       	eor	r13, r13
    16e8:	f0 2d       	mov	r31, r0
    16ea:	c8 0e       	add	r12, r24
    16ec:	d9 1e       	adc	r13, r25
			
			FRQtemp = a2dConvert10bit(FRQ_ACH);
    16ee:	80 e0       	ldi	r24, 0x00	; 0
    16f0:	0e 94 f4 06 	call	0xde8	; 0xde8 <a2dConvert10bit>
    16f4:	4c 01       	movw	r8, r24
			ACCtemp = a2dConvert8bit(ACC_ACH);
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	0e 94 06 07 	call	0xe0c	; 0xe0c <a2dConvert8bit>
    16fc:	e8 2e       	mov	r14, r24
			DECtemp = a2dConvert8bit(DEC_ACH);
    16fe:	82 e0       	ldi	r24, 0x02	; 2
    1700:	0e 94 06 07 	call	0xe0c	; 0xe0c <a2dConvert8bit>
    1704:	b8 2e       	mov	r11, r24
			
			//-------------------------------
			FRQtemp = SetFrequency(FRQtemp);
    1706:	c4 01       	movw	r24, r8
    1708:	0e 94 a8 10 	call	0x2150	; 0x2150 <SetFrequency>
    170c:	4c 01       	movw	r8, r24
			ACCtemp = SetAcceleration(ACCtemp);
    170e:	8e 2d       	mov	r24, r14
    1710:	0e 94 c9 10 	call	0x2192	; 0x2192 <SetAcceleration>
    1714:	38 2e       	mov	r3, r24
			DECtemp = SetDeceleration(DECtemp);
    1716:	8b 2d       	mov	r24, r11
    1718:	0e 94 d4 10 	call	0x21a8	; 0x21a8 <SetDeceleration>
    171c:	e8 2e       	mov	r14, r24
			//-------------------------------
			
			float a;
			char str[16];

			a = (FRQtemp/10); // or some other calculation
    171e:	c4 01       	movw	r24, r8
    1720:	b2 01       	movw	r22, r4
    1722:	0e 94 85 11 	call	0x230a	; 0x230a <__udivmodhi4>
    1726:	4b 01       	movw	r8, r22
    1728:	3c 01       	movw	r6, r24
    172a:	80 e0       	ldi	r24, 0x00	; 0
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 10 11 	call	0x2220	; 0x2220 <__floatunsisf>
			itoa(a, str, 10);
    1732:	0e 94 df 10 	call	0x21be	; 0x21be <__fixsfsi>
    1736:	dc 01       	movw	r26, r24
    1738:	cb 01       	movw	r24, r22
    173a:	be 01       	movw	r22, r28
    173c:	6f 5f       	subi	r22, 0xFF	; 255
    173e:	7f 4f       	sbci	r23, 0xFF	; 255
    1740:	a2 01       	movw	r20, r4
    1742:	0e 94 bb 11 	call	0x2376	; 0x2376 <itoa>
			//itoa();
			Lcd4_Init();
    1746:	0e 94 35 0a 	call	0x146a	; 0x146a <Lcd4_Init>
			
			Lcd4_Set_Cursor(1,5);
			Lcd4_Write_String(str) ;   
			*/
			
			sprintf(Ctemp, "FRQ:%03d.%01dHz ", (FRQtemp/10), (FRQtemp%10));
    174a:	8d b7       	in	r24, 0x3d	; 61
    174c:	9e b7       	in	r25, 0x3e	; 62
    174e:	08 97       	sbiw	r24, 0x08	; 8
    1750:	0f b6       	in	r0, 0x3f	; 63
    1752:	f8 94       	cli
    1754:	9e bf       	out	0x3e, r25	; 62
    1756:	0f be       	out	0x3f, r0	; 63
    1758:	8d bf       	out	0x3d, r24	; 61
    175a:	ed b7       	in	r30, 0x3d	; 61
    175c:	fe b7       	in	r31, 0x3e	; 62
    175e:	31 96       	adiw	r30, 0x01	; 1
    1760:	ad b7       	in	r26, 0x3d	; 61
    1762:	be b7       	in	r27, 0x3e	; 62
    1764:	12 96       	adiw	r26, 0x02	; 2
    1766:	1c 93       	st	X, r17
    1768:	0e 93       	st	-X, r16
    176a:	11 97       	sbiw	r26, 0x01	; 1
    176c:	82 e4       	ldi	r24, 0x42	; 66
    176e:	91 e0       	ldi	r25, 0x01	; 1
    1770:	93 83       	std	Z+3, r25	; 0x03
    1772:	82 83       	std	Z+2, r24	; 0x02
    1774:	95 82       	std	Z+5, r9	; 0x05
    1776:	84 82       	std	Z+4, r8	; 0x04
    1778:	77 82       	std	Z+7, r7	; 0x07
    177a:	66 82       	std	Z+6, r6	; 0x06
    177c:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <sprintf>
			Lcd4_Set_Cursor(1,1);
    1780:	ad b7       	in	r26, 0x3d	; 61
    1782:	be b7       	in	r27, 0x3e	; 62
    1784:	18 96       	adiw	r26, 0x08	; 8
    1786:	0f b6       	in	r0, 0x3f	; 63
    1788:	f8 94       	cli
    178a:	be bf       	out	0x3e, r27	; 62
    178c:	0f be       	out	0x3f, r0	; 63
    178e:	ad bf       	out	0x3d, r26	; 61
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	61 e0       	ldi	r22, 0x01	; 1
    1794:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
			Lcd4_Write_String(Ctemp) ;
    1798:	c8 01       	movw	r24, r16
    179a:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
			
			//StringAt(1, 2, Ctemp);
			
			sprintf(Ctemp,"%03dS ", ACCtemp);
    179e:	00 d0       	rcall	.+0      	; 0x17a0 <test01+0x150>
    17a0:	00 d0       	rcall	.+0      	; 0x17a2 <test01+0x152>
    17a2:	00 d0       	rcall	.+0      	; 0x17a4 <test01+0x154>
    17a4:	ed b7       	in	r30, 0x3d	; 61
    17a6:	fe b7       	in	r31, 0x3e	; 62
    17a8:	31 96       	adiw	r30, 0x01	; 1
    17aa:	ad b7       	in	r26, 0x3d	; 61
    17ac:	be b7       	in	r27, 0x3e	; 62
    17ae:	12 96       	adiw	r26, 0x02	; 2
    17b0:	1c 93       	st	X, r17
    17b2:	0e 93       	st	-X, r16
    17b4:	11 97       	sbiw	r26, 0x01	; 1
    17b6:	83 e5       	ldi	r24, 0x53	; 83
    17b8:	91 e0       	ldi	r25, 0x01	; 1
    17ba:	93 83       	std	Z+3, r25	; 0x03
    17bc:	82 83       	std	Z+2, r24	; 0x02
    17be:	34 82       	std	Z+4, r3	; 0x04
    17c0:	15 82       	std	Z+5, r1	; 0x05
    17c2:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <sprintf>
			Lcd4_Set_Cursor(1,13);
    17c6:	ad b7       	in	r26, 0x3d	; 61
    17c8:	be b7       	in	r27, 0x3e	; 62
    17ca:	16 96       	adiw	r26, 0x06	; 6
    17cc:	0f b6       	in	r0, 0x3f	; 63
    17ce:	f8 94       	cli
    17d0:	be bf       	out	0x3e, r27	; 62
    17d2:	0f be       	out	0x3f, r0	; 63
    17d4:	ad bf       	out	0x3d, r26	; 61
    17d6:	81 e0       	ldi	r24, 0x01	; 1
    17d8:	6d e0       	ldi	r22, 0x0D	; 13
    17da:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
			Lcd4_Write_String("ACC:");
    17de:	8a e5       	ldi	r24, 0x5A	; 90
    17e0:	91 e0       	ldi	r25, 0x01	; 1
    17e2:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
			Lcd4_Set_Cursor(2,1);
    17e6:	82 e0       	ldi	r24, 0x02	; 2
    17e8:	61 e0       	ldi	r22, 0x01	; 1
    17ea:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
			Lcd4_Write_String(Ctemp) ;
    17ee:	c8 01       	movw	r24, r16
    17f0:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
			
			//StringAt(3, 2, Ctemp);
	
			sprintf(Ctemp, "DEC:%03dS ", DECtemp);
    17f4:	00 d0       	rcall	.+0      	; 0x17f6 <test01+0x1a6>
    17f6:	00 d0       	rcall	.+0      	; 0x17f8 <test01+0x1a8>
    17f8:	00 d0       	rcall	.+0      	; 0x17fa <test01+0x1aa>
    17fa:	ed b7       	in	r30, 0x3d	; 61
    17fc:	fe b7       	in	r31, 0x3e	; 62
    17fe:	31 96       	adiw	r30, 0x01	; 1
    1800:	ad b7       	in	r26, 0x3d	; 61
    1802:	be b7       	in	r27, 0x3e	; 62
    1804:	12 96       	adiw	r26, 0x02	; 2
    1806:	1c 93       	st	X, r17
    1808:	0e 93       	st	-X, r16
    180a:	11 97       	sbiw	r26, 0x01	; 1
    180c:	8f e5       	ldi	r24, 0x5F	; 95
    180e:	91 e0       	ldi	r25, 0x01	; 1
    1810:	93 83       	std	Z+3, r25	; 0x03
    1812:	82 83       	std	Z+2, r24	; 0x02
    1814:	e4 82       	std	Z+4, r14	; 0x04
    1816:	15 82       	std	Z+5, r1	; 0x05
    1818:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <sprintf>
			Lcd4_Set_Cursor(2,6);
    181c:	ad b7       	in	r26, 0x3d	; 61
    181e:	be b7       	in	r27, 0x3e	; 62
    1820:	16 96       	adiw	r26, 0x06	; 6
    1822:	0f b6       	in	r0, 0x3f	; 63
    1824:	f8 94       	cli
    1826:	be bf       	out	0x3e, r27	; 62
    1828:	0f be       	out	0x3f, r0	; 63
    182a:	ad bf       	out	0x3d, r26	; 61
    182c:	82 e0       	ldi	r24, 0x02	; 2
    182e:	66 e0       	ldi	r22, 0x06	; 6
    1830:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
			Lcd4_Write_String(Ctemp) ;
    1834:	c8 01       	movw	r24, r16
    1836:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
			//StringAt(5, 2, Ctemp);
			
			i++;
    183a:	a3 94       	inc	r10
			if(i==5)					{						LVflag = 1;		}
    183c:	ba 2d       	mov	r27, r10
    183e:	b5 30       	cpi	r27, 0x05	; 5
    1840:	29 f0       	breq	.+10     	; 0x184c <test01+0x1fc>
			else if(i==10)		{	i = 0;		LVflag = 0;	}
    1842:	ba 30       	cpi	r27, 0x0A	; 10
    1844:	41 f0       	breq	.+16     	; 0x1856 <test01+0x206>
		}
		
		GLED(LVflag);
    1846:	ff 20       	and	r15, r15
    1848:	39 f0       	breq	.+14     	; 0x1858 <test01+0x208>
    184a:	02 c0       	rjmp	.+4      	; 0x1850 <test01+0x200>
			Lcd4_Set_Cursor(2,6);
			Lcd4_Write_String(Ctemp) ;
			//StringAt(5, 2, Ctemp);
			
			i++;
			if(i==5)					{						LVflag = 1;		}
    184c:	ff 24       	eor	r15, r15
    184e:	f3 94       	inc	r15
			else if(i==10)		{	i = 0;		LVflag = 0;	}
		}
		
		GLED(LVflag);
    1850:	ad 9a       	sbi	0x15, 5	; 21
    1852:	85 b3       	in	r24, 0x15	; 21
    1854:	39 cf       	rjmp	.-398    	; 0x16c8 <test01+0x78>
			Lcd4_Write_String(Ctemp) ;
			//StringAt(5, 2, Ctemp);
			
			i++;
			if(i==5)					{						LVflag = 1;		}
			else if(i==10)		{	i = 0;		LVflag = 0;	}
    1856:	aa 24       	eor	r10, r10
		}
		
		GLED(LVflag);
    1858:	ad 98       	cbi	0x15, 5	; 21
    185a:	85 b3       	in	r24, 0x15	; 21
    185c:	ff 24       	eor	r15, r15
    185e:	34 cf       	rjmp	.-408    	; 0x16c8 <test01+0x78>

00001860 <LCD_0>:
dim LCD_D6_Direction as sbit at DDc6_bit
dim LCD_D7_Direction as sbit at DDc7_bit

*/

DDRD = 0xFF;
    1860:	8f ef       	ldi	r24, 0xFF	; 255
    1862:	81 bb       	out	0x11, r24	; 17
DDRC = 0xFF;
    1864:	84 bb       	out	0x14, r24	; 20
int i;
Lcd4_Init();
    1866:	0e 94 35 0a 	call	0x146a	; 0x146a <Lcd4_Init>
Lcd4_Set_Cursor(1,1);
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	61 e0       	ldi	r22, 0x01	; 1
    186e:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
Lcd4_Write_String("Elasa.ir Test");  
    1872:	8a e6       	ldi	r24, 0x6A	; 106
    1874:	91 e0       	ldi	r25, 0x01	; 1
    1876:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
	
    187a:	08 95       	ret

0000187c <main>:
void LCD_0(void);

//	<<< main function >>>
//*****************************************************************************
void main(void)
{
    187c:	ef 92       	push	r14
    187e:	ff 92       	push	r15
    1880:	0f 93       	push	r16
    1882:	1f 93       	push	r17
    1884:	cf 93       	push	r28
    1886:	df 93       	push	r29
	//sflags.dir_f=1;
	ENABLE_DDR|=1<<ENABLE_bp;
    1888:	88 9a       	sbi	0x11, 0	; 17
    DISABLE_MOTOR;
    188a:	90 98       	cbi	0x12, 0	; 18
 FAULT_PORT|=1<<FAULT_bp; // Turn on fault input pullup
    188c:	91 9a       	sbi	0x12, 1	; 18
 RUN_LED_DDR|=1<<RUN_LED_bp;
    188e:	8a 9a       	sbi	0x11, 2	; 17
 RUN_LED_OFF;
    1890:	92 9a       	sbi	0x12, 2	; 18
 DIR_LED1_DDR|=1<<DIR_LED1_bp;
    1892:	8b 9a       	sbi	0x11, 3	; 17
 DIR_LED2_DDR|=1<<DIR_LED2_bp;
    1894:	8c 9a       	sbi	0x11, 4	; 17
 DIR_LED1_ON;
    1896:	93 98       	cbi	0x12, 3	; 18
 DIR_LED2_OFF;
    1898:	94 9a       	sbi	0x12, 4	; 18
 KEY_PORT|=(1<<RUN_KEY_bp)|(1<<STOP_KEY_bp)|(1<<DIR_KEY_bp); // Turn on pullups 
    189a:	83 b1       	in	r24, 0x03	; 3
    189c:	8c 61       	ori	r24, 0x1C	; 28
    189e:	83 b9       	out	0x03, r24	; 3
 
 flags.deceleration_f=flags.dir_change_f=flags.dir_f=0;
    18a0:	80 91 a4 01 	lds	r24, 0x01A4
    18a4:	8e 7f       	andi	r24, 0xFE	; 254
    18a6:	80 93 a4 01 	sts	0x01A4, r24
    18aa:	80 91 a4 01 	lds	r24, 0x01A4
    18ae:	81 70       	andi	r24, 0x01	; 1
    18b0:	88 0f       	add	r24, r24
    18b2:	88 0f       	add	r24, r24
    18b4:	90 91 a4 01 	lds	r25, 0x01A4
    18b8:	9b 7f       	andi	r25, 0xFB	; 251
    18ba:	89 2b       	or	r24, r25
    18bc:	80 93 a4 01 	sts	0x01A4, r24
    18c0:	80 91 a4 01 	lds	r24, 0x01A4
    18c4:	86 95       	lsr	r24
    18c6:	82 70       	andi	r24, 0x02	; 2
    18c8:	90 91 a4 01 	lds	r25, 0x01A4
    18cc:	9d 7f       	andi	r25, 0xFD	; 253
    18ce:	89 2b       	or	r24, r25
    18d0:	80 93 a4 01 	sts	0x01A4, r24
	LCD_0();
    18d4:	0e 94 30 0c 	call	0x1860	; 0x1860 <LCD_0>
	Initial();
    18d8:	0e 94 fd 0a 	call	0x15fa	; 0x15fa <Initial>
    old_key_code=key_code;    
    flags.deceleration_f=1;    
   }
   else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
   {
    old_key_code=key_code;
    18dc:	ee 24       	eor	r14, r14
    18de:	ff 24       	eor	r15, r15
    18e0:	68 94       	set
    18e2:	e1 f8       	bld	r14, 1
    mode=FAULT_MODE; // Fault condition
    break;
   }
   if((key_code==STOP_CODE)&&(key_code!=old_key_code))
   {
    old_key_code=key_code;    
    18e4:	c1 e0       	ldi	r28, 0x01	; 1
    18e6:	d0 e0       	ldi	r29, 0x00	; 0
   {
    DISABLE_MOTOR;
    flags.deceleration_f=0;
    flags.dir_change_f=0;
    old_key_code=key_code;
    mode=FAULT_MODE; // Fault condition
    18e8:	12 e0       	ldi	r17, 0x02	; 2
    else
    {     
     DIR_LED1_OFF;
     DIR_LED2_ON;
    }
    flags.dir_f^=1;
    18ea:	01 e0       	ldi	r16, 0x01	; 1
	LCD_0();
	Initial();
	
	while (1)
 {
  key_code=temp_key_code;
    18ec:	80 91 78 01 	lds	r24, 0x0178
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	90 93 a6 01 	sts	0x01A6, r25
    18f6:	80 93 a5 01 	sts	0x01A5, r24
  switch(mode)
    18fa:	20 91 7c 01 	lds	r18, 0x017C
    18fe:	21 30       	cpi	r18, 0x01	; 1
    1900:	09 f4       	brne	.+2      	; 0x1904 <main+0x88>
    1902:	48 c0       	rjmp	.+144    	; 0x1994 <main+0x118>
    1904:	21 30       	cpi	r18, 0x01	; 1
    1906:	20 f0       	brcs	.+8      	; 0x1910 <main+0x94>
    1908:	22 30       	cpi	r18, 0x02	; 2
    190a:	09 f0       	breq	.+2      	; 0x190e <main+0x92>
    190c:	a7 c0       	rjmp	.+334    	; 0x1a5c <main+0x1e0>
    190e:	8e c0       	rjmp	.+284    	; 0x1a2c <main+0x1b0>
  {
  
//----------------------------------------------------------------
  
  case STOP_MODE:
   if((FAULT_PIN&(1<<FAULT_bp))==0)
    1910:	81 99       	sbic	0x10, 1	; 16
    1912:	07 c0       	rjmp	.+14     	; 0x1922 <main+0xa6>
   {
    old_key_code=key_code;
    1914:	90 93 a3 01 	sts	0x01A3, r25
    1918:	80 93 a2 01 	sts	0x01A2, r24
    mode=FAULT_MODE; // IR2130 fault condition
    191c:	10 93 7c 01 	sts	0x017C, r17
    break;
    1920:	9d c0       	rjmp	.+314    	; 0x1a5c <main+0x1e0>
   }
   if((key_code==RUN_CODE)&&(key_code!=old_key_code))
    1922:	00 97       	sbiw	r24, 0x00	; 0
    1924:	81 f4       	brne	.+32     	; 0x1946 <main+0xca>
    1926:	20 91 a2 01 	lds	r18, 0x01A2
    192a:	30 91 a3 01 	lds	r19, 0x01A3
    192e:	21 15       	cp	r18, r1
    1930:	31 05       	cpc	r19, r1
    1932:	59 f1       	breq	.+86     	; 0x198a <main+0x10e>
   {
    old_key_code=key_code;
    1934:	10 92 a3 01 	sts	0x01A3, r1
    1938:	10 92 a2 01 	sts	0x01A2, r1
    mode=RUN_MODE;
    193c:	00 93 7c 01 	sts	0x017C, r16
    RUN_LED_ON;
    1940:	92 98       	cbi	0x12, 2	; 18
    ENABLE_MOTOR;       
    1942:	90 9a       	sbi	0x12, 0	; 18
    1944:	8b c0       	rjmp	.+278    	; 0x1a5c <main+0x1e0>
   }
   else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
    1946:	82 30       	cpi	r24, 0x02	; 2
    1948:	91 05       	cpc	r25, r1
    194a:	f9 f4       	brne	.+62     	; 0x198a <main+0x10e>
    194c:	20 91 a2 01 	lds	r18, 0x01A2
    1950:	30 91 a3 01 	lds	r19, 0x01A3
    1954:	22 30       	cpi	r18, 0x02	; 2
    1956:	31 05       	cpc	r19, r1
    1958:	c1 f0       	breq	.+48     	; 0x198a <main+0x10e>
   {
    old_key_code=key_code;
    195a:	f0 92 a3 01 	sts	0x01A3, r15
    195e:	e0 92 a2 01 	sts	0x01A2, r14
    if(flags.dir_f)
    1962:	80 91 a4 01 	lds	r24, 0x01A4
    1966:	80 ff       	sbrs	r24, 0
    1968:	03 c0       	rjmp	.+6      	; 0x1970 <main+0xf4>
    {     
     DIR_LED1_ON;
    196a:	93 98       	cbi	0x12, 3	; 18
     DIR_LED2_OFF;     
    196c:	94 9a       	sbi	0x12, 4	; 18
    196e:	02 c0       	rjmp	.+4      	; 0x1974 <main+0xf8>
    }
    else
    {     
     DIR_LED1_OFF;
    1970:	93 9a       	sbi	0x12, 3	; 18
     DIR_LED2_ON;
    1972:	94 98       	cbi	0x12, 4	; 18
    }
    flags.dir_f^=1;
    1974:	90 91 a4 01 	lds	r25, 0x01A4
    1978:	91 70       	andi	r25, 0x01	; 1
    197a:	90 27       	eor	r25, r16
    197c:	80 91 a4 01 	lds	r24, 0x01A4
    1980:	8e 7f       	andi	r24, 0xFE	; 254
    1982:	89 2b       	or	r24, r25
    1984:	80 93 a4 01 	sts	0x01A4, r24
    1988:	69 c0       	rjmp	.+210    	; 0x1a5c <main+0x1e0>
   }
   else old_key_code=key_code;   
    198a:	90 93 a3 01 	sts	0x01A3, r25
    198e:	80 93 a2 01 	sts	0x01A2, r24
    1992:	64 c0       	rjmp	.+200    	; 0x1a5c <main+0x1e0>
   break;
  
//----------------------------------------------------------------
  
  case RUN_MODE: 
   if((FAULT_PIN&(1<<FAULT_bp))==0)
    1994:	81 99       	sbic	0x10, 1	; 16
    1996:	16 c0       	rjmp	.+44     	; 0x19c4 <main+0x148>
   {
    DISABLE_MOTOR;
    1998:	90 98       	cbi	0x12, 0	; 18
    flags.deceleration_f=0;
    199a:	80 91 a4 01 	lds	r24, 0x01A4
    199e:	8d 7f       	andi	r24, 0xFD	; 253
    19a0:	80 93 a4 01 	sts	0x01A4, r24
    flags.dir_change_f=0;
    19a4:	80 91 a4 01 	lds	r24, 0x01A4
    19a8:	8b 7f       	andi	r24, 0xFB	; 251
    19aa:	80 93 a4 01 	sts	0x01A4, r24
    old_key_code=key_code;
    19ae:	80 91 a5 01 	lds	r24, 0x01A5
    19b2:	90 91 a6 01 	lds	r25, 0x01A6
    19b6:	90 93 a3 01 	sts	0x01A3, r25
    19ba:	80 93 a2 01 	sts	0x01A2, r24
    mode=FAULT_MODE; // Fault condition
    19be:	10 93 7c 01 	sts	0x017C, r17
    break;
    19c2:	4c c0       	rjmp	.+152    	; 0x1a5c <main+0x1e0>
   }
   if((key_code==STOP_CODE)&&(key_code!=old_key_code))
    19c4:	81 30       	cpi	r24, 0x01	; 1
    19c6:	91 05       	cpc	r25, r1
    19c8:	89 f4       	brne	.+34     	; 0x19ec <main+0x170>
    19ca:	20 91 a2 01 	lds	r18, 0x01A2
    19ce:	30 91 a3 01 	lds	r19, 0x01A3
    19d2:	21 30       	cpi	r18, 0x01	; 1
    19d4:	31 05       	cpc	r19, r1
    19d6:	29 f1       	breq	.+74     	; 0x1a22 <main+0x1a6>
   {
    old_key_code=key_code;    
    19d8:	d0 93 a3 01 	sts	0x01A3, r29
    19dc:	c0 93 a2 01 	sts	0x01A2, r28
    flags.deceleration_f=1;    
    19e0:	80 91 a4 01 	lds	r24, 0x01A4
    19e4:	82 60       	ori	r24, 0x02	; 2
    19e6:	80 93 a4 01 	sts	0x01A4, r24
    19ea:	38 c0       	rjmp	.+112    	; 0x1a5c <main+0x1e0>
   }
   else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
    19ec:	82 30       	cpi	r24, 0x02	; 2
    19ee:	91 05       	cpc	r25, r1
    19f0:	c1 f4       	brne	.+48     	; 0x1a22 <main+0x1a6>
    19f2:	20 91 a2 01 	lds	r18, 0x01A2
    19f6:	30 91 a3 01 	lds	r19, 0x01A3
    19fa:	22 30       	cpi	r18, 0x02	; 2
    19fc:	31 05       	cpc	r19, r1
    19fe:	89 f0       	breq	.+34     	; 0x1a22 <main+0x1a6>
   {
    old_key_code=key_code;
    1a00:	f0 92 a3 01 	sts	0x01A3, r15
    1a04:	e0 92 a2 01 	sts	0x01A2, r14
    cli()   ; 
    1a08:	f8 94       	cli
    flags.deceleration_f=1;
    1a0a:	80 91 a4 01 	lds	r24, 0x01A4
    1a0e:	82 60       	ori	r24, 0x02	; 2
    1a10:	80 93 a4 01 	sts	0x01A4, r24
    flags.dir_change_f=1;
    1a14:	80 91 a4 01 	lds	r24, 0x01A4
    1a18:	84 60       	ori	r24, 0x04	; 4
    1a1a:	80 93 a4 01 	sts	0x01A4, r24
    sei() ;  
    1a1e:	78 94       	sei
    1a20:	1d c0       	rjmp	.+58     	; 0x1a5c <main+0x1e0>
   }
   else old_key_code=key_code;
    1a22:	90 93 a3 01 	sts	0x01A3, r25
    1a26:	80 93 a2 01 	sts	0x01A2, r24
    1a2a:	18 c0       	rjmp	.+48     	; 0x1a5c <main+0x1e0>
   break;  
   
//----------------------------------------------------------------
  
  case FAULT_MODE:  
   if((FAULT_PIN&(1<<FAULT_bp))&&(key_code==STOP_CODE)&&(key_code!=old_key_code))    
    1a2c:	81 9b       	sbis	0x10, 1	; 16
    1a2e:	12 c0       	rjmp	.+36     	; 0x1a54 <main+0x1d8>
    1a30:	81 30       	cpi	r24, 0x01	; 1
    1a32:	91 05       	cpc	r25, r1
    1a34:	79 f4       	brne	.+30     	; 0x1a54 <main+0x1d8>
    1a36:	20 91 a2 01 	lds	r18, 0x01A2
    1a3a:	30 91 a3 01 	lds	r19, 0x01A3
    1a3e:	21 30       	cpi	r18, 0x01	; 1
    1a40:	31 05       	cpc	r19, r1
    1a42:	41 f0       	breq	.+16     	; 0x1a54 <main+0x1d8>
   {
     old_key_code=key_code;
    1a44:	d0 93 a3 01 	sts	0x01A3, r29
    1a48:	c0 93 a2 01 	sts	0x01A2, r28
     mode=STOP_MODE;
    1a4c:	10 92 7c 01 	sts	0x017C, r1
     RUN_LED_OFF;
    1a50:	92 9a       	sbi	0x12, 2	; 18
    1a52:	04 c0       	rjmp	.+8      	; 0x1a5c <main+0x1e0>
   }   
   else old_key_code=key_code;
    1a54:	90 93 a3 01 	sts	0x01A3, r25
    1a58:	80 93 a2 01 	sts	0x01A2, r24
   break;   
  }
  test01();
    1a5c:	0e 94 28 0b 	call	0x1650	; 0x1650 <test01>
 }	//while(1);
    1a60:	45 cf       	rjmp	.-374    	; 0x18ec <main+0x70>

00001a62 <N11_Write>:
    1a62:	df 93       	push	r29
    1a64:	cf 93       	push	r28
    1a66:	0f 92       	push	r0
    1a68:	cd b7       	in	r28, 0x3d	; 61
    1a6a:	de b7       	in	r29, 0x3e	; 62
    1a6c:	69 83       	std	Y+1, r22	; 0x01
    1a6e:	ab 98       	cbi	0x15, 3	; 21
    1a70:	a8 98       	cbi	0x15, 0	; 21
    1a72:	88 23       	and	r24, r24
    1a74:	19 f0       	breq	.+6      	; 0x1a7c <N11_Write+0x1a>
    1a76:	a9 9a       	sbi	0x15, 1	; 21
    1a78:	85 b3       	in	r24, 0x15	; 21
    1a7a:	02 c0       	rjmp	.+4      	; 0x1a80 <N11_Write+0x1e>
    1a7c:	a9 98       	cbi	0x15, 1	; 21
    1a7e:	85 b3       	in	r24, 0x15	; 21
    1a80:	a8 9a       	sbi	0x15, 0	; 21
    1a82:	87 e0       	ldi	r24, 0x07	; 7
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	fe 01       	movw	r30, r28
    1a88:	31 96       	adiw	r30, 0x01	; 1
    1a8a:	a8 98       	cbi	0x15, 0	; 21
    1a8c:	20 81       	ld	r18, Z
    1a8e:	30 e0       	ldi	r19, 0x00	; 0
    1a90:	08 2e       	mov	r0, r24
    1a92:	02 c0       	rjmp	.+4      	; 0x1a98 <N11_Write+0x36>
    1a94:	35 95       	asr	r19
    1a96:	27 95       	ror	r18
    1a98:	0a 94       	dec	r0
    1a9a:	e2 f7       	brpl	.-8      	; 0x1a94 <N11_Write+0x32>
    1a9c:	20 ff       	sbrs	r18, 0
    1a9e:	03 c0       	rjmp	.+6      	; 0x1aa6 <N11_Write+0x44>
    1aa0:	a9 9a       	sbi	0x15, 1	; 21
    1aa2:	25 b3       	in	r18, 0x15	; 21
    1aa4:	02 c0       	rjmp	.+4      	; 0x1aaa <N11_Write+0x48>
    1aa6:	a9 98       	cbi	0x15, 1	; 21
    1aa8:	25 b3       	in	r18, 0x15	; 21
    1aaa:	a8 9a       	sbi	0x15, 0	; 21
    1aac:	01 97       	sbiw	r24, 0x01	; 1
    1aae:	2f ef       	ldi	r18, 0xFF	; 255
    1ab0:	8f 3f       	cpi	r24, 0xFF	; 255
    1ab2:	92 07       	cpc	r25, r18
    1ab4:	51 f7       	brne	.-44     	; 0x1a8a <N11_Write+0x28>
    1ab6:	ab 9a       	sbi	0x15, 3	; 21
    1ab8:	0f 90       	pop	r0
    1aba:	cf 91       	pop	r28
    1abc:	df 91       	pop	r29
    1abe:	08 95       	ret

00001ac0 <N11_GotoXR>:
    1ac0:	1f 93       	push	r17
    1ac2:	18 2f       	mov	r17, r24
    1ac4:	6f 70       	andi	r22, 0x0F	; 15
    1ac6:	60 6b       	ori	r22, 0xB0	; 176
    1ac8:	80 e0       	ldi	r24, 0x00	; 0
    1aca:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1ace:	61 2f       	mov	r22, r17
    1ad0:	6f 70       	andi	r22, 0x0F	; 15
    1ad2:	80 e0       	ldi	r24, 0x00	; 0
    1ad4:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1ad8:	61 2f       	mov	r22, r17
    1ada:	62 95       	swap	r22
    1adc:	6f 70       	andi	r22, 0x0F	; 15
    1ade:	67 70       	andi	r22, 0x07	; 7
    1ae0:	60 61       	ori	r22, 0x10	; 16
    1ae2:	80 e0       	ldi	r24, 0x00	; 0
    1ae4:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1ae8:	1f 91       	pop	r17
    1aea:	08 95       	ret

00001aec <N11_CLS>:
    1aec:	ff 92       	push	r15
    1aee:	0f 93       	push	r16
    1af0:	1f 93       	push	r17
    1af2:	80 e0       	ldi	r24, 0x00	; 0
    1af4:	60 e0       	ldi	r22, 0x00	; 0
    1af6:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <N11_GotoXR>
    1afa:	80 e0       	ldi	r24, 0x00	; 0
    1afc:	6e ea       	ldi	r22, 0xAE	; 174
    1afe:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b02:	00 e0       	ldi	r16, 0x00	; 0
    1b04:	0f 2e       	mov	r0, r31
    1b06:	f0 e6       	ldi	r31, 0x60	; 96
    1b08:	ff 2e       	mov	r15, r31
    1b0a:	f0 2d       	mov	r31, r0
    1b0c:	09 c0       	rjmp	.+18     	; 0x1b20 <N11_CLS+0x34>
    1b0e:	81 e0       	ldi	r24, 0x01	; 1
    1b10:	60 e0       	ldi	r22, 0x00	; 0
    1b12:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b16:	11 50       	subi	r17, 0x01	; 1
    1b18:	d1 f7       	brne	.-12     	; 0x1b0e <N11_CLS+0x22>
    1b1a:	0f 5f       	subi	r16, 0xFF	; 255
    1b1c:	09 30       	cpi	r16, 0x09	; 9
    1b1e:	11 f0       	breq	.+4      	; 0x1b24 <N11_CLS+0x38>
    1b20:	1f 2d       	mov	r17, r15
    1b22:	f5 cf       	rjmp	.-22     	; 0x1b0e <N11_CLS+0x22>
    1b24:	80 e0       	ldi	r24, 0x00	; 0
    1b26:	6f ea       	ldi	r22, 0xAF	; 175
    1b28:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b2c:	1f 91       	pop	r17
    1b2e:	0f 91       	pop	r16
    1b30:	ff 90       	pop	r15
    1b32:	08 95       	ret

00001b34 <N11_Init>:
    1b34:	a3 9a       	sbi	0x14, 3	; 20
    1b36:	ab 9a       	sbi	0x15, 3	; 21
    1b38:	a1 9a       	sbi	0x14, 1	; 20
    1b3a:	a9 98       	cbi	0x15, 1	; 21
    1b3c:	a0 9a       	sbi	0x14, 0	; 20
    1b3e:	a8 98       	cbi	0x15, 0	; 21
    1b40:	a2 9a       	sbi	0x14, 2	; 20
    1b42:	aa 98       	cbi	0x15, 2	; 21
    1b44:	ab 98       	cbi	0x15, 3	; 21
    1b46:	83 ed       	ldi	r24, 0xD3	; 211
    1b48:	90 e3       	ldi	r25, 0x30	; 48
    1b4a:	01 97       	sbiw	r24, 0x01	; 1
    1b4c:	f1 f7       	brne	.-4      	; 0x1b4a <N11_Init+0x16>
    1b4e:	00 c0       	rjmp	.+0      	; 0x1b50 <N11_Init+0x1c>
    1b50:	00 00       	nop
    1b52:	aa 9a       	sbi	0x15, 2	; 21
    1b54:	80 e0       	ldi	r24, 0x00	; 0
    1b56:	63 e2       	ldi	r22, 0x23	; 35
    1b58:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b5c:	80 e0       	ldi	r24, 0x00	; 0
    1b5e:	60 e9       	ldi	r22, 0x90	; 144
    1b60:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b64:	80 e0       	ldi	r24, 0x00	; 0
    1b66:	64 ea       	ldi	r22, 0xA4	; 164
    1b68:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b6c:	80 e0       	ldi	r24, 0x00	; 0
    1b6e:	6f e2       	ldi	r22, 0x2F	; 47
    1b70:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	60 e4       	ldi	r22, 0x40	; 64
    1b78:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b7c:	80 e0       	ldi	r24, 0x00	; 0
    1b7e:	60 eb       	ldi	r22, 0xB0	; 176
    1b80:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b84:	80 e0       	ldi	r24, 0x00	; 0
    1b86:	60 e1       	ldi	r22, 0x10	; 16
    1b88:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b8c:	80 e0       	ldi	r24, 0x00	; 0
    1b8e:	60 e0       	ldi	r22, 0x00	; 0
    1b90:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b94:	80 e0       	ldi	r24, 0x00	; 0
    1b96:	68 ec       	ldi	r22, 0xC8	; 200
    1b98:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1b9c:	80 e0       	ldi	r24, 0x00	; 0
    1b9e:	61 ea       	ldi	r22, 0xA1	; 161
    1ba0:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1ba4:	80 e0       	ldi	r24, 0x00	; 0
    1ba6:	6c ea       	ldi	r22, 0xAC	; 172
    1ba8:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1bac:	80 e0       	ldi	r24, 0x00	; 0
    1bae:	67 e0       	ldi	r22, 0x07	; 7
    1bb0:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1bb4:	80 e0       	ldi	r24, 0x00	; 0
    1bb6:	6f ea       	ldi	r22, 0xAF	; 175
    1bb8:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1bbc:	0e 94 76 0d 	call	0x1aec	; 0x1aec <N11_CLS>
    1bc0:	80 e0       	ldi	r24, 0x00	; 0
    1bc2:	67 ea       	ldi	r22, 0xA7	; 167
    1bc4:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1bc8:	8f e9       	ldi	r24, 0x9F	; 159
    1bca:	96 e8       	ldi	r25, 0x86	; 134
    1bcc:	a1 e0       	ldi	r26, 0x01	; 1
    1bce:	81 50       	subi	r24, 0x01	; 1
    1bd0:	90 40       	sbci	r25, 0x00	; 0
    1bd2:	a0 40       	sbci	r26, 0x00	; 0
    1bd4:	e1 f7       	brne	.-8      	; 0x1bce <N11_Init+0x9a>
    1bd6:	00 c0       	rjmp	.+0      	; 0x1bd8 <N11_Init+0xa4>
    1bd8:	00 00       	nop
    1bda:	80 e0       	ldi	r24, 0x00	; 0
    1bdc:	66 ea       	ldi	r22, 0xA6	; 166
    1bde:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1be2:	8f e9       	ldi	r24, 0x9F	; 159
    1be4:	96 e8       	ldi	r25, 0x86	; 134
    1be6:	a1 e0       	ldi	r26, 0x01	; 1
    1be8:	81 50       	subi	r24, 0x01	; 1
    1bea:	90 40       	sbci	r25, 0x00	; 0
    1bec:	a0 40       	sbci	r26, 0x00	; 0
    1bee:	e1 f7       	brne	.-8      	; 0x1be8 <N11_Init+0xb4>
    1bf0:	00 c0       	rjmp	.+0      	; 0x1bf2 <N11_Init+0xbe>
    1bf2:	00 00       	nop
    1bf4:	08 95       	ret

00001bf6 <N11_Update>:
    1bf6:	08 95       	ret

00001bf8 <N11_Contrast>:
    1bf8:	1f 93       	push	r17
    1bfa:	18 2f       	mov	r17, r24
    1bfc:	80 e0       	ldi	r24, 0x00	; 0
    1bfe:	61 e2       	ldi	r22, 0x21	; 33
    1c00:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1c04:	61 2f       	mov	r22, r17
    1c06:	60 68       	ori	r22, 0x80	; 128
    1c08:	80 e0       	ldi	r24, 0x00	; 0
    1c0a:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1c0e:	80 e0       	ldi	r24, 0x00	; 0
    1c10:	60 e2       	ldi	r22, 0x20	; 32
    1c12:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1c16:	1f 91       	pop	r17
    1c18:	08 95       	ret

00001c1a <N11_Backlight>:
    1c1a:	08 95       	ret

00001c1c <N11_SetPixel>:
    1c1c:	08 95       	ret

00001c1e <N11_ReadPixel>:
    1c1e:	08 95       	ret

00001c20 <N11_FillRect>:
    1c20:	08 95       	ret

00001c22 <N11_DrawBitmap>:
    1c22:	08 95       	ret

00001c24 <N11_PrintChar>:
    1c24:	0f 93       	push	r16
    1c26:	1f 93       	push	r17
    1c28:	cf 93       	push	r28
    1c2a:	df 93       	push	r29
    1c2c:	05 e0       	ldi	r16, 0x05	; 5
    1c2e:	80 9f       	mul	r24, r16
    1c30:	80 01       	movw	r16, r0
    1c32:	11 24       	eor	r1, r1
    1c34:	e8 01       	movw	r28, r16
    1c36:	c4 51       	subi	r28, 0x14	; 20
    1c38:	d0 40       	sbci	r29, 0x00	; 0
    1c3a:	0f 50       	subi	r16, 0x0F	; 15
    1c3c:	10 40       	sbci	r17, 0x00	; 0
    1c3e:	fe 01       	movw	r30, r28
    1c40:	64 91       	lpm	r22, Z+
    1c42:	66 0f       	add	r22, r22
    1c44:	81 e0       	ldi	r24, 0x01	; 1
    1c46:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1c4a:	21 96       	adiw	r28, 0x01	; 1
    1c4c:	c0 17       	cp	r28, r16
    1c4e:	d1 07       	cpc	r29, r17
    1c50:	b1 f7       	brne	.-20     	; 0x1c3e <N11_PrintChar+0x1a>
    1c52:	81 e0       	ldi	r24, 0x01	; 1
    1c54:	60 e0       	ldi	r22, 0x00	; 0
    1c56:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1c5a:	df 91       	pop	r29
    1c5c:	cf 91       	pop	r28
    1c5e:	1f 91       	pop	r17
    1c60:	0f 91       	pop	r16
    1c62:	08 95       	ret

00001c64 <N11_PrintString>:
    1c64:	cf 93       	push	r28
    1c66:	df 93       	push	r29
    1c68:	ec 01       	movw	r28, r24
    1c6a:	80 e0       	ldi	r24, 0x00	; 0
    1c6c:	6e ea       	ldi	r22, 0xAE	; 174
    1c6e:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1c72:	88 81       	ld	r24, Y
    1c74:	88 23       	and	r24, r24
    1c76:	31 f0       	breq	.+12     	; 0x1c84 <N11_PrintString+0x20>
    1c78:	21 96       	adiw	r28, 0x01	; 1
    1c7a:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <N11_PrintChar>
    1c7e:	89 91       	ld	r24, Y+
    1c80:	88 23       	and	r24, r24
    1c82:	d9 f7       	brne	.-10     	; 0x1c7a <N11_PrintString+0x16>
    1c84:	80 e0       	ldi	r24, 0x00	; 0
    1c86:	6f ea       	ldi	r22, 0xAF	; 175
    1c88:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <N11_Write>
    1c8c:	df 91       	pop	r29
    1c8e:	cf 91       	pop	r28
    1c90:	08 95       	ret

00001c92 <A_calc>:
unsigned char A_calc(unsigned char sine, unsigned char Ain)
{
	unsigned int 						sine_temp;
	unsigned char 					sine1;
 
	sine1 = (sine<128)? ~sine : sine;
    1c92:	88 23       	and	r24, r24
    1c94:	c4 f0       	brlt	.+48     	; 0x1cc6 <A_calc+0x34>
    1c96:	80 95       	com	r24
 
	sine_temp   = ((unsigned int)sine1) <<1;
    1c98:	28 2f       	mov	r18, r24
    1c9a:	30 e0       	ldi	r19, 0x00	; 0
    1c9c:	22 0f       	add	r18, r18
    1c9e:	33 1f       	adc	r19, r19
	sine_temp  -= 255;
    1ca0:	2f 5f       	subi	r18, 0xFF	; 255
    1ca2:	30 40       	sbci	r19, 0x00	; 0
	sine_temp  *= Ain;
    1ca4:	70 e0       	ldi	r23, 0x00	; 0
    1ca6:	26 9f       	mul	r18, r22
    1ca8:	c0 01       	movw	r24, r0
    1caa:	27 9f       	mul	r18, r23
    1cac:	90 0d       	add	r25, r0
    1cae:	36 9f       	mul	r19, r22
    1cb0:	90 0d       	add	r25, r0
    1cb2:	11 24       	eor	r1, r1
	sine_temp >>= 8;
    1cb4:	89 2f       	mov	r24, r25
    1cb6:	99 27       	eor	r25, r25
	sine_temp  += 255;
    1cb8:	81 50       	subi	r24, 0x01	; 1
    1cba:	9f 4f       	sbci	r25, 0xFF	; 255
	sine_temp >>= 1;
    1cbc:	96 95       	lsr	r25
    1cbe:	87 95       	ror	r24
	sine_temp  += 1;
 
	sine1 = (unsigned char)sine_temp;
    1cc0:	8f 5f       	subi	r24, 0xFF	; 255
 
	return((sine<128)? ~sine1 : sine1);
    1cc2:	80 95       	com	r24
}	//A_calc
    1cc4:	08 95       	ret
	unsigned int 						sine_temp;
	unsigned char 					sine1;
 
	sine1 = (sine<128)? ~sine : sine;
 
	sine_temp   = ((unsigned int)sine1) <<1;
    1cc6:	28 2f       	mov	r18, r24
    1cc8:	30 e0       	ldi	r19, 0x00	; 0
    1cca:	22 0f       	add	r18, r18
    1ccc:	33 1f       	adc	r19, r19
	sine_temp  -= 255;
    1cce:	2f 5f       	subi	r18, 0xFF	; 255
    1cd0:	30 40       	sbci	r19, 0x00	; 0
	sine_temp  *= Ain;
    1cd2:	70 e0       	ldi	r23, 0x00	; 0
    1cd4:	26 9f       	mul	r18, r22
    1cd6:	c0 01       	movw	r24, r0
    1cd8:	27 9f       	mul	r18, r23
    1cda:	90 0d       	add	r25, r0
    1cdc:	36 9f       	mul	r19, r22
    1cde:	90 0d       	add	r25, r0
    1ce0:	11 24       	eor	r1, r1
	sine_temp >>= 8;
    1ce2:	89 2f       	mov	r24, r25
    1ce4:	99 27       	eor	r25, r25
	sine_temp  += 255;
    1ce6:	81 50       	subi	r24, 0x01	; 1
    1ce8:	9f 4f       	sbci	r25, 0xFF	; 255
	sine_temp >>= 1;
    1cea:	96 95       	lsr	r25
    1cec:	87 95       	ror	r24
	sine_temp  += 1;
 
	sine1 = (unsigned char)sine_temp;
    1cee:	8f 5f       	subi	r24, 0xFF	; 255
    1cf0:	08 95       	ret

00001cf2 <__vector_26>:
	return((sine<128)? ~sine1 : sine1);
}	//A_calc

//-----------------------------------------------------------------------------
ISR_PWM_SET()
{
    1cf2:	1f 92       	push	r1
    1cf4:	0f 92       	push	r0
    1cf6:	0f b6       	in	r0, 0x3f	; 63
    1cf8:	0f 92       	push	r0
    1cfa:	0b b6       	in	r0, 0x3b	; 59
    1cfc:	0f 92       	push	r0
    1cfe:	11 24       	eor	r1, r1
    1d00:	cf 92       	push	r12
    1d02:	df 92       	push	r13
    1d04:	ef 92       	push	r14
    1d06:	ff 92       	push	r15
    1d08:	1f 93       	push	r17
    1d0a:	2f 93       	push	r18
    1d0c:	3f 93       	push	r19
    1d0e:	4f 93       	push	r20
    1d10:	5f 93       	push	r21
    1d12:	6f 93       	push	r22
    1d14:	7f 93       	push	r23
    1d16:	8f 93       	push	r24
    1d18:	9f 93       	push	r25
    1d1a:	af 93       	push	r26
    1d1c:	bf 93       	push	r27
    1d1e:	ef 93       	push	r30
    1d20:	ff 93       	push	r31
	unsigned long 				A;

	if 			(speed>795)				index += 16;
    1d22:	80 91 81 01 	lds	r24, 0x0181
    1d26:	90 91 82 01 	lds	r25, 0x0182
    1d2a:	23 e0       	ldi	r18, 0x03	; 3
    1d2c:	8c 31       	cpi	r24, 0x1C	; 28
    1d2e:	92 07       	cpc	r25, r18
    1d30:	30 f0       	brcs	.+12     	; 0x1d3e <__vector_26+0x4c>
    1d32:	80 91 83 01 	lds	r24, 0x0183
    1d36:	80 5f       	subi	r24, 0xF0	; 240
    1d38:	80 93 83 01 	sts	0x0183, r24
    1d3c:	2e c0       	rjmp	.+92     	; 0x1d9a <__vector_26+0xa8>
	else if	(speed>595)				index += 8;
    1d3e:	80 91 81 01 	lds	r24, 0x0181
    1d42:	90 91 82 01 	lds	r25, 0x0182
    1d46:	22 e0       	ldi	r18, 0x02	; 2
    1d48:	84 35       	cpi	r24, 0x54	; 84
    1d4a:	92 07       	cpc	r25, r18
    1d4c:	30 f0       	brcs	.+12     	; 0x1d5a <__vector_26+0x68>
    1d4e:	80 91 83 01 	lds	r24, 0x0183
    1d52:	88 5f       	subi	r24, 0xF8	; 248
    1d54:	80 93 83 01 	sts	0x0183, r24
    1d58:	20 c0       	rjmp	.+64     	; 0x1d9a <__vector_26+0xa8>
	else if	(speed>395)				index += 4;
    1d5a:	80 91 81 01 	lds	r24, 0x0181
    1d5e:	90 91 82 01 	lds	r25, 0x0182
    1d62:	21 e0       	ldi	r18, 0x01	; 1
    1d64:	8c 38       	cpi	r24, 0x8C	; 140
    1d66:	92 07       	cpc	r25, r18
    1d68:	30 f0       	brcs	.+12     	; 0x1d76 <__vector_26+0x84>
    1d6a:	80 91 83 01 	lds	r24, 0x0183
    1d6e:	8c 5f       	subi	r24, 0xFC	; 252
    1d70:	80 93 83 01 	sts	0x0183, r24
    1d74:	12 c0       	rjmp	.+36     	; 0x1d9a <__vector_26+0xa8>
	else if	(speed>195)				index += 2;
    1d76:	80 91 81 01 	lds	r24, 0x0181
    1d7a:	90 91 82 01 	lds	r25, 0x0182
    1d7e:	84 3c       	cpi	r24, 0xC4	; 196
    1d80:	91 05       	cpc	r25, r1
    1d82:	30 f0       	brcs	.+12     	; 0x1d90 <__vector_26+0x9e>
    1d84:	80 91 83 01 	lds	r24, 0x0183
    1d88:	8e 5f       	subi	r24, 0xFE	; 254
    1d8a:	80 93 83 01 	sts	0x0183, r24
    1d8e:	05 c0       	rjmp	.+10     	; 0x1d9a <__vector_26+0xa8>
	else 											index += 1;
    1d90:	80 91 83 01 	lds	r24, 0x0183
    1d94:	8f 5f       	subi	r24, 0xFF	; 255
    1d96:	80 93 83 01 	sts	0x0183, r24

	//-------------------
	if(speed>=f_Base)
    1d9a:	80 91 81 01 	lds	r24, 0x0181
    1d9e:	90 91 82 01 	lds	r25, 0x0182
    1da2:	21 e0       	ldi	r18, 0x01	; 1
    1da4:	8f 3e       	cpi	r24, 0xEF	; 239
    1da6:	92 07       	cpc	r25, r18
    1da8:	08 f4       	brcc	.+2      	; 0x1dac <__vector_26+0xba>
    1daa:	38 c0       	rjmp	.+112    	; 0x1e1c <__vector_26+0x12a>
	{
		 if (flags.dir_f){
    1dac:	80 91 a4 01 	lds	r24, 0x01A4
    1db0:	80 ff       	sbrs	r24, 0
    1db2:	14 c0       	rjmp	.+40     	; 0x1ddc <__vector_26+0xea>
		   PWMR_SET(pgm_read_byte(&sine[R_Index(index)]));
    1db4:	e0 91 83 01 	lds	r30, 0x0183
    1db8:	f0 e0       	ldi	r31, 0x00	; 0
    1dba:	e4 59       	subi	r30, 0x94	; 148
    1dbc:	fc 4f       	sbci	r31, 0xFC	; 252
    1dbe:	e4 91       	lpm	r30, Z+
    1dc0:	f0 e0       	ldi	r31, 0x00	; 0
    1dc2:	fb bd       	out	0x2b, r31	; 43
    1dc4:	ea bd       	out	0x2a, r30	; 42
		   PWMS_SET(pgm_read_byte(&sine[S_Index(index)]));
    1dc6:	e0 91 83 01 	lds	r30, 0x0183
    1dca:	ec 5a       	subi	r30, 0xAC	; 172
    1dcc:	f0 e0       	ldi	r31, 0x00	; 0
    1dce:	e4 59       	subi	r30, 0x94	; 148
    1dd0:	fc 4f       	sbci	r31, 0xFC	; 252
    1dd2:	e4 91       	lpm	r30, Z+
    1dd4:	f0 e0       	ldi	r31, 0x00	; 0
    1dd6:	f9 bd       	out	0x29, r31	; 41
    1dd8:	e8 bd       	out	0x28, r30	; 40
    1dda:	13 c0       	rjmp	.+38     	; 0x1e02 <__vector_26+0x110>
		 }
		 else
		 {
			PWMS_SET(pgm_read_byte(&sine[R_Index(index)]));
    1ddc:	e0 91 83 01 	lds	r30, 0x0183
    1de0:	f0 e0       	ldi	r31, 0x00	; 0
    1de2:	e4 59       	subi	r30, 0x94	; 148
    1de4:	fc 4f       	sbci	r31, 0xFC	; 252
    1de6:	e4 91       	lpm	r30, Z+
    1de8:	f0 e0       	ldi	r31, 0x00	; 0
    1dea:	f9 bd       	out	0x29, r31	; 41
    1dec:	e8 bd       	out	0x28, r30	; 40
		    PWMR_SET(pgm_read_byte(&sine[S_Index(index)])); 
    1dee:	e0 91 83 01 	lds	r30, 0x0183
    1df2:	ec 5a       	subi	r30, 0xAC	; 172
    1df4:	f0 e0       	ldi	r31, 0x00	; 0
    1df6:	e4 59       	subi	r30, 0x94	; 148
    1df8:	fc 4f       	sbci	r31, 0xFC	; 252
    1dfa:	e4 91       	lpm	r30, Z+
    1dfc:	f0 e0       	ldi	r31, 0x00	; 0
    1dfe:	fb bd       	out	0x2b, r31	; 43
    1e00:	ea bd       	out	0x2a, r30	; 42
		 }		
		PWMT_SET(pgm_read_byte(&sine[T_Index(index)]));
    1e02:	e0 91 83 01 	lds	r30, 0x0183
    1e06:	e6 55       	subi	r30, 0x56	; 86
    1e08:	f0 e0       	ldi	r31, 0x00	; 0
    1e0a:	e4 59       	subi	r30, 0x94	; 148
    1e0c:	fc 4f       	sbci	r31, 0xFC	; 252
    1e0e:	e4 91       	lpm	r30, Z+
    1e10:	f0 e0       	ldi	r31, 0x00	; 0
    1e12:	f0 93 79 00 	sts	0x0079, r31
    1e16:	e0 93 78 00 	sts	0x0078, r30
    1e1a:	96 c0       	rjmp	.+300    	; 0x1f48 <__vector_26+0x256>
	}

	//-----
	else if (speed<=f_Boost)
    1e1c:	80 91 81 01 	lds	r24, 0x0181
    1e20:	90 91 82 01 	lds	r25, 0x0182
    1e24:	80 36       	cpi	r24, 0x60	; 96
    1e26:	91 05       	cpc	r25, r1
    1e28:	08 f0       	brcs	.+2      	; 0x1e2c <__vector_26+0x13a>
    1e2a:	47 c0       	rjmp	.+142    	; 0x1eba <__vector_26+0x1c8>
	{
		if (flags.dir_f){
    1e2c:	80 91 a4 01 	lds	r24, 0x01A4
    1e30:	80 ff       	sbrs	r24, 0
    1e32:	1a c0       	rjmp	.+52     	; 0x1e68 <__vector_26+0x176>
			
		PWMR_SET(A_calc(pgm_read_byte(&sine[R_Index(index)]), A_Boost));
    1e34:	e0 91 83 01 	lds	r30, 0x0183
    1e38:	f0 e0       	ldi	r31, 0x00	; 0
    1e3a:	e4 59       	subi	r30, 0x94	; 148
    1e3c:	fc 4f       	sbci	r31, 0xFC	; 252
    1e3e:	84 91       	lpm	r24, Z+
    1e40:	69 e1       	ldi	r22, 0x19	; 25
    1e42:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <A_calc>
    1e46:	90 e0       	ldi	r25, 0x00	; 0
    1e48:	9b bd       	out	0x2b, r25	; 43
    1e4a:	8a bd       	out	0x2a, r24	; 42
		PWMS_SET(A_calc(pgm_read_byte(&sine[S_Index(index)]), A_Boost));
    1e4c:	e0 91 83 01 	lds	r30, 0x0183
    1e50:	ec 5a       	subi	r30, 0xAC	; 172
    1e52:	f0 e0       	ldi	r31, 0x00	; 0
    1e54:	e4 59       	subi	r30, 0x94	; 148
    1e56:	fc 4f       	sbci	r31, 0xFC	; 252
    1e58:	84 91       	lpm	r24, Z+
    1e5a:	69 e1       	ldi	r22, 0x19	; 25
    1e5c:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <A_calc>
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	99 bd       	out	0x29, r25	; 41
    1e64:	88 bd       	out	0x28, r24	; 40
    1e66:	19 c0       	rjmp	.+50     	; 0x1e9a <__vector_26+0x1a8>
		}
		else{
		PWMS_SET(A_calc(pgm_read_byte(&sine[R_Index(index)]), A_Boost));
    1e68:	e0 91 83 01 	lds	r30, 0x0183
    1e6c:	f0 e0       	ldi	r31, 0x00	; 0
    1e6e:	e4 59       	subi	r30, 0x94	; 148
    1e70:	fc 4f       	sbci	r31, 0xFC	; 252
    1e72:	84 91       	lpm	r24, Z+
    1e74:	69 e1       	ldi	r22, 0x19	; 25
    1e76:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <A_calc>
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	99 bd       	out	0x29, r25	; 41
    1e7e:	88 bd       	out	0x28, r24	; 40
		PWMR_SET(A_calc(pgm_read_byte(&sine[S_Index(index)]), A_Boost));	
    1e80:	e0 91 83 01 	lds	r30, 0x0183
    1e84:	ec 5a       	subi	r30, 0xAC	; 172
    1e86:	f0 e0       	ldi	r31, 0x00	; 0
    1e88:	e4 59       	subi	r30, 0x94	; 148
    1e8a:	fc 4f       	sbci	r31, 0xFC	; 252
    1e8c:	84 91       	lpm	r24, Z+
    1e8e:	69 e1       	ldi	r22, 0x19	; 25
    1e90:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <A_calc>
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	9b bd       	out	0x2b, r25	; 43
    1e98:	8a bd       	out	0x2a, r24	; 42
		}					
		PWMT_SET(A_calc(pgm_read_byte(&sine[T_Index(index)]), A_Boost));
    1e9a:	e0 91 83 01 	lds	r30, 0x0183
    1e9e:	e6 55       	subi	r30, 0x56	; 86
    1ea0:	f0 e0       	ldi	r31, 0x00	; 0
    1ea2:	e4 59       	subi	r30, 0x94	; 148
    1ea4:	fc 4f       	sbci	r31, 0xFC	; 252
    1ea6:	84 91       	lpm	r24, Z+
    1ea8:	69 e1       	ldi	r22, 0x19	; 25
    1eaa:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <A_calc>
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	90 93 79 00 	sts	0x0079, r25
    1eb4:	80 93 78 00 	sts	0x0078, r24
    1eb8:	47 c0       	rjmp	.+142    	; 0x1f48 <__vector_26+0x256>
	}

	//-----
	else
	{
		A = ((N *(unsigned long)(speed -f_Boost)) /M) +A_Boost;
    1eba:	20 91 81 01 	lds	r18, 0x0181
    1ebe:	30 91 82 01 	lds	r19, 0x0182
		
		PWMR_SET(A_calc(pgm_read_byte(&sine[R_Index(index)]), (unsigned char)A));
    1ec2:	e0 91 83 01 	lds	r30, 0x0183
    1ec6:	f0 e0       	ldi	r31, 0x00	; 0
    1ec8:	e4 59       	subi	r30, 0x94	; 148
    1eca:	fc 4f       	sbci	r31, 0xFC	; 252
    1ecc:	14 91       	lpm	r17, Z+
	}

	//-----
	else
	{
		A = ((N *(unsigned long)(speed -f_Boost)) /M) +A_Boost;
    1ece:	2f 55       	subi	r18, 0x5F	; 95
    1ed0:	30 40       	sbci	r19, 0x00	; 0
    1ed2:	46 ee       	ldi	r20, 0xE6	; 230
    1ed4:	50 e0       	ldi	r21, 0x00	; 0
    1ed6:	0e 94 76 11 	call	0x22ec	; 0x22ec <__umulhisi3>
    1eda:	20 e9       	ldi	r18, 0x90	; 144
    1edc:	31 e0       	ldi	r19, 0x01	; 1
    1ede:	40 e0       	ldi	r20, 0x00	; 0
    1ee0:	50 e0       	ldi	r21, 0x00	; 0
    1ee2:	0e 94 99 11 	call	0x2332	; 0x2332 <__udivmodsi4>
    1ee6:	0f 2e       	mov	r0, r31
    1ee8:	f9 e1       	ldi	r31, 0x19	; 25
    1eea:	cf 2e       	mov	r12, r31
    1eec:	f0 e0       	ldi	r31, 0x00	; 0
    1eee:	df 2e       	mov	r13, r31
    1ef0:	f0 e0       	ldi	r31, 0x00	; 0
    1ef2:	ef 2e       	mov	r14, r31
    1ef4:	f0 e0       	ldi	r31, 0x00	; 0
    1ef6:	ff 2e       	mov	r15, r31
    1ef8:	f0 2d       	mov	r31, r0
    1efa:	c2 0e       	add	r12, r18
    1efc:	d3 1e       	adc	r13, r19
    1efe:	e4 1e       	adc	r14, r20
    1f00:	f5 1e       	adc	r15, r21
		
		PWMR_SET(A_calc(pgm_read_byte(&sine[R_Index(index)]), (unsigned char)A));
    1f02:	81 2f       	mov	r24, r17
    1f04:	6c 2d       	mov	r22, r12
    1f06:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <A_calc>
    1f0a:	90 e0       	ldi	r25, 0x00	; 0
    1f0c:	9b bd       	out	0x2b, r25	; 43
    1f0e:	8a bd       	out	0x2a, r24	; 42
		PWMS_SET(A_calc(pgm_read_byte(&sine[S_Index(index)]), (unsigned char)A));
    1f10:	e0 91 83 01 	lds	r30, 0x0183
    1f14:	ec 5a       	subi	r30, 0xAC	; 172
    1f16:	f0 e0       	ldi	r31, 0x00	; 0
    1f18:	e4 59       	subi	r30, 0x94	; 148
    1f1a:	fc 4f       	sbci	r31, 0xFC	; 252
    1f1c:	84 91       	lpm	r24, Z+
    1f1e:	6c 2d       	mov	r22, r12
    1f20:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <A_calc>
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	99 bd       	out	0x29, r25	; 41
    1f28:	88 bd       	out	0x28, r24	; 40
		PWMT_SET(A_calc(pgm_read_byte(&sine[T_Index(index)]), (unsigned char)A));
    1f2a:	e0 91 83 01 	lds	r30, 0x0183
    1f2e:	e6 55       	subi	r30, 0x56	; 86
    1f30:	f0 e0       	ldi	r31, 0x00	; 0
    1f32:	e4 59       	subi	r30, 0x94	; 148
    1f34:	fc 4f       	sbci	r31, 0xFC	; 252
    1f36:	84 91       	lpm	r24, Z+
    1f38:	6c 2d       	mov	r22, r12
    1f3a:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <A_calc>
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	90 93 79 00 	sts	0x0079, r25
    1f44:	80 93 78 00 	sts	0x0078, r24
	}
}	//ISR_PWM_SET
    1f48:	ff 91       	pop	r31
    1f4a:	ef 91       	pop	r30
    1f4c:	bf 91       	pop	r27
    1f4e:	af 91       	pop	r26
    1f50:	9f 91       	pop	r25
    1f52:	8f 91       	pop	r24
    1f54:	7f 91       	pop	r23
    1f56:	6f 91       	pop	r22
    1f58:	5f 91       	pop	r21
    1f5a:	4f 91       	pop	r20
    1f5c:	3f 91       	pop	r19
    1f5e:	2f 91       	pop	r18
    1f60:	1f 91       	pop	r17
    1f62:	ff 90       	pop	r15
    1f64:	ef 90       	pop	r14
    1f66:	df 90       	pop	r13
    1f68:	cf 90       	pop	r12
    1f6a:	0f 90       	pop	r0
    1f6c:	0b be       	out	0x3b, r0	; 59
    1f6e:	0f 90       	pop	r0
    1f70:	0f be       	out	0x3f, r0	; 63
    1f72:	0f 90       	pop	r0
    1f74:	1f 90       	pop	r1
    1f76:	18 95       	reti

00001f78 <__vector_9>:

ISR_SPEED_TUNE()								//Occur every 1ms!
{
    1f78:	1f 92       	push	r1
    1f7a:	0f 92       	push	r0
    1f7c:	0f b6       	in	r0, 0x3f	; 63
    1f7e:	0f 92       	push	r0
    1f80:	0b b6       	in	r0, 0x3b	; 59
    1f82:	0f 92       	push	r0
    1f84:	11 24       	eor	r1, r1
    1f86:	2f 93       	push	r18
    1f88:	3f 93       	push	r19
    1f8a:	8f 93       	push	r24
    1f8c:	9f 93       	push	r25
    1f8e:	ef 93       	push	r30
    1f90:	ff 93       	push	r31
		static unsigned char 					ACC_counter = 0;
		static unsigned char 					DEC_counter = 0;
	 
	
		//-----  Acceleration
		if(speed<FinalSpeed)
    1f92:	20 91 81 01 	lds	r18, 0x0181
    1f96:	30 91 82 01 	lds	r19, 0x0182
    1f9a:	80 91 7f 01 	lds	r24, 0x017F
    1f9e:	90 91 80 01 	lds	r25, 0x0180
    1fa2:	28 17       	cp	r18, r24
    1fa4:	39 07       	cpc	r19, r25
    1fa6:	b8 f4       	brcc	.+46     	; 0x1fd6 <__vector_9+0x5e>
		{
			DEC_counter = 0;
    1fa8:	10 92 87 01 	sts	0x0187, r1

			#if (ACC_DEC_USE ==1) || (ACC_DEC_USE ==3)
				ACC_counter++;
    1fac:	80 91 88 01 	lds	r24, 0x0188
    1fb0:	8f 5f       	subi	r24, 0xFF	; 255
    1fb2:	80 93 88 01 	sts	0x0188, r24
		 		if(ACC_counter>=Acceleration)
    1fb6:	90 91 7a 01 	lds	r25, 0x017A
    1fba:	89 17       	cp	r24, r25
    1fbc:	90 f1       	brcs	.+100    	; 0x2022 <__vector_9+0xaa>
		 		{
		 			ACC_counter = 0;
    1fbe:	10 92 88 01 	sts	0x0188, r1
		  		speed++;
    1fc2:	80 91 81 01 	lds	r24, 0x0181
    1fc6:	90 91 82 01 	lds	r25, 0x0182
    1fca:	01 96       	adiw	r24, 0x01	; 1
    1fcc:	90 93 82 01 	sts	0x0182, r25
    1fd0:	80 93 81 01 	sts	0x0181, r24
    1fd4:	26 c0       	rjmp	.+76     	; 0x2022 <__vector_9+0xaa>

			#endif
		}

		//-----  Deceleration
		else if(speed>FinalSpeed)
    1fd6:	20 91 81 01 	lds	r18, 0x0181
    1fda:	30 91 82 01 	lds	r19, 0x0182
    1fde:	80 91 7f 01 	lds	r24, 0x017F
    1fe2:	90 91 80 01 	lds	r25, 0x0180
    1fe6:	82 17       	cp	r24, r18
    1fe8:	93 07       	cpc	r25, r19
    1fea:	b8 f4       	brcc	.+46     	; 0x201a <__vector_9+0xa2>
		{
			ACC_counter = 0;
    1fec:	10 92 88 01 	sts	0x0188, r1

			#if (ACC_DEC_USE ==2) || (ACC_DEC_USE ==3)
				DEC_counter++;
    1ff0:	80 91 87 01 	lds	r24, 0x0187
    1ff4:	8f 5f       	subi	r24, 0xFF	; 255
    1ff6:	80 93 87 01 	sts	0x0187, r24
				if(DEC_counter>=Deceleration)
    1ffa:	90 91 7b 01 	lds	r25, 0x017B
    1ffe:	89 17       	cp	r24, r25
    2000:	80 f0       	brcs	.+32     	; 0x2022 <__vector_9+0xaa>
				{
			  	DEC_counter = 0;
    2002:	10 92 87 01 	sts	0x0187, r1
			  	speed--;
    2006:	80 91 81 01 	lds	r24, 0x0181
    200a:	90 91 82 01 	lds	r25, 0x0182
    200e:	01 97       	sbiw	r24, 0x01	; 1
    2010:	90 93 82 01 	sts	0x0182, r25
    2014:	80 93 81 01 	sts	0x0181, r24
    2018:	04 c0       	rjmp	.+8      	; 0x2022 <__vector_9+0xaa>
		}

		//-----
		else
		{
	 		ACC_counter = 0;
    201a:	10 92 88 01 	sts	0x0188, r1
	  	DEC_counter = 0;
    201e:	10 92 87 01 	sts	0x0187, r1
		}

	#endif	

	//-------------------
	if(speed)
    2022:	80 91 81 01 	lds	r24, 0x0181
    2026:	90 91 82 01 	lds	r25, 0x0182
    202a:	00 97       	sbiw	r24, 0x00	; 0
    202c:	81 f1       	breq	.+96     	; 0x208e <__vector_9+0x116>
	{
		FRQ_SET(pgm_read_word(&Timer_Value[speed])-1);
    202e:	e0 91 81 01 	lds	r30, 0x0181
    2032:	f0 91 82 01 	lds	r31, 0x0182
    2036:	ee 0f       	add	r30, r30
    2038:	ff 1f       	adc	r31, r31
    203a:	e4 59       	subi	r30, 0x94	; 148
    203c:	fa 4f       	sbci	r31, 0xFA	; 250
    203e:	85 91       	lpm	r24, Z+
    2040:	94 91       	lpm	r25, Z+
    2042:	01 97       	sbiw	r24, 0x01	; 1
    2044:	90 93 87 00 	sts	0x0087, r25
    2048:	80 93 86 00 	sts	0x0086, r24

 		if(MSflag==0)
    204c:	80 91 84 01 	lds	r24, 0x0184
    2050:	88 23       	and	r24, r24
    2052:	91 f5       	brne	.+100    	; 0x20b8 <__vector_9+0x140>
 		{
			PWMRST_ON();
    2054:	8f b5       	in	r24, 0x2f	; 47
    2056:	80 68       	ori	r24, 0x80	; 128
    2058:	8f bd       	out	0x2f, r24	; 47
    205a:	8f b5       	in	r24, 0x2f	; 47
    205c:	80 62       	ori	r24, 0x20	; 32
    205e:	8f bd       	out	0x2f, r24	; 47
    2060:	8f b5       	in	r24, 0x2f	; 47
    2062:	88 60       	ori	r24, 0x08	; 8
    2064:	8f bd       	out	0x2f, r24	; 47
			MSflag = 1;
    2066:	81 e0       	ldi	r24, 0x01	; 1
    2068:	80 93 84 01 	sts	0x0184, r24
		
			PWM_INTV_TMR_ON();
    206c:	ea e8       	ldi	r30, 0x8A	; 138
    206e:	f0 e0       	ldi	r31, 0x00	; 0
    2070:	80 81       	ld	r24, Z
    2072:	88 7f       	andi	r24, 0xF8	; 248
    2074:	81 60       	ori	r24, 0x01	; 1
    2076:	80 83       	st	Z, r24
			PWM_INTV_ena();
    2078:	ec e7       	ldi	r30, 0x7C	; 124
    207a:	f0 e0       	ldi	r31, 0x00	; 0
    207c:	80 81       	ld	r24, Z
    207e:	80 61       	ori	r24, 0x10	; 16
    2080:	80 83       	st	Z, r24
    2082:	ed e7       	ldi	r30, 0x7D	; 125
    2084:	f0 e0       	ldi	r31, 0x00	; 0
    2086:	80 81       	ld	r24, Z
    2088:	80 61       	ori	r24, 0x10	; 16
    208a:	80 83       	st	Z, r24
    208c:	15 c0       	rjmp	.+42     	; 0x20b8 <__vector_9+0x140>
	}

	//-----
	else
	{
	 	PWMRST_OFF();
    208e:	8f b5       	in	r24, 0x2f	; 47
    2090:	8f 77       	andi	r24, 0x7F	; 127
    2092:	8f bd       	out	0x2f, r24	; 47
    2094:	8f b5       	in	r24, 0x2f	; 47
    2096:	8f 7d       	andi	r24, 0xDF	; 223
    2098:	8f bd       	out	0x2f, r24	; 47
    209a:	8f b5       	in	r24, 0x2f	; 47
    209c:	87 7f       	andi	r24, 0xF7	; 247
    209e:	8f bd       	out	0x2f, r24	; 47
		MSflag = 0;
    20a0:	10 92 84 01 	sts	0x0184, r1

	 	PWM_INTV_TMR_OFF();
    20a4:	ea e8       	ldi	r30, 0x8A	; 138
    20a6:	f0 e0       	ldi	r31, 0x00	; 0
    20a8:	80 81       	ld	r24, Z
    20aa:	88 7f       	andi	r24, 0xF8	; 248
    20ac:	80 83       	st	Z, r24
	 	PWM_INTV_dis();
    20ae:	ed e7       	ldi	r30, 0x7D	; 125
    20b0:	f0 e0       	ldi	r31, 0x00	; 0
    20b2:	80 81       	ld	r24, Z
    20b4:	8f 7e       	andi	r24, 0xEF	; 239
    20b6:	80 83       	st	Z, r24
	}
	
	TCounter++;
    20b8:	80 91 85 01 	lds	r24, 0x0185
    20bc:	90 91 86 01 	lds	r25, 0x0186
    20c0:	01 96       	adiw	r24, 0x01	; 1
    20c2:	90 93 86 01 	sts	0x0186, r25
    20c6:	80 93 85 01 	sts	0x0185, r24
}	//ISR_SPEED_TUNE
    20ca:	ff 91       	pop	r31
    20cc:	ef 91       	pop	r30
    20ce:	9f 91       	pop	r25
    20d0:	8f 91       	pop	r24
    20d2:	3f 91       	pop	r19
    20d4:	2f 91       	pop	r18
    20d6:	0f 90       	pop	r0
    20d8:	0b be       	out	0x3b, r0	; 59
    20da:	0f 90       	pop	r0
    20dc:	0f be       	out	0x3f, r0	; 63
    20de:	0f 90       	pop	r0
    20e0:	1f 90       	pop	r1
    20e2:	18 95       	reti

000020e4 <SPWM_init>:

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
void SPWM_init(void)
{
	SPWM_HW_init();
    20e4:	bd 9a       	sbi	0x17, 5	; 23
    20e6:	8f b5       	in	r24, 0x2f	; 47
    20e8:	8f 77       	andi	r24, 0x7F	; 127
    20ea:	8f bd       	out	0x2f, r24	; 47
    20ec:	be 9a       	sbi	0x17, 6	; 23
    20ee:	8f b5       	in	r24, 0x2f	; 47
    20f0:	8f 7d       	andi	r24, 0xDF	; 223
    20f2:	8f bd       	out	0x2f, r24	; 47
    20f4:	bf 9a       	sbi	0x17, 7	; 23
    20f6:	8f b5       	in	r24, 0x2f	; 47
    20f8:	87 7f       	andi	r24, 0xF7	; 247
    20fa:	8f bd       	out	0x2f, r24	; 47
	
	PWMR_SET(R_Index(index));
    20fc:	80 91 83 01 	lds	r24, 0x0183
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	9b bd       	out	0x2b, r25	; 43
    2104:	8a bd       	out	0x2a, r24	; 42
 	PWMS_SET(S_Index(index));
    2106:	80 91 83 01 	lds	r24, 0x0183
    210a:	8c 5a       	subi	r24, 0xAC	; 172
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	99 bd       	out	0x29, r25	; 41
    2110:	88 bd       	out	0x28, r24	; 40
 	PWMT_SET(T_Index(index));
    2112:	80 91 83 01 	lds	r24, 0x0183
    2116:	86 55       	subi	r24, 0x56	; 86
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	90 93 79 00 	sts	0x0079, r25
    211e:	80 93 78 00 	sts	0x0078, r24

	PWM_TMR_init();
    2122:	81 e0       	ldi	r24, 0x01	; 1
    2124:	8f bd       	out	0x2f, r24	; 47
	PWM_TMR_ON();
    2126:	8e b5       	in	r24, 0x2e	; 46
    2128:	88 7f       	andi	r24, 0xF8	; 248
    212a:	81 60       	ori	r24, 0x01	; 1
    212c:	8e bd       	out	0x2e, r24	; 46
	
	PWM_INTV_init();
    212e:	83 e0       	ldi	r24, 0x03	; 3
    2130:	80 93 8b 00 	sts	0x008B, r24
    2134:	88 e1       	ldi	r24, 0x18	; 24
    2136:	80 93 8a 00 	sts	0x008A, r24
	SPEED_INTV_SET(SPEED_INTV_time);		//Occur every 1ms!
    213a:	8c e7       	ldi	r24, 0x7C	; 124
    213c:	83 bd       	out	0x23, r24	; 35

	SPEED_INTV_init();
    213e:	8b e0       	ldi	r24, 0x0B	; 11
    2140:	85 bd       	out	0x25, r24	; 37
	SPEED_INTV_ena();
    2142:	86 b7       	in	r24, 0x36	; 54
    2144:	80 68       	ori	r24, 0x80	; 128
    2146:	86 bf       	out	0x36, r24	; 54
    2148:	87 b7       	in	r24, 0x37	; 55
    214a:	80 68       	ori	r24, 0x80	; 128
    214c:	87 bf       	out	0x37, r24	; 55
}	//SPWM_init
    214e:	08 95       	ret

00002150 <SetFrequency>:

unsigned int SetFrequency(unsigned int FRQ)
{
	if			(FRQ<14)					FinalSpeed = 0;
    2150:	8e 30       	cpi	r24, 0x0E	; 14
    2152:	91 05       	cpc	r25, r1
    2154:	28 f4       	brcc	.+10     	; 0x2160 <SetFrequency+0x10>
    2156:	10 92 80 01 	sts	0x0180, r1
    215a:	10 92 7f 01 	sts	0x017F, r1
    215e:	10 c0       	rjmp	.+32     	; 0x2180 <SetFrequency+0x30>
	else if (FRQ<1010)				FinalSpeed = FRQ -13;
    2160:	23 e0       	ldi	r18, 0x03	; 3
    2162:	82 3f       	cpi	r24, 0xF2	; 242
    2164:	92 07       	cpc	r25, r18
    2166:	30 f4       	brcc	.+12     	; 0x2174 <SetFrequency+0x24>
    2168:	0d 97       	sbiw	r24, 0x0d	; 13
    216a:	90 93 80 01 	sts	0x0180, r25
    216e:	80 93 7f 01 	sts	0x017F, r24
    2172:	06 c0       	rjmp	.+12     	; 0x2180 <SetFrequency+0x30>
	else 											FinalSpeed = 996;
    2174:	84 ee       	ldi	r24, 0xE4	; 228
    2176:	93 e0       	ldi	r25, 0x03	; 3
    2178:	90 93 80 01 	sts	0x0180, r25
    217c:	80 93 7f 01 	sts	0x017F, r24
	
	return(FinalSpeed +4);
    2180:	20 91 7f 01 	lds	r18, 0x017F
    2184:	30 91 80 01 	lds	r19, 0x0180
    2188:	2c 5f       	subi	r18, 0xFC	; 252
    218a:	3f 4f       	sbci	r19, 0xFF	; 255
}	//SetFrequency
    218c:	82 2f       	mov	r24, r18
    218e:	93 2f       	mov	r25, r19
    2190:	08 95       	ret

00002192 <SetAcceleration>:

unsigned char SetAcceleration(unsigned char ACC)
{
	if(ACC) 									Acceleration = ACC;
    2192:	88 23       	and	r24, r24
    2194:	19 f0       	breq	.+6      	; 0x219c <SetAcceleration+0xa>
    2196:	80 93 7a 01 	sts	0x017A, r24
    219a:	03 c0       	rjmp	.+6      	; 0x21a2 <SetAcceleration+0x10>
	else 											Acceleration = 1;
    219c:	81 e0       	ldi	r24, 0x01	; 1
    219e:	80 93 7a 01 	sts	0x017A, r24
	
	return(Acceleration);
    21a2:	80 91 7a 01 	lds	r24, 0x017A
}	//SetAcceleration
    21a6:	08 95       	ret

000021a8 <SetDeceleration>:

unsigned char SetDeceleration(unsigned char DEC)
{
	if(DEC) 									Deceleration = DEC;
    21a8:	88 23       	and	r24, r24
    21aa:	19 f0       	breq	.+6      	; 0x21b2 <SetDeceleration+0xa>
    21ac:	80 93 7b 01 	sts	0x017B, r24
    21b0:	03 c0       	rjmp	.+6      	; 0x21b8 <SetDeceleration+0x10>
	else 											Deceleration = 1;
    21b2:	81 e0       	ldi	r24, 0x01	; 1
    21b4:	80 93 7b 01 	sts	0x017B, r24
	
	return(Deceleration);
    21b8:	80 91 7b 01 	lds	r24, 0x017B
}	//SetDeceleration
    21bc:	08 95       	ret

000021be <__fixsfsi>:
    21be:	04 d0       	rcall	.+8      	; 0x21c8 <__fixunssfsi>
    21c0:	68 94       	set
    21c2:	b1 11       	cpse	r27, r1
    21c4:	8d c0       	rjmp	.+282    	; 0x22e0 <__fp_szero>
    21c6:	08 95       	ret

000021c8 <__fixunssfsi>:
    21c8:	70 d0       	rcall	.+224    	; 0x22aa <__fp_splitA>
    21ca:	88 f0       	brcs	.+34     	; 0x21ee <__fixunssfsi+0x26>
    21cc:	9f 57       	subi	r25, 0x7F	; 127
    21ce:	90 f0       	brcs	.+36     	; 0x21f4 <__fixunssfsi+0x2c>
    21d0:	b9 2f       	mov	r27, r25
    21d2:	99 27       	eor	r25, r25
    21d4:	b7 51       	subi	r27, 0x17	; 23
    21d6:	a0 f0       	brcs	.+40     	; 0x2200 <__fixunssfsi+0x38>
    21d8:	d1 f0       	breq	.+52     	; 0x220e <__fixunssfsi+0x46>
    21da:	66 0f       	add	r22, r22
    21dc:	77 1f       	adc	r23, r23
    21de:	88 1f       	adc	r24, r24
    21e0:	99 1f       	adc	r25, r25
    21e2:	1a f0       	brmi	.+6      	; 0x21ea <__fixunssfsi+0x22>
    21e4:	ba 95       	dec	r27
    21e6:	c9 f7       	brne	.-14     	; 0x21da <__fixunssfsi+0x12>
    21e8:	12 c0       	rjmp	.+36     	; 0x220e <__fixunssfsi+0x46>
    21ea:	b1 30       	cpi	r27, 0x01	; 1
    21ec:	81 f0       	breq	.+32     	; 0x220e <__fixunssfsi+0x46>
    21ee:	77 d0       	rcall	.+238    	; 0x22de <__fp_zero>
    21f0:	b1 e0       	ldi	r27, 0x01	; 1
    21f2:	08 95       	ret
    21f4:	74 c0       	rjmp	.+232    	; 0x22de <__fp_zero>
    21f6:	67 2f       	mov	r22, r23
    21f8:	78 2f       	mov	r23, r24
    21fa:	88 27       	eor	r24, r24
    21fc:	b8 5f       	subi	r27, 0xF8	; 248
    21fe:	39 f0       	breq	.+14     	; 0x220e <__fixunssfsi+0x46>
    2200:	b9 3f       	cpi	r27, 0xF9	; 249
    2202:	cc f3       	brlt	.-14     	; 0x21f6 <__fixunssfsi+0x2e>
    2204:	86 95       	lsr	r24
    2206:	77 95       	ror	r23
    2208:	67 95       	ror	r22
    220a:	b3 95       	inc	r27
    220c:	d9 f7       	brne	.-10     	; 0x2204 <__fixunssfsi+0x3c>
    220e:	3e f4       	brtc	.+14     	; 0x221e <__fixunssfsi+0x56>
    2210:	90 95       	com	r25
    2212:	80 95       	com	r24
    2214:	70 95       	com	r23
    2216:	61 95       	neg	r22
    2218:	7f 4f       	sbci	r23, 0xFF	; 255
    221a:	8f 4f       	sbci	r24, 0xFF	; 255
    221c:	9f 4f       	sbci	r25, 0xFF	; 255
    221e:	08 95       	ret

00002220 <__floatunsisf>:
    2220:	e8 94       	clt
    2222:	09 c0       	rjmp	.+18     	; 0x2236 <__floatsisf+0x12>

00002224 <__floatsisf>:
    2224:	97 fb       	bst	r25, 7
    2226:	3e f4       	brtc	.+14     	; 0x2236 <__floatsisf+0x12>
    2228:	90 95       	com	r25
    222a:	80 95       	com	r24
    222c:	70 95       	com	r23
    222e:	61 95       	neg	r22
    2230:	7f 4f       	sbci	r23, 0xFF	; 255
    2232:	8f 4f       	sbci	r24, 0xFF	; 255
    2234:	9f 4f       	sbci	r25, 0xFF	; 255
    2236:	99 23       	and	r25, r25
    2238:	a9 f0       	breq	.+42     	; 0x2264 <__floatsisf+0x40>
    223a:	f9 2f       	mov	r31, r25
    223c:	96 e9       	ldi	r25, 0x96	; 150
    223e:	bb 27       	eor	r27, r27
    2240:	93 95       	inc	r25
    2242:	f6 95       	lsr	r31
    2244:	87 95       	ror	r24
    2246:	77 95       	ror	r23
    2248:	67 95       	ror	r22
    224a:	b7 95       	ror	r27
    224c:	f1 11       	cpse	r31, r1
    224e:	f8 cf       	rjmp	.-16     	; 0x2240 <__floatsisf+0x1c>
    2250:	fa f4       	brpl	.+62     	; 0x2290 <__floatsisf+0x6c>
    2252:	bb 0f       	add	r27, r27
    2254:	11 f4       	brne	.+4      	; 0x225a <__floatsisf+0x36>
    2256:	60 ff       	sbrs	r22, 0
    2258:	1b c0       	rjmp	.+54     	; 0x2290 <__floatsisf+0x6c>
    225a:	6f 5f       	subi	r22, 0xFF	; 255
    225c:	7f 4f       	sbci	r23, 0xFF	; 255
    225e:	8f 4f       	sbci	r24, 0xFF	; 255
    2260:	9f 4f       	sbci	r25, 0xFF	; 255
    2262:	16 c0       	rjmp	.+44     	; 0x2290 <__floatsisf+0x6c>
    2264:	88 23       	and	r24, r24
    2266:	11 f0       	breq	.+4      	; 0x226c <__floatsisf+0x48>
    2268:	96 e9       	ldi	r25, 0x96	; 150
    226a:	11 c0       	rjmp	.+34     	; 0x228e <__floatsisf+0x6a>
    226c:	77 23       	and	r23, r23
    226e:	21 f0       	breq	.+8      	; 0x2278 <__floatsisf+0x54>
    2270:	9e e8       	ldi	r25, 0x8E	; 142
    2272:	87 2f       	mov	r24, r23
    2274:	76 2f       	mov	r23, r22
    2276:	05 c0       	rjmp	.+10     	; 0x2282 <__floatsisf+0x5e>
    2278:	66 23       	and	r22, r22
    227a:	71 f0       	breq	.+28     	; 0x2298 <__floatsisf+0x74>
    227c:	96 e8       	ldi	r25, 0x86	; 134
    227e:	86 2f       	mov	r24, r22
    2280:	70 e0       	ldi	r23, 0x00	; 0
    2282:	60 e0       	ldi	r22, 0x00	; 0
    2284:	2a f0       	brmi	.+10     	; 0x2290 <__floatsisf+0x6c>
    2286:	9a 95       	dec	r25
    2288:	66 0f       	add	r22, r22
    228a:	77 1f       	adc	r23, r23
    228c:	88 1f       	adc	r24, r24
    228e:	da f7       	brpl	.-10     	; 0x2286 <__floatsisf+0x62>
    2290:	88 0f       	add	r24, r24
    2292:	96 95       	lsr	r25
    2294:	87 95       	ror	r24
    2296:	97 f9       	bld	r25, 7
    2298:	08 95       	ret

0000229a <__fp_split3>:
    229a:	57 fd       	sbrc	r21, 7
    229c:	90 58       	subi	r25, 0x80	; 128
    229e:	44 0f       	add	r20, r20
    22a0:	55 1f       	adc	r21, r21
    22a2:	59 f0       	breq	.+22     	; 0x22ba <__fp_splitA+0x10>
    22a4:	5f 3f       	cpi	r21, 0xFF	; 255
    22a6:	71 f0       	breq	.+28     	; 0x22c4 <__fp_splitA+0x1a>
    22a8:	47 95       	ror	r20

000022aa <__fp_splitA>:
    22aa:	88 0f       	add	r24, r24
    22ac:	97 fb       	bst	r25, 7
    22ae:	99 1f       	adc	r25, r25
    22b0:	61 f0       	breq	.+24     	; 0x22ca <__fp_splitA+0x20>
    22b2:	9f 3f       	cpi	r25, 0xFF	; 255
    22b4:	79 f0       	breq	.+30     	; 0x22d4 <__fp_splitA+0x2a>
    22b6:	87 95       	ror	r24
    22b8:	08 95       	ret
    22ba:	12 16       	cp	r1, r18
    22bc:	13 06       	cpc	r1, r19
    22be:	14 06       	cpc	r1, r20
    22c0:	55 1f       	adc	r21, r21
    22c2:	f2 cf       	rjmp	.-28     	; 0x22a8 <__fp_split3+0xe>
    22c4:	46 95       	lsr	r20
    22c6:	f1 df       	rcall	.-30     	; 0x22aa <__fp_splitA>
    22c8:	08 c0       	rjmp	.+16     	; 0x22da <__fp_splitA+0x30>
    22ca:	16 16       	cp	r1, r22
    22cc:	17 06       	cpc	r1, r23
    22ce:	18 06       	cpc	r1, r24
    22d0:	99 1f       	adc	r25, r25
    22d2:	f1 cf       	rjmp	.-30     	; 0x22b6 <__fp_splitA+0xc>
    22d4:	86 95       	lsr	r24
    22d6:	71 05       	cpc	r23, r1
    22d8:	61 05       	cpc	r22, r1
    22da:	08 94       	sec
    22dc:	08 95       	ret

000022de <__fp_zero>:
    22de:	e8 94       	clt

000022e0 <__fp_szero>:
    22e0:	bb 27       	eor	r27, r27
    22e2:	66 27       	eor	r22, r22
    22e4:	77 27       	eor	r23, r23
    22e6:	cb 01       	movw	r24, r22
    22e8:	97 f9       	bld	r25, 7
    22ea:	08 95       	ret

000022ec <__umulhisi3>:
    22ec:	53 9f       	mul	r21, r19
    22ee:	c0 01       	movw	r24, r0
    22f0:	42 9f       	mul	r20, r18
    22f2:	b0 01       	movw	r22, r0
    22f4:	52 9f       	mul	r21, r18
    22f6:	70 0d       	add	r23, r0
    22f8:	81 1d       	adc	r24, r1
    22fa:	11 24       	eor	r1, r1
    22fc:	91 1d       	adc	r25, r1
    22fe:	34 9f       	mul	r19, r20
    2300:	70 0d       	add	r23, r0
    2302:	81 1d       	adc	r24, r1
    2304:	11 24       	eor	r1, r1
    2306:	91 1d       	adc	r25, r1
    2308:	08 95       	ret

0000230a <__udivmodhi4>:
    230a:	aa 1b       	sub	r26, r26
    230c:	bb 1b       	sub	r27, r27
    230e:	51 e1       	ldi	r21, 0x11	; 17
    2310:	07 c0       	rjmp	.+14     	; 0x2320 <__udivmodhi4_ep>

00002312 <__udivmodhi4_loop>:
    2312:	aa 1f       	adc	r26, r26
    2314:	bb 1f       	adc	r27, r27
    2316:	a6 17       	cp	r26, r22
    2318:	b7 07       	cpc	r27, r23
    231a:	10 f0       	brcs	.+4      	; 0x2320 <__udivmodhi4_ep>
    231c:	a6 1b       	sub	r26, r22
    231e:	b7 0b       	sbc	r27, r23

00002320 <__udivmodhi4_ep>:
    2320:	88 1f       	adc	r24, r24
    2322:	99 1f       	adc	r25, r25
    2324:	5a 95       	dec	r21
    2326:	a9 f7       	brne	.-22     	; 0x2312 <__udivmodhi4_loop>
    2328:	80 95       	com	r24
    232a:	90 95       	com	r25
    232c:	bc 01       	movw	r22, r24
    232e:	cd 01       	movw	r24, r26
    2330:	08 95       	ret

00002332 <__udivmodsi4>:
    2332:	a1 e2       	ldi	r26, 0x21	; 33
    2334:	1a 2e       	mov	r1, r26
    2336:	aa 1b       	sub	r26, r26
    2338:	bb 1b       	sub	r27, r27
    233a:	fd 01       	movw	r30, r26
    233c:	0d c0       	rjmp	.+26     	; 0x2358 <__udivmodsi4_ep>

0000233e <__udivmodsi4_loop>:
    233e:	aa 1f       	adc	r26, r26
    2340:	bb 1f       	adc	r27, r27
    2342:	ee 1f       	adc	r30, r30
    2344:	ff 1f       	adc	r31, r31
    2346:	a2 17       	cp	r26, r18
    2348:	b3 07       	cpc	r27, r19
    234a:	e4 07       	cpc	r30, r20
    234c:	f5 07       	cpc	r31, r21
    234e:	20 f0       	brcs	.+8      	; 0x2358 <__udivmodsi4_ep>
    2350:	a2 1b       	sub	r26, r18
    2352:	b3 0b       	sbc	r27, r19
    2354:	e4 0b       	sbc	r30, r20
    2356:	f5 0b       	sbc	r31, r21

00002358 <__udivmodsi4_ep>:
    2358:	66 1f       	adc	r22, r22
    235a:	77 1f       	adc	r23, r23
    235c:	88 1f       	adc	r24, r24
    235e:	99 1f       	adc	r25, r25
    2360:	1a 94       	dec	r1
    2362:	69 f7       	brne	.-38     	; 0x233e <__udivmodsi4_loop>
    2364:	60 95       	com	r22
    2366:	70 95       	com	r23
    2368:	80 95       	com	r24
    236a:	90 95       	com	r25
    236c:	9b 01       	movw	r18, r22
    236e:	ac 01       	movw	r20, r24
    2370:	bd 01       	movw	r22, r26
    2372:	cf 01       	movw	r24, r30
    2374:	08 95       	ret

00002376 <itoa>:
    2376:	fb 01       	movw	r30, r22
    2378:	9f 01       	movw	r18, r30
    237a:	e8 94       	clt
    237c:	42 30       	cpi	r20, 0x02	; 2
    237e:	c4 f0       	brlt	.+48     	; 0x23b0 <itoa+0x3a>
    2380:	45 32       	cpi	r20, 0x25	; 37
    2382:	b4 f4       	brge	.+44     	; 0x23b0 <itoa+0x3a>
    2384:	4a 30       	cpi	r20, 0x0A	; 10
    2386:	29 f4       	brne	.+10     	; 0x2392 <itoa+0x1c>
    2388:	97 fb       	bst	r25, 7
    238a:	1e f4       	brtc	.+6      	; 0x2392 <itoa+0x1c>
    238c:	90 95       	com	r25
    238e:	81 95       	neg	r24
    2390:	9f 4f       	sbci	r25, 0xFF	; 255
    2392:	64 2f       	mov	r22, r20
    2394:	77 27       	eor	r23, r23
    2396:	0e 94 85 11 	call	0x230a	; 0x230a <__udivmodhi4>
    239a:	80 5d       	subi	r24, 0xD0	; 208
    239c:	8a 33       	cpi	r24, 0x3A	; 58
    239e:	0c f0       	brlt	.+2      	; 0x23a2 <itoa+0x2c>
    23a0:	89 5d       	subi	r24, 0xD9	; 217
    23a2:	81 93       	st	Z+, r24
    23a4:	cb 01       	movw	r24, r22
    23a6:	00 97       	sbiw	r24, 0x00	; 0
    23a8:	a1 f7       	brne	.-24     	; 0x2392 <itoa+0x1c>
    23aa:	16 f4       	brtc	.+4      	; 0x23b0 <itoa+0x3a>
    23ac:	5d e2       	ldi	r21, 0x2D	; 45
    23ae:	51 93       	st	Z+, r21
    23b0:	10 82       	st	Z, r1
    23b2:	c9 01       	movw	r24, r18
    23b4:	0c 94 32 14 	jmp	0x2864	; 0x2864 <strrev>

000023b8 <sprintf>:
    23b8:	0f 93       	push	r16
    23ba:	1f 93       	push	r17
    23bc:	df 93       	push	r29
    23be:	cf 93       	push	r28
    23c0:	cd b7       	in	r28, 0x3d	; 61
    23c2:	de b7       	in	r29, 0x3e	; 62
    23c4:	2e 97       	sbiw	r28, 0x0e	; 14
    23c6:	0f b6       	in	r0, 0x3f	; 63
    23c8:	f8 94       	cli
    23ca:	de bf       	out	0x3e, r29	; 62
    23cc:	0f be       	out	0x3f, r0	; 63
    23ce:	cd bf       	out	0x3d, r28	; 61
    23d0:	0d 89       	ldd	r16, Y+21	; 0x15
    23d2:	1e 89       	ldd	r17, Y+22	; 0x16
    23d4:	86 e0       	ldi	r24, 0x06	; 6
    23d6:	8c 83       	std	Y+4, r24	; 0x04
    23d8:	1a 83       	std	Y+2, r17	; 0x02
    23da:	09 83       	std	Y+1, r16	; 0x01
    23dc:	8f ef       	ldi	r24, 0xFF	; 255
    23de:	9f e7       	ldi	r25, 0x7F	; 127
    23e0:	9e 83       	std	Y+6, r25	; 0x06
    23e2:	8d 83       	std	Y+5, r24	; 0x05
    23e4:	9e 01       	movw	r18, r28
    23e6:	27 5e       	subi	r18, 0xE7	; 231
    23e8:	3f 4f       	sbci	r19, 0xFF	; 255
    23ea:	ce 01       	movw	r24, r28
    23ec:	01 96       	adiw	r24, 0x01	; 1
    23ee:	6f 89       	ldd	r22, Y+23	; 0x17
    23f0:	78 8d       	ldd	r23, Y+24	; 0x18
    23f2:	a9 01       	movw	r20, r18
    23f4:	0e 94 0c 12 	call	0x2418	; 0x2418 <vfprintf>
    23f8:	ef 81       	ldd	r30, Y+7	; 0x07
    23fa:	f8 85       	ldd	r31, Y+8	; 0x08
    23fc:	e0 0f       	add	r30, r16
    23fe:	f1 1f       	adc	r31, r17
    2400:	10 82       	st	Z, r1
    2402:	2e 96       	adiw	r28, 0x0e	; 14
    2404:	0f b6       	in	r0, 0x3f	; 63
    2406:	f8 94       	cli
    2408:	de bf       	out	0x3e, r29	; 62
    240a:	0f be       	out	0x3f, r0	; 63
    240c:	cd bf       	out	0x3d, r28	; 61
    240e:	cf 91       	pop	r28
    2410:	df 91       	pop	r29
    2412:	1f 91       	pop	r17
    2414:	0f 91       	pop	r16
    2416:	08 95       	ret

00002418 <vfprintf>:
    2418:	2f 92       	push	r2
    241a:	3f 92       	push	r3
    241c:	4f 92       	push	r4
    241e:	5f 92       	push	r5
    2420:	6f 92       	push	r6
    2422:	7f 92       	push	r7
    2424:	8f 92       	push	r8
    2426:	9f 92       	push	r9
    2428:	af 92       	push	r10
    242a:	bf 92       	push	r11
    242c:	cf 92       	push	r12
    242e:	df 92       	push	r13
    2430:	ef 92       	push	r14
    2432:	ff 92       	push	r15
    2434:	0f 93       	push	r16
    2436:	1f 93       	push	r17
    2438:	df 93       	push	r29
    243a:	cf 93       	push	r28
    243c:	cd b7       	in	r28, 0x3d	; 61
    243e:	de b7       	in	r29, 0x3e	; 62
    2440:	2c 97       	sbiw	r28, 0x0c	; 12
    2442:	0f b6       	in	r0, 0x3f	; 63
    2444:	f8 94       	cli
    2446:	de bf       	out	0x3e, r29	; 62
    2448:	0f be       	out	0x3f, r0	; 63
    244a:	cd bf       	out	0x3d, r28	; 61
    244c:	6c 01       	movw	r12, r24
    244e:	1b 01       	movw	r2, r22
    2450:	8a 01       	movw	r16, r20
    2452:	fc 01       	movw	r30, r24
    2454:	17 82       	std	Z+7, r1	; 0x07
    2456:	16 82       	std	Z+6, r1	; 0x06
    2458:	83 81       	ldd	r24, Z+3	; 0x03
    245a:	81 ff       	sbrs	r24, 1
    245c:	d1 c1       	rjmp	.+930    	; 0x2800 <vfprintf+0x3e8>
    245e:	2e 01       	movw	r4, r28
    2460:	08 94       	sec
    2462:	41 1c       	adc	r4, r1
    2464:	51 1c       	adc	r5, r1
    2466:	f6 01       	movw	r30, r12
    2468:	93 81       	ldd	r25, Z+3	; 0x03
    246a:	f1 01       	movw	r30, r2
    246c:	93 fd       	sbrc	r25, 3
    246e:	85 91       	lpm	r24, Z+
    2470:	93 ff       	sbrs	r25, 3
    2472:	81 91       	ld	r24, Z+
    2474:	1f 01       	movw	r2, r30
    2476:	88 23       	and	r24, r24
    2478:	09 f4       	brne	.+2      	; 0x247c <vfprintf+0x64>
    247a:	be c1       	rjmp	.+892    	; 0x27f8 <vfprintf+0x3e0>
    247c:	85 32       	cpi	r24, 0x25	; 37
    247e:	39 f4       	brne	.+14     	; 0x248e <vfprintf+0x76>
    2480:	93 fd       	sbrc	r25, 3
    2482:	85 91       	lpm	r24, Z+
    2484:	93 ff       	sbrs	r25, 3
    2486:	81 91       	ld	r24, Z+
    2488:	1f 01       	movw	r2, r30
    248a:	85 32       	cpi	r24, 0x25	; 37
    248c:	29 f4       	brne	.+10     	; 0x2498 <vfprintf+0x80>
    248e:	90 e0       	ldi	r25, 0x00	; 0
    2490:	b6 01       	movw	r22, r12
    2492:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    2496:	e7 cf       	rjmp	.-50     	; 0x2466 <vfprintf+0x4e>
    2498:	ee 24       	eor	r14, r14
    249a:	ff 24       	eor	r15, r15
    249c:	20 e0       	ldi	r18, 0x00	; 0
    249e:	20 32       	cpi	r18, 0x20	; 32
    24a0:	b0 f4       	brcc	.+44     	; 0x24ce <vfprintf+0xb6>
    24a2:	8b 32       	cpi	r24, 0x2B	; 43
    24a4:	69 f0       	breq	.+26     	; 0x24c0 <vfprintf+0xa8>
    24a6:	8c 32       	cpi	r24, 0x2C	; 44
    24a8:	28 f4       	brcc	.+10     	; 0x24b4 <vfprintf+0x9c>
    24aa:	80 32       	cpi	r24, 0x20	; 32
    24ac:	51 f0       	breq	.+20     	; 0x24c2 <vfprintf+0xaa>
    24ae:	83 32       	cpi	r24, 0x23	; 35
    24b0:	71 f4       	brne	.+28     	; 0x24ce <vfprintf+0xb6>
    24b2:	0b c0       	rjmp	.+22     	; 0x24ca <vfprintf+0xb2>
    24b4:	8d 32       	cpi	r24, 0x2D	; 45
    24b6:	39 f0       	breq	.+14     	; 0x24c6 <vfprintf+0xae>
    24b8:	80 33       	cpi	r24, 0x30	; 48
    24ba:	49 f4       	brne	.+18     	; 0x24ce <vfprintf+0xb6>
    24bc:	21 60       	ori	r18, 0x01	; 1
    24be:	2c c0       	rjmp	.+88     	; 0x2518 <vfprintf+0x100>
    24c0:	22 60       	ori	r18, 0x02	; 2
    24c2:	24 60       	ori	r18, 0x04	; 4
    24c4:	29 c0       	rjmp	.+82     	; 0x2518 <vfprintf+0x100>
    24c6:	28 60       	ori	r18, 0x08	; 8
    24c8:	27 c0       	rjmp	.+78     	; 0x2518 <vfprintf+0x100>
    24ca:	20 61       	ori	r18, 0x10	; 16
    24cc:	25 c0       	rjmp	.+74     	; 0x2518 <vfprintf+0x100>
    24ce:	27 fd       	sbrc	r18, 7
    24d0:	2c c0       	rjmp	.+88     	; 0x252a <vfprintf+0x112>
    24d2:	38 2f       	mov	r19, r24
    24d4:	30 53       	subi	r19, 0x30	; 48
    24d6:	3a 30       	cpi	r19, 0x0A	; 10
    24d8:	98 f4       	brcc	.+38     	; 0x2500 <vfprintf+0xe8>
    24da:	26 ff       	sbrs	r18, 6
    24dc:	08 c0       	rjmp	.+16     	; 0x24ee <vfprintf+0xd6>
    24de:	8e 2d       	mov	r24, r14
    24e0:	88 0f       	add	r24, r24
    24e2:	e8 2e       	mov	r14, r24
    24e4:	ee 0c       	add	r14, r14
    24e6:	ee 0c       	add	r14, r14
    24e8:	e8 0e       	add	r14, r24
    24ea:	e3 0e       	add	r14, r19
    24ec:	15 c0       	rjmp	.+42     	; 0x2518 <vfprintf+0x100>
    24ee:	8f 2d       	mov	r24, r15
    24f0:	88 0f       	add	r24, r24
    24f2:	f8 2e       	mov	r15, r24
    24f4:	ff 0c       	add	r15, r15
    24f6:	ff 0c       	add	r15, r15
    24f8:	f8 0e       	add	r15, r24
    24fa:	f3 0e       	add	r15, r19
    24fc:	20 62       	ori	r18, 0x20	; 32
    24fe:	0c c0       	rjmp	.+24     	; 0x2518 <vfprintf+0x100>
    2500:	8e 32       	cpi	r24, 0x2E	; 46
    2502:	21 f4       	brne	.+8      	; 0x250c <vfprintf+0xf4>
    2504:	26 fd       	sbrc	r18, 6
    2506:	78 c1       	rjmp	.+752    	; 0x27f8 <vfprintf+0x3e0>
    2508:	20 64       	ori	r18, 0x40	; 64
    250a:	06 c0       	rjmp	.+12     	; 0x2518 <vfprintf+0x100>
    250c:	8c 36       	cpi	r24, 0x6C	; 108
    250e:	11 f4       	brne	.+4      	; 0x2514 <vfprintf+0xfc>
    2510:	20 68       	ori	r18, 0x80	; 128
    2512:	02 c0       	rjmp	.+4      	; 0x2518 <vfprintf+0x100>
    2514:	88 36       	cpi	r24, 0x68	; 104
    2516:	49 f4       	brne	.+18     	; 0x252a <vfprintf+0x112>
    2518:	f1 01       	movw	r30, r2
    251a:	93 fd       	sbrc	r25, 3
    251c:	85 91       	lpm	r24, Z+
    251e:	93 ff       	sbrs	r25, 3
    2520:	81 91       	ld	r24, Z+
    2522:	1f 01       	movw	r2, r30
    2524:	88 23       	and	r24, r24
    2526:	09 f0       	breq	.+2      	; 0x252a <vfprintf+0x112>
    2528:	ba cf       	rjmp	.-140    	; 0x249e <vfprintf+0x86>
    252a:	98 2f       	mov	r25, r24
    252c:	95 54       	subi	r25, 0x45	; 69
    252e:	93 30       	cpi	r25, 0x03	; 3
    2530:	18 f0       	brcs	.+6      	; 0x2538 <vfprintf+0x120>
    2532:	90 52       	subi	r25, 0x20	; 32
    2534:	93 30       	cpi	r25, 0x03	; 3
    2536:	28 f4       	brcc	.+10     	; 0x2542 <vfprintf+0x12a>
    2538:	0c 5f       	subi	r16, 0xFC	; 252
    253a:	1f 4f       	sbci	r17, 0xFF	; 255
    253c:	ff e3       	ldi	r31, 0x3F	; 63
    253e:	f9 83       	std	Y+1, r31	; 0x01
    2540:	0d c0       	rjmp	.+26     	; 0x255c <vfprintf+0x144>
    2542:	83 36       	cpi	r24, 0x63	; 99
    2544:	31 f0       	breq	.+12     	; 0x2552 <vfprintf+0x13a>
    2546:	83 37       	cpi	r24, 0x73	; 115
    2548:	71 f0       	breq	.+28     	; 0x2566 <vfprintf+0x14e>
    254a:	83 35       	cpi	r24, 0x53	; 83
    254c:	09 f0       	breq	.+2      	; 0x2550 <vfprintf+0x138>
    254e:	60 c0       	rjmp	.+192    	; 0x2610 <vfprintf+0x1f8>
    2550:	22 c0       	rjmp	.+68     	; 0x2596 <vfprintf+0x17e>
    2552:	f8 01       	movw	r30, r16
    2554:	80 81       	ld	r24, Z
    2556:	89 83       	std	Y+1, r24	; 0x01
    2558:	0e 5f       	subi	r16, 0xFE	; 254
    255a:	1f 4f       	sbci	r17, 0xFF	; 255
    255c:	42 01       	movw	r8, r4
    255e:	71 e0       	ldi	r23, 0x01	; 1
    2560:	a7 2e       	mov	r10, r23
    2562:	b1 2c       	mov	r11, r1
    2564:	16 c0       	rjmp	.+44     	; 0x2592 <vfprintf+0x17a>
    2566:	62 e0       	ldi	r22, 0x02	; 2
    2568:	66 2e       	mov	r6, r22
    256a:	71 2c       	mov	r7, r1
    256c:	60 0e       	add	r6, r16
    256e:	71 1e       	adc	r7, r17
    2570:	f8 01       	movw	r30, r16
    2572:	80 80       	ld	r8, Z
    2574:	91 80       	ldd	r9, Z+1	; 0x01
    2576:	26 ff       	sbrs	r18, 6
    2578:	03 c0       	rjmp	.+6      	; 0x2580 <vfprintf+0x168>
    257a:	6e 2d       	mov	r22, r14
    257c:	70 e0       	ldi	r23, 0x00	; 0
    257e:	02 c0       	rjmp	.+4      	; 0x2584 <vfprintf+0x16c>
    2580:	6f ef       	ldi	r22, 0xFF	; 255
    2582:	7f ef       	ldi	r23, 0xFF	; 255
    2584:	c4 01       	movw	r24, r8
    2586:	2c 87       	std	Y+12, r18	; 0x0c
    2588:	0e 94 27 14 	call	0x284e	; 0x284e <strnlen>
    258c:	5c 01       	movw	r10, r24
    258e:	83 01       	movw	r16, r6
    2590:	2c 85       	ldd	r18, Y+12	; 0x0c
    2592:	2f 77       	andi	r18, 0x7F	; 127
    2594:	17 c0       	rjmp	.+46     	; 0x25c4 <vfprintf+0x1ac>
    2596:	52 e0       	ldi	r21, 0x02	; 2
    2598:	65 2e       	mov	r6, r21
    259a:	71 2c       	mov	r7, r1
    259c:	60 0e       	add	r6, r16
    259e:	71 1e       	adc	r7, r17
    25a0:	f8 01       	movw	r30, r16
    25a2:	80 80       	ld	r8, Z
    25a4:	91 80       	ldd	r9, Z+1	; 0x01
    25a6:	26 ff       	sbrs	r18, 6
    25a8:	03 c0       	rjmp	.+6      	; 0x25b0 <vfprintf+0x198>
    25aa:	6e 2d       	mov	r22, r14
    25ac:	70 e0       	ldi	r23, 0x00	; 0
    25ae:	02 c0       	rjmp	.+4      	; 0x25b4 <vfprintf+0x19c>
    25b0:	6f ef       	ldi	r22, 0xFF	; 255
    25b2:	7f ef       	ldi	r23, 0xFF	; 255
    25b4:	c4 01       	movw	r24, r8
    25b6:	2c 87       	std	Y+12, r18	; 0x0c
    25b8:	0e 94 1c 14 	call	0x2838	; 0x2838 <strnlen_P>
    25bc:	5c 01       	movw	r10, r24
    25be:	2c 85       	ldd	r18, Y+12	; 0x0c
    25c0:	20 68       	ori	r18, 0x80	; 128
    25c2:	83 01       	movw	r16, r6
    25c4:	23 fd       	sbrc	r18, 3
    25c6:	20 c0       	rjmp	.+64     	; 0x2608 <vfprintf+0x1f0>
    25c8:	08 c0       	rjmp	.+16     	; 0x25da <vfprintf+0x1c2>
    25ca:	80 e2       	ldi	r24, 0x20	; 32
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	b6 01       	movw	r22, r12
    25d0:	2c 87       	std	Y+12, r18	; 0x0c
    25d2:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    25d6:	fa 94       	dec	r15
    25d8:	2c 85       	ldd	r18, Y+12	; 0x0c
    25da:	8f 2d       	mov	r24, r15
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	a8 16       	cp	r10, r24
    25e0:	b9 06       	cpc	r11, r25
    25e2:	98 f3       	brcs	.-26     	; 0x25ca <vfprintf+0x1b2>
    25e4:	11 c0       	rjmp	.+34     	; 0x2608 <vfprintf+0x1f0>
    25e6:	f4 01       	movw	r30, r8
    25e8:	27 fd       	sbrc	r18, 7
    25ea:	85 91       	lpm	r24, Z+
    25ec:	27 ff       	sbrs	r18, 7
    25ee:	81 91       	ld	r24, Z+
    25f0:	4f 01       	movw	r8, r30
    25f2:	90 e0       	ldi	r25, 0x00	; 0
    25f4:	b6 01       	movw	r22, r12
    25f6:	2c 87       	std	Y+12, r18	; 0x0c
    25f8:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    25fc:	2c 85       	ldd	r18, Y+12	; 0x0c
    25fe:	f1 10       	cpse	r15, r1
    2600:	fa 94       	dec	r15
    2602:	08 94       	sec
    2604:	a1 08       	sbc	r10, r1
    2606:	b1 08       	sbc	r11, r1
    2608:	a1 14       	cp	r10, r1
    260a:	b1 04       	cpc	r11, r1
    260c:	61 f7       	brne	.-40     	; 0x25e6 <vfprintf+0x1ce>
    260e:	f1 c0       	rjmp	.+482    	; 0x27f2 <vfprintf+0x3da>
    2610:	84 36       	cpi	r24, 0x64	; 100
    2612:	11 f0       	breq	.+4      	; 0x2618 <vfprintf+0x200>
    2614:	89 36       	cpi	r24, 0x69	; 105
    2616:	49 f5       	brne	.+82     	; 0x266a <vfprintf+0x252>
    2618:	27 ff       	sbrs	r18, 7
    261a:	08 c0       	rjmp	.+16     	; 0x262c <vfprintf+0x214>
    261c:	f8 01       	movw	r30, r16
    261e:	60 81       	ld	r22, Z
    2620:	71 81       	ldd	r23, Z+1	; 0x01
    2622:	82 81       	ldd	r24, Z+2	; 0x02
    2624:	93 81       	ldd	r25, Z+3	; 0x03
    2626:	0c 5f       	subi	r16, 0xFC	; 252
    2628:	1f 4f       	sbci	r17, 0xFF	; 255
    262a:	09 c0       	rjmp	.+18     	; 0x263e <vfprintf+0x226>
    262c:	f8 01       	movw	r30, r16
    262e:	60 81       	ld	r22, Z
    2630:	71 81       	ldd	r23, Z+1	; 0x01
    2632:	88 27       	eor	r24, r24
    2634:	77 fd       	sbrc	r23, 7
    2636:	80 95       	com	r24
    2638:	98 2f       	mov	r25, r24
    263a:	0e 5f       	subi	r16, 0xFE	; 254
    263c:	1f 4f       	sbci	r17, 0xFF	; 255
    263e:	4f e6       	ldi	r20, 0x6F	; 111
    2640:	b4 2e       	mov	r11, r20
    2642:	b2 22       	and	r11, r18
    2644:	97 ff       	sbrs	r25, 7
    2646:	09 c0       	rjmp	.+18     	; 0x265a <vfprintf+0x242>
    2648:	90 95       	com	r25
    264a:	80 95       	com	r24
    264c:	70 95       	com	r23
    264e:	61 95       	neg	r22
    2650:	7f 4f       	sbci	r23, 0xFF	; 255
    2652:	8f 4f       	sbci	r24, 0xFF	; 255
    2654:	9f 4f       	sbci	r25, 0xFF	; 255
    2656:	f0 e8       	ldi	r31, 0x80	; 128
    2658:	bf 2a       	or	r11, r31
    265a:	a2 01       	movw	r20, r4
    265c:	2a e0       	ldi	r18, 0x0A	; 10
    265e:	30 e0       	ldi	r19, 0x00	; 0
    2660:	0e 94 6e 14 	call	0x28dc	; 0x28dc <__ultoa_invert>
    2664:	78 2e       	mov	r7, r24
    2666:	74 18       	sub	r7, r4
    2668:	45 c0       	rjmp	.+138    	; 0x26f4 <vfprintf+0x2dc>
    266a:	85 37       	cpi	r24, 0x75	; 117
    266c:	31 f4       	brne	.+12     	; 0x267a <vfprintf+0x262>
    266e:	3f ee       	ldi	r19, 0xEF	; 239
    2670:	b3 2e       	mov	r11, r19
    2672:	b2 22       	and	r11, r18
    2674:	2a e0       	ldi	r18, 0x0A	; 10
    2676:	30 e0       	ldi	r19, 0x00	; 0
    2678:	25 c0       	rjmp	.+74     	; 0x26c4 <vfprintf+0x2ac>
    267a:	99 ef       	ldi	r25, 0xF9	; 249
    267c:	b9 2e       	mov	r11, r25
    267e:	b2 22       	and	r11, r18
    2680:	8f 36       	cpi	r24, 0x6F	; 111
    2682:	c1 f0       	breq	.+48     	; 0x26b4 <vfprintf+0x29c>
    2684:	80 37       	cpi	r24, 0x70	; 112
    2686:	20 f4       	brcc	.+8      	; 0x2690 <vfprintf+0x278>
    2688:	88 35       	cpi	r24, 0x58	; 88
    268a:	09 f0       	breq	.+2      	; 0x268e <vfprintf+0x276>
    268c:	b5 c0       	rjmp	.+362    	; 0x27f8 <vfprintf+0x3e0>
    268e:	0d c0       	rjmp	.+26     	; 0x26aa <vfprintf+0x292>
    2690:	80 37       	cpi	r24, 0x70	; 112
    2692:	21 f0       	breq	.+8      	; 0x269c <vfprintf+0x284>
    2694:	88 37       	cpi	r24, 0x78	; 120
    2696:	09 f0       	breq	.+2      	; 0x269a <vfprintf+0x282>
    2698:	af c0       	rjmp	.+350    	; 0x27f8 <vfprintf+0x3e0>
    269a:	02 c0       	rjmp	.+4      	; 0x26a0 <vfprintf+0x288>
    269c:	20 e1       	ldi	r18, 0x10	; 16
    269e:	b2 2a       	or	r11, r18
    26a0:	b4 fe       	sbrs	r11, 4
    26a2:	0b c0       	rjmp	.+22     	; 0x26ba <vfprintf+0x2a2>
    26a4:	84 e0       	ldi	r24, 0x04	; 4
    26a6:	b8 2a       	or	r11, r24
    26a8:	08 c0       	rjmp	.+16     	; 0x26ba <vfprintf+0x2a2>
    26aa:	b4 fe       	sbrs	r11, 4
    26ac:	09 c0       	rjmp	.+18     	; 0x26c0 <vfprintf+0x2a8>
    26ae:	e6 e0       	ldi	r30, 0x06	; 6
    26b0:	be 2a       	or	r11, r30
    26b2:	06 c0       	rjmp	.+12     	; 0x26c0 <vfprintf+0x2a8>
    26b4:	28 e0       	ldi	r18, 0x08	; 8
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	05 c0       	rjmp	.+10     	; 0x26c4 <vfprintf+0x2ac>
    26ba:	20 e1       	ldi	r18, 0x10	; 16
    26bc:	30 e0       	ldi	r19, 0x00	; 0
    26be:	02 c0       	rjmp	.+4      	; 0x26c4 <vfprintf+0x2ac>
    26c0:	20 e1       	ldi	r18, 0x10	; 16
    26c2:	32 e0       	ldi	r19, 0x02	; 2
    26c4:	b7 fe       	sbrs	r11, 7
    26c6:	08 c0       	rjmp	.+16     	; 0x26d8 <vfprintf+0x2c0>
    26c8:	f8 01       	movw	r30, r16
    26ca:	60 81       	ld	r22, Z
    26cc:	71 81       	ldd	r23, Z+1	; 0x01
    26ce:	82 81       	ldd	r24, Z+2	; 0x02
    26d0:	93 81       	ldd	r25, Z+3	; 0x03
    26d2:	0c 5f       	subi	r16, 0xFC	; 252
    26d4:	1f 4f       	sbci	r17, 0xFF	; 255
    26d6:	07 c0       	rjmp	.+14     	; 0x26e6 <vfprintf+0x2ce>
    26d8:	f8 01       	movw	r30, r16
    26da:	60 81       	ld	r22, Z
    26dc:	71 81       	ldd	r23, Z+1	; 0x01
    26de:	80 e0       	ldi	r24, 0x00	; 0
    26e0:	90 e0       	ldi	r25, 0x00	; 0
    26e2:	0e 5f       	subi	r16, 0xFE	; 254
    26e4:	1f 4f       	sbci	r17, 0xFF	; 255
    26e6:	a2 01       	movw	r20, r4
    26e8:	0e 94 6e 14 	call	0x28dc	; 0x28dc <__ultoa_invert>
    26ec:	78 2e       	mov	r7, r24
    26ee:	74 18       	sub	r7, r4
    26f0:	ff e7       	ldi	r31, 0x7F	; 127
    26f2:	bf 22       	and	r11, r31
    26f4:	b6 fe       	sbrs	r11, 6
    26f6:	0b c0       	rjmp	.+22     	; 0x270e <vfprintf+0x2f6>
    26f8:	2e ef       	ldi	r18, 0xFE	; 254
    26fa:	b2 22       	and	r11, r18
    26fc:	7e 14       	cp	r7, r14
    26fe:	38 f4       	brcc	.+14     	; 0x270e <vfprintf+0x2f6>
    2700:	b4 fe       	sbrs	r11, 4
    2702:	07 c0       	rjmp	.+14     	; 0x2712 <vfprintf+0x2fa>
    2704:	b2 fc       	sbrc	r11, 2
    2706:	05 c0       	rjmp	.+10     	; 0x2712 <vfprintf+0x2fa>
    2708:	8f ee       	ldi	r24, 0xEF	; 239
    270a:	b8 22       	and	r11, r24
    270c:	02 c0       	rjmp	.+4      	; 0x2712 <vfprintf+0x2fa>
    270e:	a7 2c       	mov	r10, r7
    2710:	01 c0       	rjmp	.+2      	; 0x2714 <vfprintf+0x2fc>
    2712:	ae 2c       	mov	r10, r14
    2714:	8b 2d       	mov	r24, r11
    2716:	90 e0       	ldi	r25, 0x00	; 0
    2718:	b4 fe       	sbrs	r11, 4
    271a:	0d c0       	rjmp	.+26     	; 0x2736 <vfprintf+0x31e>
    271c:	fe 01       	movw	r30, r28
    271e:	e7 0d       	add	r30, r7
    2720:	f1 1d       	adc	r31, r1
    2722:	20 81       	ld	r18, Z
    2724:	20 33       	cpi	r18, 0x30	; 48
    2726:	19 f4       	brne	.+6      	; 0x272e <vfprintf+0x316>
    2728:	e9 ee       	ldi	r30, 0xE9	; 233
    272a:	be 22       	and	r11, r30
    272c:	09 c0       	rjmp	.+18     	; 0x2740 <vfprintf+0x328>
    272e:	a3 94       	inc	r10
    2730:	b2 fe       	sbrs	r11, 2
    2732:	06 c0       	rjmp	.+12     	; 0x2740 <vfprintf+0x328>
    2734:	04 c0       	rjmp	.+8      	; 0x273e <vfprintf+0x326>
    2736:	86 78       	andi	r24, 0x86	; 134
    2738:	90 70       	andi	r25, 0x00	; 0
    273a:	00 97       	sbiw	r24, 0x00	; 0
    273c:	09 f0       	breq	.+2      	; 0x2740 <vfprintf+0x328>
    273e:	a3 94       	inc	r10
    2740:	8b 2c       	mov	r8, r11
    2742:	99 24       	eor	r9, r9
    2744:	b3 fc       	sbrc	r11, 3
    2746:	14 c0       	rjmp	.+40     	; 0x2770 <vfprintf+0x358>
    2748:	b0 fe       	sbrs	r11, 0
    274a:	0f c0       	rjmp	.+30     	; 0x276a <vfprintf+0x352>
    274c:	af 14       	cp	r10, r15
    274e:	28 f4       	brcc	.+10     	; 0x275a <vfprintf+0x342>
    2750:	e7 2c       	mov	r14, r7
    2752:	ef 0c       	add	r14, r15
    2754:	ea 18       	sub	r14, r10
    2756:	af 2c       	mov	r10, r15
    2758:	08 c0       	rjmp	.+16     	; 0x276a <vfprintf+0x352>
    275a:	e7 2c       	mov	r14, r7
    275c:	06 c0       	rjmp	.+12     	; 0x276a <vfprintf+0x352>
    275e:	80 e2       	ldi	r24, 0x20	; 32
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	b6 01       	movw	r22, r12
    2764:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    2768:	a3 94       	inc	r10
    276a:	af 14       	cp	r10, r15
    276c:	c0 f3       	brcs	.-16     	; 0x275e <vfprintf+0x346>
    276e:	04 c0       	rjmp	.+8      	; 0x2778 <vfprintf+0x360>
    2770:	af 14       	cp	r10, r15
    2772:	10 f4       	brcc	.+4      	; 0x2778 <vfprintf+0x360>
    2774:	fa 18       	sub	r15, r10
    2776:	01 c0       	rjmp	.+2      	; 0x277a <vfprintf+0x362>
    2778:	ff 24       	eor	r15, r15
    277a:	84 fe       	sbrs	r8, 4
    277c:	0f c0       	rjmp	.+30     	; 0x279c <vfprintf+0x384>
    277e:	80 e3       	ldi	r24, 0x30	; 48
    2780:	90 e0       	ldi	r25, 0x00	; 0
    2782:	b6 01       	movw	r22, r12
    2784:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    2788:	82 fe       	sbrs	r8, 2
    278a:	1f c0       	rjmp	.+62     	; 0x27ca <vfprintf+0x3b2>
    278c:	81 fe       	sbrs	r8, 1
    278e:	03 c0       	rjmp	.+6      	; 0x2796 <vfprintf+0x37e>
    2790:	88 e5       	ldi	r24, 0x58	; 88
    2792:	90 e0       	ldi	r25, 0x00	; 0
    2794:	10 c0       	rjmp	.+32     	; 0x27b6 <vfprintf+0x39e>
    2796:	88 e7       	ldi	r24, 0x78	; 120
    2798:	90 e0       	ldi	r25, 0x00	; 0
    279a:	0d c0       	rjmp	.+26     	; 0x27b6 <vfprintf+0x39e>
    279c:	c4 01       	movw	r24, r8
    279e:	86 78       	andi	r24, 0x86	; 134
    27a0:	90 70       	andi	r25, 0x00	; 0
    27a2:	00 97       	sbiw	r24, 0x00	; 0
    27a4:	91 f0       	breq	.+36     	; 0x27ca <vfprintf+0x3b2>
    27a6:	81 fc       	sbrc	r8, 1
    27a8:	02 c0       	rjmp	.+4      	; 0x27ae <vfprintf+0x396>
    27aa:	80 e2       	ldi	r24, 0x20	; 32
    27ac:	01 c0       	rjmp	.+2      	; 0x27b0 <vfprintf+0x398>
    27ae:	8b e2       	ldi	r24, 0x2B	; 43
    27b0:	b7 fc       	sbrc	r11, 7
    27b2:	8d e2       	ldi	r24, 0x2D	; 45
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	b6 01       	movw	r22, r12
    27b8:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    27bc:	06 c0       	rjmp	.+12     	; 0x27ca <vfprintf+0x3b2>
    27be:	80 e3       	ldi	r24, 0x30	; 48
    27c0:	90 e0       	ldi	r25, 0x00	; 0
    27c2:	b6 01       	movw	r22, r12
    27c4:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    27c8:	ea 94       	dec	r14
    27ca:	7e 14       	cp	r7, r14
    27cc:	c0 f3       	brcs	.-16     	; 0x27be <vfprintf+0x3a6>
    27ce:	7a 94       	dec	r7
    27d0:	f2 01       	movw	r30, r4
    27d2:	e7 0d       	add	r30, r7
    27d4:	f1 1d       	adc	r31, r1
    27d6:	80 81       	ld	r24, Z
    27d8:	90 e0       	ldi	r25, 0x00	; 0
    27da:	b6 01       	movw	r22, r12
    27dc:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    27e0:	77 20       	and	r7, r7
    27e2:	a9 f7       	brne	.-22     	; 0x27ce <vfprintf+0x3b6>
    27e4:	06 c0       	rjmp	.+12     	; 0x27f2 <vfprintf+0x3da>
    27e6:	80 e2       	ldi	r24, 0x20	; 32
    27e8:	90 e0       	ldi	r25, 0x00	; 0
    27ea:	b6 01       	movw	r22, r12
    27ec:	0e 94 42 14 	call	0x2884	; 0x2884 <fputc>
    27f0:	fa 94       	dec	r15
    27f2:	ff 20       	and	r15, r15
    27f4:	c1 f7       	brne	.-16     	; 0x27e6 <vfprintf+0x3ce>
    27f6:	37 ce       	rjmp	.-914    	; 0x2466 <vfprintf+0x4e>
    27f8:	f6 01       	movw	r30, r12
    27fa:	26 81       	ldd	r18, Z+6	; 0x06
    27fc:	37 81       	ldd	r19, Z+7	; 0x07
    27fe:	02 c0       	rjmp	.+4      	; 0x2804 <vfprintf+0x3ec>
    2800:	2f ef       	ldi	r18, 0xFF	; 255
    2802:	3f ef       	ldi	r19, 0xFF	; 255
    2804:	c9 01       	movw	r24, r18
    2806:	2c 96       	adiw	r28, 0x0c	; 12
    2808:	0f b6       	in	r0, 0x3f	; 63
    280a:	f8 94       	cli
    280c:	de bf       	out	0x3e, r29	; 62
    280e:	0f be       	out	0x3f, r0	; 63
    2810:	cd bf       	out	0x3d, r28	; 61
    2812:	cf 91       	pop	r28
    2814:	df 91       	pop	r29
    2816:	1f 91       	pop	r17
    2818:	0f 91       	pop	r16
    281a:	ff 90       	pop	r15
    281c:	ef 90       	pop	r14
    281e:	df 90       	pop	r13
    2820:	cf 90       	pop	r12
    2822:	bf 90       	pop	r11
    2824:	af 90       	pop	r10
    2826:	9f 90       	pop	r9
    2828:	8f 90       	pop	r8
    282a:	7f 90       	pop	r7
    282c:	6f 90       	pop	r6
    282e:	5f 90       	pop	r5
    2830:	4f 90       	pop	r4
    2832:	3f 90       	pop	r3
    2834:	2f 90       	pop	r2
    2836:	08 95       	ret

00002838 <strnlen_P>:
    2838:	fc 01       	movw	r30, r24
    283a:	05 90       	lpm	r0, Z+
    283c:	61 50       	subi	r22, 0x01	; 1
    283e:	70 40       	sbci	r23, 0x00	; 0
    2840:	01 10       	cpse	r0, r1
    2842:	d8 f7       	brcc	.-10     	; 0x283a <strnlen_P+0x2>
    2844:	80 95       	com	r24
    2846:	90 95       	com	r25
    2848:	8e 0f       	add	r24, r30
    284a:	9f 1f       	adc	r25, r31
    284c:	08 95       	ret

0000284e <strnlen>:
    284e:	fc 01       	movw	r30, r24
    2850:	61 50       	subi	r22, 0x01	; 1
    2852:	70 40       	sbci	r23, 0x00	; 0
    2854:	01 90       	ld	r0, Z+
    2856:	01 10       	cpse	r0, r1
    2858:	d8 f7       	brcc	.-10     	; 0x2850 <strnlen+0x2>
    285a:	80 95       	com	r24
    285c:	90 95       	com	r25
    285e:	8e 0f       	add	r24, r30
    2860:	9f 1f       	adc	r25, r31
    2862:	08 95       	ret

00002864 <strrev>:
    2864:	dc 01       	movw	r26, r24
    2866:	fc 01       	movw	r30, r24
    2868:	67 2f       	mov	r22, r23
    286a:	71 91       	ld	r23, Z+
    286c:	77 23       	and	r23, r23
    286e:	e1 f7       	brne	.-8      	; 0x2868 <strrev+0x4>
    2870:	32 97       	sbiw	r30, 0x02	; 2
    2872:	04 c0       	rjmp	.+8      	; 0x287c <strrev+0x18>
    2874:	7c 91       	ld	r23, X
    2876:	6d 93       	st	X+, r22
    2878:	70 83       	st	Z, r23
    287a:	62 91       	ld	r22, -Z
    287c:	ae 17       	cp	r26, r30
    287e:	bf 07       	cpc	r27, r31
    2880:	c8 f3       	brcs	.-14     	; 0x2874 <strrev+0x10>
    2882:	08 95       	ret

00002884 <fputc>:
    2884:	0f 93       	push	r16
    2886:	1f 93       	push	r17
    2888:	cf 93       	push	r28
    288a:	df 93       	push	r29
    288c:	8c 01       	movw	r16, r24
    288e:	eb 01       	movw	r28, r22
    2890:	8b 81       	ldd	r24, Y+3	; 0x03
    2892:	81 ff       	sbrs	r24, 1
    2894:	1b c0       	rjmp	.+54     	; 0x28cc <fputc+0x48>
    2896:	82 ff       	sbrs	r24, 2
    2898:	0d c0       	rjmp	.+26     	; 0x28b4 <fputc+0x30>
    289a:	2e 81       	ldd	r18, Y+6	; 0x06
    289c:	3f 81       	ldd	r19, Y+7	; 0x07
    289e:	8c 81       	ldd	r24, Y+4	; 0x04
    28a0:	9d 81       	ldd	r25, Y+5	; 0x05
    28a2:	28 17       	cp	r18, r24
    28a4:	39 07       	cpc	r19, r25
    28a6:	64 f4       	brge	.+24     	; 0x28c0 <fputc+0x3c>
    28a8:	e8 81       	ld	r30, Y
    28aa:	f9 81       	ldd	r31, Y+1	; 0x01
    28ac:	01 93       	st	Z+, r16
    28ae:	f9 83       	std	Y+1, r31	; 0x01
    28b0:	e8 83       	st	Y, r30
    28b2:	06 c0       	rjmp	.+12     	; 0x28c0 <fputc+0x3c>
    28b4:	e8 85       	ldd	r30, Y+8	; 0x08
    28b6:	f9 85       	ldd	r31, Y+9	; 0x09
    28b8:	80 2f       	mov	r24, r16
    28ba:	09 95       	icall
    28bc:	00 97       	sbiw	r24, 0x00	; 0
    28be:	31 f4       	brne	.+12     	; 0x28cc <fputc+0x48>
    28c0:	8e 81       	ldd	r24, Y+6	; 0x06
    28c2:	9f 81       	ldd	r25, Y+7	; 0x07
    28c4:	01 96       	adiw	r24, 0x01	; 1
    28c6:	9f 83       	std	Y+7, r25	; 0x07
    28c8:	8e 83       	std	Y+6, r24	; 0x06
    28ca:	02 c0       	rjmp	.+4      	; 0x28d0 <fputc+0x4c>
    28cc:	0f ef       	ldi	r16, 0xFF	; 255
    28ce:	1f ef       	ldi	r17, 0xFF	; 255
    28d0:	c8 01       	movw	r24, r16
    28d2:	df 91       	pop	r29
    28d4:	cf 91       	pop	r28
    28d6:	1f 91       	pop	r17
    28d8:	0f 91       	pop	r16
    28da:	08 95       	ret

000028dc <__ultoa_invert>:
    28dc:	fa 01       	movw	r30, r20
    28de:	aa 27       	eor	r26, r26
    28e0:	28 30       	cpi	r18, 0x08	; 8
    28e2:	51 f1       	breq	.+84     	; 0x2938 <__ultoa_invert+0x5c>
    28e4:	20 31       	cpi	r18, 0x10	; 16
    28e6:	81 f1       	breq	.+96     	; 0x2948 <__ultoa_invert+0x6c>
    28e8:	e8 94       	clt
    28ea:	6f 93       	push	r22
    28ec:	6e 7f       	andi	r22, 0xFE	; 254
    28ee:	6e 5f       	subi	r22, 0xFE	; 254
    28f0:	7f 4f       	sbci	r23, 0xFF	; 255
    28f2:	8f 4f       	sbci	r24, 0xFF	; 255
    28f4:	9f 4f       	sbci	r25, 0xFF	; 255
    28f6:	af 4f       	sbci	r26, 0xFF	; 255
    28f8:	b1 e0       	ldi	r27, 0x01	; 1
    28fa:	3e d0       	rcall	.+124    	; 0x2978 <__ultoa_invert+0x9c>
    28fc:	b4 e0       	ldi	r27, 0x04	; 4
    28fe:	3c d0       	rcall	.+120    	; 0x2978 <__ultoa_invert+0x9c>
    2900:	67 0f       	add	r22, r23
    2902:	78 1f       	adc	r23, r24
    2904:	89 1f       	adc	r24, r25
    2906:	9a 1f       	adc	r25, r26
    2908:	a1 1d       	adc	r26, r1
    290a:	68 0f       	add	r22, r24
    290c:	79 1f       	adc	r23, r25
    290e:	8a 1f       	adc	r24, r26
    2910:	91 1d       	adc	r25, r1
    2912:	a1 1d       	adc	r26, r1
    2914:	6a 0f       	add	r22, r26
    2916:	71 1d       	adc	r23, r1
    2918:	81 1d       	adc	r24, r1
    291a:	91 1d       	adc	r25, r1
    291c:	a1 1d       	adc	r26, r1
    291e:	20 d0       	rcall	.+64     	; 0x2960 <__ultoa_invert+0x84>
    2920:	09 f4       	brne	.+2      	; 0x2924 <__ultoa_invert+0x48>
    2922:	68 94       	set
    2924:	3f 91       	pop	r19
    2926:	2a e0       	ldi	r18, 0x0A	; 10
    2928:	26 9f       	mul	r18, r22
    292a:	11 24       	eor	r1, r1
    292c:	30 19       	sub	r19, r0
    292e:	30 5d       	subi	r19, 0xD0	; 208
    2930:	31 93       	st	Z+, r19
    2932:	de f6       	brtc	.-74     	; 0x28ea <__ultoa_invert+0xe>
    2934:	cf 01       	movw	r24, r30
    2936:	08 95       	ret
    2938:	46 2f       	mov	r20, r22
    293a:	47 70       	andi	r20, 0x07	; 7
    293c:	40 5d       	subi	r20, 0xD0	; 208
    293e:	41 93       	st	Z+, r20
    2940:	b3 e0       	ldi	r27, 0x03	; 3
    2942:	0f d0       	rcall	.+30     	; 0x2962 <__ultoa_invert+0x86>
    2944:	c9 f7       	brne	.-14     	; 0x2938 <__ultoa_invert+0x5c>
    2946:	f6 cf       	rjmp	.-20     	; 0x2934 <__ultoa_invert+0x58>
    2948:	46 2f       	mov	r20, r22
    294a:	4f 70       	andi	r20, 0x0F	; 15
    294c:	40 5d       	subi	r20, 0xD0	; 208
    294e:	4a 33       	cpi	r20, 0x3A	; 58
    2950:	18 f0       	brcs	.+6      	; 0x2958 <__ultoa_invert+0x7c>
    2952:	49 5d       	subi	r20, 0xD9	; 217
    2954:	31 fd       	sbrc	r19, 1
    2956:	40 52       	subi	r20, 0x20	; 32
    2958:	41 93       	st	Z+, r20
    295a:	02 d0       	rcall	.+4      	; 0x2960 <__ultoa_invert+0x84>
    295c:	a9 f7       	brne	.-22     	; 0x2948 <__ultoa_invert+0x6c>
    295e:	ea cf       	rjmp	.-44     	; 0x2934 <__ultoa_invert+0x58>
    2960:	b4 e0       	ldi	r27, 0x04	; 4
    2962:	a6 95       	lsr	r26
    2964:	97 95       	ror	r25
    2966:	87 95       	ror	r24
    2968:	77 95       	ror	r23
    296a:	67 95       	ror	r22
    296c:	ba 95       	dec	r27
    296e:	c9 f7       	brne	.-14     	; 0x2962 <__ultoa_invert+0x86>
    2970:	00 97       	sbiw	r24, 0x00	; 0
    2972:	61 05       	cpc	r22, r1
    2974:	71 05       	cpc	r23, r1
    2976:	08 95       	ret
    2978:	9b 01       	movw	r18, r22
    297a:	ac 01       	movw	r20, r24
    297c:	0a 2e       	mov	r0, r26
    297e:	06 94       	lsr	r0
    2980:	57 95       	ror	r21
    2982:	47 95       	ror	r20
    2984:	37 95       	ror	r19
    2986:	27 95       	ror	r18
    2988:	ba 95       	dec	r27
    298a:	c9 f7       	brne	.-14     	; 0x297e <__ultoa_invert+0xa2>
    298c:	62 0f       	add	r22, r18
    298e:	73 1f       	adc	r23, r19
    2990:	84 1f       	adc	r24, r20
    2992:	95 1f       	adc	r25, r21
    2994:	a0 1d       	adc	r26, r0
    2996:	08 95       	ret

00002998 <_exit>:
    2998:	f8 94       	cli

0000299a <__stop_program>:
    299a:	ff cf       	rjmp	.-2      	; 0x299a <__stop_program>
