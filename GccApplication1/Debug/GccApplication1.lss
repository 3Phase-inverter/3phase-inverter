
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c6  00800100  00002c36  00002cca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002c36  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002b  008001c6  008001c6  00002d90  2**0
                  ALLOC
  3 .stab         00001734  00000000  00000000  00002d90  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000535  00000000  00000000  000044c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000100  00000000  00000000  000049f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000005cd  00000000  00000000  00004af9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000022ab  00000000  00000000  000050c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000acf  00000000  00000000  00007371  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002879  00000000  00000000  00007e40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004b0  00000000  00000000  0000a6bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000851  00000000  00000000  0000ab6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000012e0  00000000  00000000  0000b3bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000001e2  00000000  00000000  0000c69d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000070  00000000  00000000  0000c87f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 9b 06 	jmp	0xd36	; 0xd36 <__ctors_end>
       4:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
       8:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
       c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      10:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      14:	0c 94 ac 0d 	jmp	0x1b58	; 0x1b58 <__vector_5>
      18:	0c 94 e5 0d 	jmp	0x1bca	; 0x1bca <__vector_6>
      1c:	0c 94 1d 0e 	jmp	0x1c3a	; 0x1c3a <__vector_7>
      20:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      24:	0c 94 f9 10 	jmp	0x21f2	; 0x21f2 <__vector_9>
      28:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      2c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      30:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      34:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      38:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      3c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      40:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      44:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      48:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      4c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      50:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      54:	0c 94 0d 07 	jmp	0xe1a	; 0xe1a <__vector_21>
      58:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      5c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      60:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      64:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      68:	0c 94 9b 0f 	jmp	0x1f36	; 0x1f36 <__vector_26>
      6c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      70:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      74:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      78:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      7c:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      80:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      84:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>
      88:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__bad_interrupt>

0000008c <ef5x7>:
      8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      bc:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
      cc:	00 08 08 08 08 08 00 30 30 00 00 20 10 08 04 02     .......00.. ....
      dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     10c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     11c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     14c:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     16c:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     19c:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     1ac:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     1bc:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1ec:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     1fc:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     25c:	00 00 41 36 08 00 08 08 2a 1c 08 08 1c 2a 08 08     ..A6....*....*..

0000026c <sine0>:
     26c:	80 83 86 89 8c 8f 92 95 98 9c 9f a2 a5 a8 ab ae     ................
     27c:	b0 b3 b6 b9 bc bf c1 c4 c7 c9 cc ce d1 d3 d5 d8     ................
     28c:	da dc de e0 e2 e4 e6 e8 ea ec ed ef f0 f2 f3 f5     ................
     29c:	f6 f7 f8 f9 fa fb fc fc fd fe fe ff ff ff ff ff     ................
     2ac:	ff ff ff ff ff ff fe fe fd fc fc fb fa f9 f8 f7     ................
     2bc:	f6 f5 f3 f2 f0 ef ed ec ea e8 e6 e4 e2 e0 de dc     ................
     2cc:	da d8 d5 d3 d1 ce cc c9 c7 c4 c1 bf bc b9 b6 b3     ................
     2dc:	b0 ae ab a8 a5 a2 9f 9c 98 95 92 8f 8c 89 86 83     ................
     2ec:	80 7c 79 76 73 70 6d 6a 67 63 60 5d 5a 57 54 51     .|yvspmjgc`]ZWTQ
     2fc:	4f 4c 49 46 43 40 3e 3b 38 36 33 31 2e 2c 2a 27     OLIFC@>;8631.,*'
     30c:	25 23 21 1f 1d 1b 19 17 15 13 12 10 0f 0d 0c 0a     %#!.............
     31c:	09 08 07 06 05 04 03 03 02 01 01 00 00 00 00 00     ................
     32c:	00 00 00 00 00 00 01 01 02 03 03 04 05 06 07 08     ................
     33c:	09 0a 0c 0d 0f 10 12 13 15 17 19 1b 1d 1f 21 23     ..............!#
     34c:	25 27 2a 2c 2e 31 33 36 38 3b 3e 40 43 46 49 4c     %'*,.1368;>@CFIL
     35c:	4f 51 54 57 5a 5d 60 63 67 6a 6d 70 73 76 79 7c     OQTWZ]`cgjmpsvy|

0000036c <sine>:
     36c:	80 83 86 89 8c 8f 92 95 98 9c 9f a2 a5 a8 ab ae     ................
     37c:	b0 b3 b6 b9 bc bf c1 c4 c7 c9 cc ce d1 d3 d5 d8     ................
     38c:	da dc de e0 e2 e4 e6 e8 ea ec ed ef f0 f2 f3 f5     ................
     39c:	f6 f7 f8 f9 fa fb fc fc fd fe fe ff ff ff ff ff     ................
     3ac:	ff ff ff ff ff ff fe fe fd fc fc fb fa f9 f8 f7     ................
     3bc:	f6 f5 f3 f2 f0 ef ed ec ea e8 e6 e4 e2 e0 de dc     ................
     3cc:	da d8 d5 d3 d1 ce cc c9 c7 c4 c1 bf bc b9 b6 b3     ................
     3dc:	b0 ae ab a8 a5 a2 9f 9c 98 95 92 8f 8c 89 86 83     ................
     3ec:	80 7c 79 76 73 70 6d 6a 67 63 60 5d 5a 57 54 51     .|yvspmjgc`]ZWTQ
     3fc:	4f 4c 49 46 43 40 3e 3b 38 36 33 31 2e 2c 2a 27     OLIFC@>;8631.,*'
     40c:	25 23 21 1f 1d 1b 19 17 15 13 12 10 0f 0d 0c 0a     %#!.............
     41c:	09 08 07 06 05 04 03 03 02 01 01 00 00 00 00 00     ................
     42c:	00 00 00 00 00 00 01 01 02 03 03 04 05 06 07 08     ................
     43c:	09 0a 0c 0d 0f 10 12 13 15 17 19 1b 1d 1f 21 23     ..............!#
     44c:	25 27 2a 2c 2e 31 33 36 38 3b 3e 40 43 46 49 4c     %'*,.1368;>@CFIL
     45c:	4f 51 54 57 5a 5d 60 63 67 6a 6d 70 73 76 79 7c     OQTWZ]`cgjmpsvy|

0000046c <sine1>:
     46c:	00 05 09 0e 13 17 1c 21 25 2a 2f 33 38 3c 41 46     .......!%*/38<AF
     47c:	4a 4f 53 57 5c 60 64 69 6d 71 75 7a 7e 82 86 8a     JOSW\`dimquz~...
     48c:	8e 92 95 99 9d a1 a4 a8 ab af b2 b5 b9 bc bf c2     ................
     49c:	c5 c8 cb ce d0 d3 d6 d8 db dd df e2 e4 e6 e8 ea     ................
     4ac:	ec ed ef f1 f2 f4 f5 f6 f7 f8 f9 fa fb fc fd fd     ................
     4bc:	fe fe ff ff ff ff ff ff ff fe fe fe fd fc fc fb     ................
     4cc:	fa f9 f8 f7 f6 f4 f3 f2 f0 ee ed eb e9 e7 e5 e3     ................
     4dc:	e1 df dc da d7 d5 d2 d0 cd ca c7 c4 c1 be bb b8     ................
     4ec:	b4 b1 ae aa a7 a3 9f 9c 98 94 90 8c 88 84 80 7c     ...............|
     4fc:	78 74 70 6c 67 63 5f 5a 56 51 4d 49 44 3f 3b 36     xtplgc_ZVQMID?;6
     50c:	32 2d 29 24 1f 1b 16 11 0d 08 03 fe fa f5 f0 ec     2-)$............
     51c:	e7 e2 de d9 d4 d0 cb c7 c2 bd b9 b4 b0 ac a7 a3     ................
     52c:	9e 9a 96 92 8d 89 85 81 7d 79 75 71 6d 69 66 62     ........}yuqmifb
     53c:	5e 5b 57 54 50 4d 49 46 43 40 3d 3a 37 34 31 2f     ^[WTPMIFC@=:741/
     54c:	2c 29 27 24 22 20 1e 1c 19 18 16 14 12 10 0f 0d     ,)'$" ..........
     55c:	0c 0b 09 08 07 06 05 04 04 03 03 02 02 01 01 01     ................

0000056c <Timer_Value>:
     56c:	00 00 24 f4 73 cb 63 ae 97 98 a2 87 12 7a f9 6e     ..$.s.c......z.n
     57c:	ba 65 e6 5d 31 57 61 51 4b 4c ce 47 d1 43 3f 40     .e.]1WaQKL.G.C?@
     58c:	09 3d 21 3a 7d 37 13 35 dd 32 d4 30 f3 2e 36 2d     .=!:}7.5.2.0..6-
     59c:	99 2b 18 2a b1 28 61 27 26 26 fe 24 e7 23 e1 22     .+.*.(a'&&.$.#."
     5ac:	e9 21 fe 20 20 20 4d 1f 85 1e c6 1d 10 1d 63 1c     .!.   M.......c.
     5bc:	be 1b 20 1b 89 1a f9 19 6e 19 ea 18 6a 18 ef 17     .. .....n...j...
     5cc:	7a 17 08 17 9b 16 32 16 cc 15 6a 15 0c 15 b1 14     z.....2...j.....
     5dc:	58 14 03 14 b0 13 60 13 13 13 c8 12 7f 12 38 12     X.....`.......8.
     5ec:	f4 11 b1 11 70 11 31 11 f4 10 b9 10 7f 10 47 10     ....p.1.......G.
     5fc:	10 10 da 0f a6 0f 74 0f 42 0f 12 0f e3 0e b5 0e     ......t.B.......
     60c:	88 0e 5c 0e 32 0e 08 0e df 0d b7 0d 90 0d 6a 0d     ..\.2.........j.
     61c:	45 0d 20 0d fc 0c d9 0c b7 0c 96 0c 75 0c 55 0c     E. .........u.U.
     62c:	35 0c 16 0c f8 0b da 0b bd 0b a0 0b 84 0b 69 0b     5.............i.
     63c:	4e 0b 33 0b 19 0b ff 0a e6 0a cd 0a b5 0a 9d 0a     N.3.............
     64c:	86 0a 6f 0a 58 0a 42 0a 2c 0a 17 0a 01 0a ed 09     ..o.X.B.,.......
     65c:	d8 09 c4 09 b0 09 9d 09 89 09 76 09 64 09 51 09     ..........v.d.Q.
     66c:	3f 09 2e 09 1c 09 0b 09 fa 08 e9 08 d8 08 c8 08     ?...............
     67c:	b8 08 a8 08 99 08 89 08 7a 08 6b 08 5c 08 4e 08     ........z.k.\.N.
     68c:	3f 08 31 08 23 08 16 08 08 08 fa 07 ed 07 e0 07     ?.1.#...........
     69c:	d3 07 c6 07 ba 07 ad 07 a1 07 95 07 89 07 7d 07     ..............}.
     6ac:	71 07 66 07 5b 07 4f 07 44 07 39 07 2e 07 23 07     q.f.[.O.D.9...#.
     6bc:	19 07 0e 07 04 07 fa 06 f0 06 e6 06 dc 06 d2 06     ................
     6cc:	c8 06 bf 06 b5 06 ac 06 a2 06 99 06 90 06 87 06     ................
     6dc:	7e 06 75 06 6d 06 64 06 5c 06 53 06 4b 06 43 06     ~.u.m.d.\.S.K.C.
     6ec:	3a 06 32 06 2a 06 22 06 35 0c 25 0c 16 0c 07 0c     :.2.*.".5.%.....
     6fc:	f8 0b e9 0b da 0b cb 0b bd 0b ae 0b a0 0b 92 0b     ................
     70c:	84 0b 76 0b 69 0b 5b 0b 4e 0b 40 0b 33 0b 26 0b     ..v.i.[.N.@.3.&.
     71c:	19 0b 0c 0b ff 0a f3 0a e6 0a da 0a cd 0a c1 0a     ................
     72c:	b5 0a a9 0a 9d 0a 92 0a 86 0a 7a 0a 6f 0a 64 0a     ..........z.o.d.
     73c:	58 0a 4d 0a 42 0a 37 0a 2c 0a 21 0a 17 0a 0c 0a     X.M.B.7.,.!.....
     74c:	01 0a f7 09 ed 09 e2 09 d8 09 ce 09 c4 09 ba 09     ................
     75c:	b0 09 a6 09 9d 09 93 09 89 09 80 09 76 09 6d 09     ............v.m.
     76c:	64 09 5b 09 51 09 48 09 3f 09 36 09 2e 09 25 09     d.[.Q.H.?.6...%.
     77c:	1c 09 13 09 0b 09 02 09 fa 08 f1 08 e9 08 e1 08     ................
     78c:	d8 08 d0 08 c8 08 c0 08 b8 08 b0 08 a8 08 a0 08     ................
     79c:	99 08 91 08 89 08 82 08 7a 08 73 08 6b 08 64 08     ........z.s.k.d.
     7ac:	5c 08 55 08 4e 08 47 08 3f 08 38 08 31 08 2a 08     \.U.N.G.?.8.1.*.
     7bc:	23 08 1c 08 16 08 0f 08 08 08 01 08 fa 07 f4 07     #...............
     7cc:	ed 07 e7 07 e0 07 da 07 d3 07 cd 07 c6 07 c0 07     ................
     7dc:	ba 07 b4 07 ad 07 a7 07 a1 07 9b 07 95 07 8f 07     ................
     7ec:	89 07 83 07 7d 07 77 07 71 07 6c 07 66 07 60 07     ....}.w.q.l.f.`.
     7fc:	5b 07 55 07 4f 07 4a 07 44 07 3f 07 39 07 34 07     [.U.O.J.D.?.9.4.
     80c:	2e 07 29 07 23 07 1e 07 19 07 14 07 0e 07 09 07     ..).#...........
     81c:	04 07 ff 06 fa 06 f5 06 f0 06 eb 06 e6 06 e1 06     ................
     82c:	dc 06 d7 06 d2 06 cd 06 c8 06 c3 06 bf 06 ba 06     ................
     83c:	b5 06 b0 06 ac 06 a7 06 a2 06 9e 06 99 06 95 06     ................
     84c:	90 06 8c 06 87 06 83 06 7e 06 7a 06 75 06 71 06     ........~.z.u.q.
     85c:	6d 06 68 06 64 06 60 06 5c 06 57 06 53 06 4f 06     m.h.d.`.\.W.S.O.
     86c:	4b 06 47 06 43 06 3e 06 3a 06 36 06 32 06 2e 06     K.G.C.>.:.6.2...
     87c:	2a 06 26 06 22 06 1e 06 35 0c 2d 0c 25 0c 1e 0c     *.&."...5.-.%...
     88c:	16 0c 0e 0c 07 0c ff 0b f8 0b f0 0b e9 0b e1 0b     ................
     89c:	da 0b d3 0b cb 0b c4 0b bd 0b b6 0b ae 0b a7 0b     ................
     8ac:	a0 0b 99 0b 92 0b 8b 0b 84 0b 7d 0b 76 0b 6f 0b     ..........}.v.o.
     8bc:	69 0b 62 0b 5b 0b 54 0b 4e 0b 47 0b 40 0b 3a 0b     i.b.[.T.N.G.@.:.
     8cc:	33 0b 2c 0b 26 0b 1f 0b 19 0b 12 0b 0c 0b 06 0b     3.,.&...........
     8dc:	ff 0a f9 0a f3 0a ec 0a e6 0a e0 0a da 0a d4 0a     ................
     8ec:	cd 0a c7 0a c1 0a bb 0a b5 0a af 0a a9 0a a3 0a     ................
     8fc:	9d 0a 97 0a 92 0a 8c 0a 86 0a 80 0a 7a 0a 75 0a     ............z.u.
     90c:	6f 0a 69 0a 64 0a 5e 0a 58 0a 53 0a 4d 0a 48 0a     o.i.d.^.X.S.M.H.
     91c:	42 0a 3d 0a 37 0a 32 0a 2c 0a 27 0a 21 0a 1c 0a     B.=.7.2.,.'.!...
     92c:	17 0a 11 0a 0c 0a 07 0a 01 0a fc 09 f7 09 f2 09     ................
     93c:	ed 09 e7 09 e2 09 dd 09 d8 09 d3 09 ce 09 c9 09     ................
     94c:	c4 09 bf 09 ba 09 b5 09 b0 09 ab 09 a6 09 a1 09     ................
     95c:	9d 09 98 09 93 09 8e 09 89 09 85 09 80 09 7b 09     ..............{.
     96c:	76 09 72 09 6d 09 68 09 64 09 5f 09 5b 09 56 09     v.r.m.h.d._.[.V.
     97c:	51 09 4d 09 48 09 44 09 3f 09 3b 09 36 09 32 09     Q.M.H.D.?.;.6.2.
     98c:	2e 09 29 09 25 09 20 09 1c 09 18 09 13 09 0f 09     ..).%. .........
     99c:	0b 09 07 09 02 09 fe 08 fa 08 f6 08 f1 08 ed 08     ................
     9ac:	e9 08 e5 08 e1 08 dd 08 d8 08 d4 08 d0 08 cc 08     ................
     9bc:	c8 08 c4 08 c0 08 bc 08 b8 08 b4 08 b0 08 ac 08     ................
     9cc:	a8 08 a4 08 a0 08 9d 08 99 08 95 08 91 08 8d 08     ................
     9dc:	89 08 86 08 82 08 7e 08 7a 08 76 08 73 08 6f 08     ......~.z.v.s.o.
     9ec:	6b 08 67 08 64 08 60 08 5c 08 59 08 55 08 51 08     k.g.d.`.\.Y.U.Q.
     9fc:	4e 08 4a 08 47 08 43 08 3f 08 3c 08 38 08 35 08     N.J.G.C.?.<.8.5.
     a0c:	31 08 2e 08 2a 08 27 08 47 10 40 10 39 10 32 10     1...*.'.G.@.9.2.
     a1c:	2b 10 24 10 1d 10 17 10 10 10 09 10 02 10 fc 0f     +.$.............
     a2c:	f5 0f ee 0f e8 0f e1 0f da 0f d4 0f cd 0f c7 0f     ................
     a3c:	c0 0f ba 0f b3 0f ad 0f a6 0f a0 0f 9a 0f 93 0f     ................
     a4c:	8d 0f 87 0f 80 0f 7a 0f 74 0f 6d 0f 67 0f 61 0f     ......z.t.m.g.a.
     a5c:	5b 0f 55 0f 4e 0f 48 0f 42 0f 3c 0f 36 0f 30 0f     [.U.N.H.B.<.6.0.
     a6c:	2a 0f 24 0f 1e 0f 18 0f 12 0f 0c 0f 06 0f 00 0f     *.$.............
     a7c:	fa 0e f4 0e ef 0e e9 0e e3 0e dd 0e d7 0e d2 0e     ................
     a8c:	cc 0e c6 0e c0 0e bb 0e b5 0e af 0e aa 0e a4 0e     ................
     a9c:	9f 0e 99 0e 93 0e 8e 0e 88 0e 83 0e 7d 0e 78 0e     ............}.x.
     aac:	72 0e 6d 0e 67 0e 62 0e 5c 0e 57 0e 52 0e 4c 0e     r.m.g.b.\.W.R.L.
     abc:	47 0e 42 0e 3c 0e 37 0e 32 0e 2c 0e 27 0e 22 0e     G.B.<.7.2.,.'.".
     acc:	1d 0e 18 0e 12 0e 0d 0e 08 0e 03 0e fe 0d f9 0d     ................
     adc:	f3 0d ee 0d e9 0d e4 0d df 0d da 0d d5 0d d0 0d     ................
     aec:	cb 0d c6 0d c1 0d bc 0d b7 0d b2 0d ad 0d a9 0d     ................
     afc:	a4 0d 9f 0d 9a 0d 95 0d 90 0d 8b 0d 87 0d 82 0d     ................
     b0c:	7d 0d 78 0d 74 0d 6f 0d 6a 0d 65 0d 61 0d 5c 0d     }.x.t.o.j.e.a.\.
     b1c:	57 0d 53 0d 4e 0d 49 0d 45 0d 40 0d 3c 0d 37 0d     W.S.N.I.E.@.<.7.
     b2c:	32 0d 2e 0d 29 0d 25 0d 20 0d 1c 0d 17 0d 13 0d     2...).%. .......
     b3c:	0e 0d 0a 0d 05 0d 01 0d fc 0c f8 0c f4 0c ef 0c     ................
     b4c:	eb 0c e7 0c e2 0c de 0c d9 0c d5 0c d1 0c cd 0c     ................
     b5c:	c8 0c c4 0c c0 0c bb 0c b7 0c b3 0c af 0c ab 0c     ................
     b6c:	a6 0c a2 0c 9e 0c 9a 0c 96 0c 92 0c 8d 0c 89 0c     ................
     b7c:	85 0c 81 0c 7d 0c 79 0c 75 0c 71 0c 6d 0c 69 0c     ....}.y.u.q.m.i.
     b8c:	65 0c 61 0c 5d 0c 59 0c 55 0c 51 0c 4d 0c 49 0c     e.a.].Y.U.Q.M.I.
     b9c:	45 0c 41 0c 3d 0c 39 0c 6a 18 62 18 5a 18 53 18     E.A.=.9.j.b.Z.S.
     bac:	4b 18 43 18 3b 18 34 18 2c 18 24 18 1d 18 15 18     K.C.;.4.,.$.....
     bbc:	0e 18 06 18 ff 17 f7 17 ef 17 e8 17 e0 17 d9 17     ................
     bcc:	d2 17 ca 17 c3 17 bb 17 b4 17 ad 17 a5 17 9e 17     ................
     bdc:	97 17 8f 17 88 17 81 17 7a 17 72 17 6b 17 64 17     ........z.r.k.d.
     bec:	5d 17 56 17 4f 17 47 17 40 17 39 17 32 17 2b 17     ].V.O.G.@.9.2.+.
     bfc:	24 17 1d 17 16 17 0f 17 08 17 01 17 fa 16 f3 16     $...............
     c0c:	ed 16 e6 16 df 16 d8 16 d1 16 ca 16 c4 16 bd 16     ................
     c1c:	b6 16 af 16 a8 16 a2 16 9b 16 94 16 8e 16 87 16     ................
     c2c:	80 16 7a 16 73 16 6d 16 66 16 5f 16 59 16 52 16     ..z.s.m.f._.Y.R.
     c3c:	4c 16 45 16 3f 16 38 16 32 16 2b 16 25 16 1f 16     L.E.?.8.2.+.%...
     c4c:	18 16 12 16 0b 16 05 16 ff 15 f8 15 f2 15 ec 15     ................
     c5c:	e5 15 df 15 d9 15 d3 15 cc 15 c6 15 c0 15 ba 15     ................
     c6c:	b4 15 ad 15 a7 15 a1 15 9b 15 95 15 8f 15 89 15     ................
     c7c:	83 15 7d 15 77 15 70 15 6a 15 64 15 5e 15 58 15     ..}.w.p.j.d.^.X.
     c8c:	53 15 4d 15 47 15 41 15 3b 15 35 15 2f 15 29 15     S.M.G.A.;.5./.).
     c9c:	23 15 1d 15 18 15 12 15 0c 15 06 15 00 15 fb 14     #...............
     cac:	f5 14 ef 14 e9 14 e4 14 de 14 d8 14 d2 14 cd 14     ................
     cbc:	c7 14 c1 14 bc 14 b6 14 b1 14 ab 14 a5 14 a0 14     ................
     ccc:	9a 14 95 14 8f 14 8a 14 84 14 7f 14 79 14 74 14     ............y.t.
     cdc:	6e 14 69 14 63 14 5e 14 58 14 53 14 4e 14 48 14     n.i.c.^.X.S.N.H.
     cec:	43 14 3d 14 38 14 33 14 2d 14 28 14 23 14 1d 14     C.=.8.3.-.(.#...
     cfc:	18 14 13 14 0d 14 08 14 03 14 fe 13 f8 13 f3 13     ................
     d0c:	ee 13 e9 13 e4 13 de 13 d9 13 d4 13 cf 13 ca 13     ................
     d1c:	c5 13 c0 13 bb 13 b5 13 b0 13 ab 13 a6 13 a1 13     ................
     d2c:	9c 13 97 13 92 13 8d 13 88 13                       ..........

00000d36 <__ctors_end>:
     d36:	11 24       	eor	r1, r1
     d38:	1f be       	out	0x3f, r1	; 63
     d3a:	cf ef       	ldi	r28, 0xFF	; 255
     d3c:	d0 e1       	ldi	r29, 0x10	; 16
     d3e:	de bf       	out	0x3e, r29	; 62
     d40:	cd bf       	out	0x3d, r28	; 61

00000d42 <__do_copy_data>:
     d42:	11 e0       	ldi	r17, 0x01	; 1
     d44:	a0 e0       	ldi	r26, 0x00	; 0
     d46:	b1 e0       	ldi	r27, 0x01	; 1
     d48:	e6 e3       	ldi	r30, 0x36	; 54
     d4a:	fc e2       	ldi	r31, 0x2C	; 44
     d4c:	00 e0       	ldi	r16, 0x00	; 0
     d4e:	0b bf       	out	0x3b, r16	; 59
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <__do_copy_data+0x14>
     d52:	07 90       	elpm	r0, Z+
     d54:	0d 92       	st	X+, r0
     d56:	a6 3c       	cpi	r26, 0xC6	; 198
     d58:	b1 07       	cpc	r27, r17
     d5a:	d9 f7       	brne	.-10     	; 0xd52 <__do_copy_data+0x10>

00000d5c <__do_clear_bss>:
     d5c:	11 e0       	ldi	r17, 0x01	; 1
     d5e:	a6 ec       	ldi	r26, 0xC6	; 198
     d60:	b1 e0       	ldi	r27, 0x01	; 1
     d62:	01 c0       	rjmp	.+2      	; 0xd66 <.do_clear_bss_start>

00000d64 <.do_clear_bss_loop>:
     d64:	1d 92       	st	X+, r1

00000d66 <.do_clear_bss_start>:
     d66:	a1 3f       	cpi	r26, 0xF1	; 241
     d68:	b1 07       	cpc	r27, r17
     d6a:	e1 f7       	brne	.-8      	; 0xd64 <.do_clear_bss_loop>
     d6c:	0e 94 79 0d 	call	0x1af2	; 0x1af2 <main>
     d70:	0c 94 19 16 	jmp	0x2c32	; 0x2c32 <_exit>

00000d74 <__bad_interrupt>:
     d74:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000d78 <a2dSingleSample>:
     d78:	35 98       	cbi	0x06, 5	; 6
     d7a:	08 95       	ret

00000d7c <a2dAutoTrigger>:
     d7c:	35 9a       	sbi	0x06, 5	; 6
     d7e:	08 95       	ret

00000d80 <a2dSet10bit>:
     d80:	3d 98       	cbi	0x07, 5	; 7
     d82:	08 95       	ret

00000d84 <a2dSet8bit>:
     d84:	3d 9a       	sbi	0x07, 5	; 7
     d86:	08 95       	ret

00000d88 <a2dTurnOn>:
     d88:	37 9a       	sbi	0x06, 7	; 6
     d8a:	08 95       	ret

00000d8c <a2dTurnOff>:
     d8c:	33 98       	cbi	0x06, 3	; 6
     d8e:	37 98       	cbi	0x06, 7	; 6
     d90:	08 95       	ret

00000d92 <a2dSetPrescaler>:
     d92:	96 b1       	in	r25, 0x06	; 6
     d94:	98 7f       	andi	r25, 0xF8	; 248
     d96:	89 2b       	or	r24, r25
     d98:	86 b9       	out	0x06, r24	; 6
     d9a:	08 95       	ret

00000d9c <a2dSetReference>:
     d9c:	97 b1       	in	r25, 0x07	; 7
     d9e:	82 95       	swap	r24
     da0:	88 0f       	add	r24, r24
     da2:	88 0f       	add	r24, r24
     da4:	80 7c       	andi	r24, 0xC0	; 192
     da6:	9f 73       	andi	r25, 0x3F	; 63
     da8:	98 2b       	or	r25, r24
     daa:	97 b9       	out	0x07, r25	; 7
     dac:	08 95       	ret

00000dae <a2dInit>:
     dae:	0e 94 c4 06 	call	0xd88	; 0xd88 <a2dTurnOn>
     db2:	0e 94 bc 06 	call	0xd78	; 0xd78 <a2dSingleSample>
     db6:	86 e0       	ldi	r24, 0x06	; 6
     db8:	0e 94 c9 06 	call	0xd92	; 0xd92 <a2dSetPrescaler>
     dbc:	81 e0       	ldi	r24, 0x01	; 1
     dbe:	0e 94 ce 06 	call	0xd9c	; 0xd9c <a2dSetReference>
     dc2:	0e 94 c0 06 	call	0xd80	; 0xd80 <a2dSet10bit>
     dc6:	10 92 d3 01 	sts	0x01D3, r1
     dca:	33 9a       	sbi	0x06, 3	; 6
     dcc:	78 94       	sei
     dce:	08 95       	ret

00000dd0 <a2dSetChannel>:
     dd0:	97 b1       	in	r25, 0x07	; 7
     dd2:	8f 71       	andi	r24, 0x1F	; 31
     dd4:	90 7e       	andi	r25, 0xE0	; 224
     dd6:	98 2b       	or	r25, r24
     dd8:	97 b9       	out	0x07, r25	; 7
     dda:	08 95       	ret

00000ddc <a2dStartConvert>:
     ddc:	34 9a       	sbi	0x06, 4	; 6
     dde:	36 9a       	sbi	0x06, 6	; 6
     de0:	08 95       	ret

00000de2 <a2dIsComplete>:
     de2:	86 b1       	in	r24, 0x06	; 6
     de4:	80 74       	andi	r24, 0x40	; 64
     de6:	08 95       	ret

00000de8 <a2dConvert10bit>:
     de8:	10 92 d3 01 	sts	0x01D3, r1
     dec:	97 b1       	in	r25, 0x07	; 7
     dee:	8f 71       	andi	r24, 0x1F	; 31
     df0:	90 7e       	andi	r25, 0xE0	; 224
     df2:	98 2b       	or	r25, r24
     df4:	97 b9       	out	0x07, r25	; 7
     df6:	34 9a       	sbi	0x06, 4	; 6
     df8:	36 9a       	sbi	0x06, 6	; 6
     dfa:	80 91 d3 01 	lds	r24, 0x01D3
     dfe:	88 23       	and	r24, r24
     e00:	e1 f3       	breq	.-8      	; 0xdfa <a2dConvert10bit+0x12>
     e02:	24 b1       	in	r18, 0x04	; 4
     e04:	35 b1       	in	r19, 0x05	; 5
     e06:	82 2f       	mov	r24, r18
     e08:	93 2f       	mov	r25, r19
     e0a:	08 95       	ret

00000e0c <a2dConvert8bit>:
     e0c:	0e 94 f4 06 	call	0xde8	; 0xde8 <a2dConvert10bit>
     e10:	96 95       	lsr	r25
     e12:	87 95       	ror	r24
     e14:	96 95       	lsr	r25
     e16:	87 95       	ror	r24
     e18:	08 95       	ret

00000e1a <__vector_21>:
     e1a:	1f 92       	push	r1
     e1c:	0f 92       	push	r0
     e1e:	0f b6       	in	r0, 0x3f	; 63
     e20:	0f 92       	push	r0
     e22:	11 24       	eor	r1, r1
     e24:	8f 93       	push	r24
     e26:	81 e0       	ldi	r24, 0x01	; 1
     e28:	80 93 d3 01 	sts	0x01D3, r24
     e2c:	8f 91       	pop	r24
     e2e:	0f 90       	pop	r0
     e30:	0f be       	out	0x3f, r0	; 63
     e32:	0f 90       	pop	r0
     e34:	1f 90       	pop	r1
     e36:	18 95       	reti

00000e38 <HW_init>:
	//***************************************************************************************
	//***************************************************************************************	
	void HW_init(void)
	{
		//--------- Initial all inputs/outputs & Start values
		BUZER_init();						// output & OFF
     e38:	a7 9a       	sbi	0x14, 7	; 20
     e3a:	af 98       	cbi	0x15, 7	; 21
		
		GLED_init();						// output & OFF
     e3c:	a5 9a       	sbi	0x14, 5	; 20
     e3e:	ad 98       	cbi	0x15, 5	; 21
		RLED_init();						// output & OFF
     e40:	a6 9a       	sbi	0x14, 6	; 20
     e42:	ae 98       	cbi	0x15, 6	; 21
	}	//HW_init
     e44:	08 95       	ret

00000e46 <BUZZER>:
	
	void BUZZER(unsigned char times)
	{
		unsigned char 				i;

		for(i=0; i<times; i++)
     e46:	88 23       	and	r24, r24
     e48:	91 f0       	breq	.+36     	; 0xe6e <BUZZER+0x28>
     e4a:	90 e0       	ldi	r25, 0x00	; 0
		{
			BUZER(ON);
     e4c:	af 9a       	sbi	0x15, 7	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e4e:	e7 e9       	ldi	r30, 0x97	; 151
     e50:	fa e3       	ldi	r31, 0x3A	; 58
     e52:	31 97       	sbiw	r30, 0x01	; 1
     e54:	f1 f7       	brne	.-4      	; 0xe52 <BUZZER+0xc>
     e56:	00 c0       	rjmp	.+0      	; 0xe58 <BUZZER+0x12>
     e58:	00 00       	nop
				_delay_ms(SIGNAL_ON_DUR *30);
			
			BUZER(OFF);
     e5a:	af 98       	cbi	0x15, 7	; 21
     e5c:	e7 ec       	ldi	r30, 0xC7	; 199
     e5e:	ff ea       	ldi	r31, 0xAF	; 175
     e60:	31 97       	sbiw	r30, 0x01	; 1
     e62:	f1 f7       	brne	.-4      	; 0xe60 <BUZZER+0x1a>
     e64:	00 c0       	rjmp	.+0      	; 0xe66 <BUZZER+0x20>
     e66:	00 00       	nop
	
	void BUZZER(unsigned char times)
	{
		unsigned char 				i;

		for(i=0; i<times; i++)
     e68:	9f 5f       	subi	r25, 0xFF	; 255
     e6a:	98 17       	cp	r25, r24
     e6c:	78 f3       	brcs	.-34     	; 0xe4c <BUZZER+0x6>
     e6e:	08 95       	ret

00000e70 <pinChange>:

#include<util/delay.h>

void pinChange(int a, int b)
{
	if(b == 0)
     e70:	61 15       	cp	r22, r1
     e72:	71 05       	cpc	r23, r1
     e74:	09 f0       	breq	.+2      	; 0xe78 <pinChange+0x8>
     e76:	a0 c0       	rjmp	.+320    	; 0xfb8 <pinChange+0x148>
	{
		if(a == eS_PORTA0)
     e78:	00 97       	sbiw	r24, 0x00	; 0
     e7a:	11 f4       	brne	.+4      	; 0xe80 <pinChange+0x10>
		  PORTA &= ~(1<<PA0);
     e7c:	d8 98       	cbi	0x1b, 0	; 27
     e7e:	08 95       	ret
		else if(a == eS_PORTA1)
     e80:	81 30       	cpi	r24, 0x01	; 1
     e82:	91 05       	cpc	r25, r1
     e84:	11 f4       	brne	.+4      	; 0xe8a <pinChange+0x1a>
		  PORTA &= ~(1<<PA1); 
     e86:	d9 98       	cbi	0x1b, 1	; 27
     e88:	08 95       	ret
		else if(a == eS_PORTA2)
     e8a:	82 30       	cpi	r24, 0x02	; 2
     e8c:	91 05       	cpc	r25, r1
     e8e:	11 f4       	brne	.+4      	; 0xe94 <pinChange+0x24>
		  PORTA &= ~(1<<PA2);
     e90:	da 98       	cbi	0x1b, 2	; 27
     e92:	08 95       	ret
		else if(a == eS_PORTA3)
     e94:	83 30       	cpi	r24, 0x03	; 3
     e96:	91 05       	cpc	r25, r1
     e98:	11 f4       	brne	.+4      	; 0xe9e <pinChange+0x2e>
		  PORTA &= ~(1<<PA3); 
     e9a:	db 98       	cbi	0x1b, 3	; 27
     e9c:	08 95       	ret
		else if(a == eS_PORTA4)
     e9e:	84 30       	cpi	r24, 0x04	; 4
     ea0:	91 05       	cpc	r25, r1
     ea2:	11 f4       	brne	.+4      	; 0xea8 <pinChange+0x38>
		  PORTA &= ~(1<<PA4); 
     ea4:	dc 98       	cbi	0x1b, 4	; 27
     ea6:	08 95       	ret
		else if(a == eS_PORTA5)
     ea8:	85 30       	cpi	r24, 0x05	; 5
     eaa:	91 05       	cpc	r25, r1
     eac:	11 f4       	brne	.+4      	; 0xeb2 <pinChange+0x42>
		  PORTA &= ~(1<<PA5); 
     eae:	dd 98       	cbi	0x1b, 5	; 27
     eb0:	08 95       	ret
		else if(a == eS_PORTA6)
     eb2:	86 30       	cpi	r24, 0x06	; 6
     eb4:	91 05       	cpc	r25, r1
     eb6:	11 f4       	brne	.+4      	; 0xebc <pinChange+0x4c>
		  PORTA &= ~(1<<PA6);  
     eb8:	de 98       	cbi	0x1b, 6	; 27
     eba:	08 95       	ret
		else if(a == eS_PORTA7)
     ebc:	87 30       	cpi	r24, 0x07	; 7
     ebe:	91 05       	cpc	r25, r1
     ec0:	11 f4       	brne	.+4      	; 0xec6 <pinChange+0x56>
		  PORTA &= ~(1<<PA7);
     ec2:	df 98       	cbi	0x1b, 7	; 27
     ec4:	08 95       	ret
		else if(a == eS_PORTB0)
     ec6:	8a 30       	cpi	r24, 0x0A	; 10
     ec8:	91 05       	cpc	r25, r1
     eca:	11 f4       	brne	.+4      	; 0xed0 <pinChange+0x60>
		  PORTB &= ~(1<<PB0);  
     ecc:	c0 98       	cbi	0x18, 0	; 24
     ece:	08 95       	ret
		else if(a == eS_PORTB1)
     ed0:	8b 30       	cpi	r24, 0x0B	; 11
     ed2:	91 05       	cpc	r25, r1
     ed4:	11 f4       	brne	.+4      	; 0xeda <pinChange+0x6a>
		  PORTB &= ~(1<<PB1);
     ed6:	c1 98       	cbi	0x18, 1	; 24
     ed8:	08 95       	ret
		else if(a == eS_PORTB2)
     eda:	8c 30       	cpi	r24, 0x0C	; 12
     edc:	91 05       	cpc	r25, r1
     ede:	11 f4       	brne	.+4      	; 0xee4 <pinChange+0x74>
		  PORTB &= ~(1<<PB2);  
     ee0:	c2 98       	cbi	0x18, 2	; 24
     ee2:	08 95       	ret
		else if(a == eS_PORTB3)
     ee4:	8d 30       	cpi	r24, 0x0D	; 13
     ee6:	91 05       	cpc	r25, r1
     ee8:	11 f4       	brne	.+4      	; 0xeee <pinChange+0x7e>
		  PORTB &= ~(1<<PB3);  
     eea:	c3 98       	cbi	0x18, 3	; 24
     eec:	08 95       	ret
		else if(a == eS_PORTB4)
     eee:	8e 30       	cpi	r24, 0x0E	; 14
     ef0:	91 05       	cpc	r25, r1
     ef2:	11 f4       	brne	.+4      	; 0xef8 <pinChange+0x88>
		  PORTB &= ~(1<<PB4);  
     ef4:	c4 98       	cbi	0x18, 4	; 24
     ef6:	08 95       	ret
		else if(a == eS_PORTB5)
     ef8:	8f 30       	cpi	r24, 0x0F	; 15
     efa:	91 05       	cpc	r25, r1
     efc:	11 f4       	brne	.+4      	; 0xf02 <pinChange+0x92>
		  PORTB &= ~(1<<PB5);  
     efe:	c5 98       	cbi	0x18, 5	; 24
     f00:	08 95       	ret
		else if(a == eS_PORTB6)
     f02:	80 31       	cpi	r24, 0x10	; 16
     f04:	91 05       	cpc	r25, r1
     f06:	11 f4       	brne	.+4      	; 0xf0c <pinChange+0x9c>
		  PORTB &= ~(1<<PB6);  
     f08:	c6 98       	cbi	0x18, 6	; 24
     f0a:	08 95       	ret
		else if(a == eS_PORTB7)
     f0c:	81 31       	cpi	r24, 0x11	; 17
     f0e:	91 05       	cpc	r25, r1
     f10:	11 f4       	brne	.+4      	; 0xf16 <pinChange+0xa6>
		  PORTB &= ~(1<<PB7);
     f12:	c7 98       	cbi	0x18, 7	; 24
     f14:	08 95       	ret
		else if(a == eS_PORTC0)
     f16:	84 31       	cpi	r24, 0x14	; 20
     f18:	91 05       	cpc	r25, r1
     f1a:	11 f4       	brne	.+4      	; 0xf20 <pinChange+0xb0>
		  PORTC &= ~(1<<PC0);   
     f1c:	a8 98       	cbi	0x15, 0	; 21
     f1e:	08 95       	ret
		else if(a == eS_PORTC1)
     f20:	85 31       	cpi	r24, 0x15	; 21
     f22:	91 05       	cpc	r25, r1
     f24:	11 f4       	brne	.+4      	; 0xf2a <pinChange+0xba>
		  PORTC &= ~(1<<PC1); 
     f26:	a9 98       	cbi	0x15, 1	; 21
     f28:	08 95       	ret
		else if(a == eS_PORTC2)
     f2a:	86 31       	cpi	r24, 0x16	; 22
     f2c:	91 05       	cpc	r25, r1
     f2e:	11 f4       	brne	.+4      	; 0xf34 <pinChange+0xc4>
		  PORTC &= ~(1<<PC2);
     f30:	aa 98       	cbi	0x15, 2	; 21
     f32:	08 95       	ret
		else if(a == eS_PORTC3)
     f34:	87 31       	cpi	r24, 0x17	; 23
     f36:	91 05       	cpc	r25, r1
     f38:	11 f4       	brne	.+4      	; 0xf3e <pinChange+0xce>
		  PORTC &= ~(1<<PC3);   
     f3a:	ab 98       	cbi	0x15, 3	; 21
     f3c:	08 95       	ret
		else if(a == eS_PORTC4)
     f3e:	88 31       	cpi	r24, 0x18	; 24
     f40:	91 05       	cpc	r25, r1
     f42:	11 f4       	brne	.+4      	; 0xf48 <pinChange+0xd8>
		  PORTC &= ~(1<<PC4);  
     f44:	ac 98       	cbi	0x15, 4	; 21
     f46:	08 95       	ret
		else if(a == eS_PORTC5)
     f48:	89 31       	cpi	r24, 0x19	; 25
     f4a:	91 05       	cpc	r25, r1
     f4c:	11 f4       	brne	.+4      	; 0xf52 <pinChange+0xe2>
		  PORTC &= ~(1<<PC5);  
     f4e:	ad 98       	cbi	0x15, 5	; 21
     f50:	08 95       	ret
        else if(a == eS_PORTC6)
     f52:	8a 31       	cpi	r24, 0x1A	; 26
     f54:	91 05       	cpc	r25, r1
     f56:	11 f4       	brne	.+4      	; 0xf5c <pinChange+0xec>
          PORTC &= ~(1<<PC6);		
     f58:	ae 98       	cbi	0x15, 6	; 21
     f5a:	08 95       	ret
		else if(a == eS_PORTC7)
     f5c:	8b 31       	cpi	r24, 0x1B	; 27
     f5e:	91 05       	cpc	r25, r1
     f60:	11 f4       	brne	.+4      	; 0xf66 <pinChange+0xf6>
		  PORTC &= ~(1<<PC7);
     f62:	af 98       	cbi	0x15, 7	; 21
     f64:	08 95       	ret
		else if(a == eS_PORTD0)
     f66:	8e 31       	cpi	r24, 0x1E	; 30
     f68:	91 05       	cpc	r25, r1
     f6a:	11 f4       	brne	.+4      	; 0xf70 <pinChange+0x100>
		  PORTD &= ~(1<<PD0);
     f6c:	90 98       	cbi	0x12, 0	; 18
     f6e:	08 95       	ret
		else if(a == eS_PORTD1)
     f70:	8f 31       	cpi	r24, 0x1F	; 31
     f72:	91 05       	cpc	r25, r1
     f74:	11 f4       	brne	.+4      	; 0xf7a <pinChange+0x10a>
		  PORTD &= ~(1<<PD1);  
     f76:	91 98       	cbi	0x12, 1	; 18
     f78:	08 95       	ret
		else if(a == eS_PORTD2)
     f7a:	80 32       	cpi	r24, 0x20	; 32
     f7c:	91 05       	cpc	r25, r1
     f7e:	11 f4       	brne	.+4      	; 0xf84 <pinChange+0x114>
		  PORTD &= ~(1<<PD2);
     f80:	92 98       	cbi	0x12, 2	; 18
     f82:	08 95       	ret
		else if(a == eS_PORTD3)
     f84:	81 32       	cpi	r24, 0x21	; 33
     f86:	91 05       	cpc	r25, r1
     f88:	11 f4       	brne	.+4      	; 0xf8e <pinChange+0x11e>
		  PORTD &= ~(1<<PD3);
     f8a:	93 98       	cbi	0x12, 3	; 18
     f8c:	08 95       	ret
		else if(a == eS_PORTD4)
     f8e:	82 32       	cpi	r24, 0x22	; 34
     f90:	91 05       	cpc	r25, r1
     f92:	11 f4       	brne	.+4      	; 0xf98 <pinChange+0x128>
		  PORTD &= ~(1<<PD4);
     f94:	94 98       	cbi	0x12, 4	; 18
     f96:	08 95       	ret
		else if(a == eS_PORTD5)
     f98:	83 32       	cpi	r24, 0x23	; 35
     f9a:	91 05       	cpc	r25, r1
     f9c:	11 f4       	brne	.+4      	; 0xfa2 <pinChange+0x132>
		  PORTD &= ~(1<<PD5);
     f9e:	95 98       	cbi	0x12, 5	; 18
     fa0:	08 95       	ret
		else if(a == eS_PORTD6)
     fa2:	84 32       	cpi	r24, 0x24	; 36
     fa4:	91 05       	cpc	r25, r1
     fa6:	11 f4       	brne	.+4      	; 0xfac <pinChange+0x13c>
		  PORTD &= ~(1<<PD6);   
     fa8:	96 98       	cbi	0x12, 6	; 18
     faa:	08 95       	ret
		else if(a == eS_PORTD7)
     fac:	85 32       	cpi	r24, 0x25	; 37
     fae:	91 05       	cpc	r25, r1
     fb0:	09 f0       	breq	.+2      	; 0xfb4 <pinChange+0x144>
     fb2:	a0 c0       	rjmp	.+320    	; 0x10f4 <pinChange+0x284>
		  PORTD &= ~(1<<PD7);           
     fb4:	97 98       	cbi	0x12, 7	; 18
     fb6:	08 95       	ret
	}
	else
	{
		if(a == eS_PORTA0)
     fb8:	00 97       	sbiw	r24, 0x00	; 0
     fba:	11 f4       	brne	.+4      	; 0xfc0 <pinChange+0x150>
		  PORTA |= (1<<PA0);
     fbc:	d8 9a       	sbi	0x1b, 0	; 27
     fbe:	08 95       	ret
		else if(a == eS_PORTA1)
     fc0:	81 30       	cpi	r24, 0x01	; 1
     fc2:	91 05       	cpc	r25, r1
     fc4:	11 f4       	brne	.+4      	; 0xfca <pinChange+0x15a>
		  PORTA |= (1<<PA1);
     fc6:	d9 9a       	sbi	0x1b, 1	; 27
     fc8:	08 95       	ret
		else if(a == eS_PORTA2)
     fca:	82 30       	cpi	r24, 0x02	; 2
     fcc:	91 05       	cpc	r25, r1
     fce:	11 f4       	brne	.+4      	; 0xfd4 <pinChange+0x164>
		  PORTA |= (1<<PA2);
     fd0:	da 9a       	sbi	0x1b, 2	; 27
     fd2:	08 95       	ret
		else if(a == eS_PORTA3)
     fd4:	83 30       	cpi	r24, 0x03	; 3
     fd6:	91 05       	cpc	r25, r1
     fd8:	11 f4       	brne	.+4      	; 0xfde <pinChange+0x16e>
		  PORTA |= (1<<PA3);
     fda:	db 9a       	sbi	0x1b, 3	; 27
     fdc:	08 95       	ret
		else if(a == eS_PORTA4)
     fde:	84 30       	cpi	r24, 0x04	; 4
     fe0:	91 05       	cpc	r25, r1
     fe2:	11 f4       	brne	.+4      	; 0xfe8 <pinChange+0x178>
		  PORTA |= (1<<PA4);
     fe4:	dc 9a       	sbi	0x1b, 4	; 27
     fe6:	08 95       	ret
		else if(a == eS_PORTA5)
     fe8:	85 30       	cpi	r24, 0x05	; 5
     fea:	91 05       	cpc	r25, r1
     fec:	11 f4       	brne	.+4      	; 0xff2 <pinChange+0x182>
		  PORTA |= (1<<PA5);
     fee:	dd 9a       	sbi	0x1b, 5	; 27
     ff0:	08 95       	ret
		else if(a == eS_PORTA6)
     ff2:	86 30       	cpi	r24, 0x06	; 6
     ff4:	91 05       	cpc	r25, r1
     ff6:	11 f4       	brne	.+4      	; 0xffc <pinChange+0x18c>
		  PORTA |= (1<<PA6);
     ff8:	de 9a       	sbi	0x1b, 6	; 27
     ffa:	08 95       	ret
		else if(a == eS_PORTA7)
     ffc:	87 30       	cpi	r24, 0x07	; 7
     ffe:	91 05       	cpc	r25, r1
    1000:	11 f4       	brne	.+4      	; 0x1006 <pinChange+0x196>
		  PORTA |= (1<<PA7);
    1002:	df 9a       	sbi	0x1b, 7	; 27
    1004:	08 95       	ret
		else if(a == eS_PORTB0)
    1006:	8a 30       	cpi	r24, 0x0A	; 10
    1008:	91 05       	cpc	r25, r1
    100a:	11 f4       	brne	.+4      	; 0x1010 <pinChange+0x1a0>
	  	  PORTB |= (1<<PB0);
    100c:	c0 9a       	sbi	0x18, 0	; 24
    100e:	08 95       	ret
		else if(a == eS_PORTB1)
    1010:	8b 30       	cpi	r24, 0x0B	; 11
    1012:	91 05       	cpc	r25, r1
    1014:	11 f4       	brne	.+4      	; 0x101a <pinChange+0x1aa>
		  PORTB |= (1<<PB1);
    1016:	c1 9a       	sbi	0x18, 1	; 24
    1018:	08 95       	ret
		else if(a == eS_PORTB2)
    101a:	8c 30       	cpi	r24, 0x0C	; 12
    101c:	91 05       	cpc	r25, r1
    101e:	11 f4       	brne	.+4      	; 0x1024 <pinChange+0x1b4>
		  PORTB |= (1<<PB2);
    1020:	c2 9a       	sbi	0x18, 2	; 24
    1022:	08 95       	ret
		else if(a == eS_PORTB3)
    1024:	8d 30       	cpi	r24, 0x0D	; 13
    1026:	91 05       	cpc	r25, r1
    1028:	11 f4       	brne	.+4      	; 0x102e <pinChange+0x1be>
		  PORTB |= (1<<PB3);
    102a:	c3 9a       	sbi	0x18, 3	; 24
    102c:	08 95       	ret
		else if(a == eS_PORTB4)
    102e:	8e 30       	cpi	r24, 0x0E	; 14
    1030:	91 05       	cpc	r25, r1
    1032:	11 f4       	brne	.+4      	; 0x1038 <pinChange+0x1c8>
		  PORTB |= (1<<PB4);
    1034:	c4 9a       	sbi	0x18, 4	; 24
    1036:	08 95       	ret
		else if(a == eS_PORTB5)
    1038:	8f 30       	cpi	r24, 0x0F	; 15
    103a:	91 05       	cpc	r25, r1
    103c:	11 f4       	brne	.+4      	; 0x1042 <pinChange+0x1d2>
		  PORTB |= (1<<PB5);
    103e:	c5 9a       	sbi	0x18, 5	; 24
    1040:	08 95       	ret
		else if(a == eS_PORTB6)
    1042:	80 31       	cpi	r24, 0x10	; 16
    1044:	91 05       	cpc	r25, r1
    1046:	11 f4       	brne	.+4      	; 0x104c <pinChange+0x1dc>
		  PORTB |= (1<<PB6);
    1048:	c6 9a       	sbi	0x18, 6	; 24
    104a:	08 95       	ret
		else if(a == eS_PORTB7)
    104c:	81 31       	cpi	r24, 0x11	; 17
    104e:	91 05       	cpc	r25, r1
    1050:	11 f4       	brne	.+4      	; 0x1056 <pinChange+0x1e6>
		  PORTB |= (1<<PB7);
    1052:	c7 9a       	sbi	0x18, 7	; 24
    1054:	08 95       	ret
		else if(a == eS_PORTC0)
    1056:	84 31       	cpi	r24, 0x14	; 20
    1058:	91 05       	cpc	r25, r1
    105a:	11 f4       	brne	.+4      	; 0x1060 <pinChange+0x1f0>
		  PORTC |= (1<<PC0);
    105c:	a8 9a       	sbi	0x15, 0	; 21
    105e:	08 95       	ret
		else if(a == eS_PORTC1)
    1060:	85 31       	cpi	r24, 0x15	; 21
    1062:	91 05       	cpc	r25, r1
    1064:	11 f4       	brne	.+4      	; 0x106a <pinChange+0x1fa>
		  PORTC |= (1<<PC1);
    1066:	a9 9a       	sbi	0x15, 1	; 21
    1068:	08 95       	ret
		else if(a == eS_PORTC2)
    106a:	86 31       	cpi	r24, 0x16	; 22
    106c:	91 05       	cpc	r25, r1
    106e:	11 f4       	brne	.+4      	; 0x1074 <pinChange+0x204>
	  	  PORTC |= (1<<PC2);
    1070:	aa 9a       	sbi	0x15, 2	; 21
    1072:	08 95       	ret
		else if(a == eS_PORTC3)
    1074:	87 31       	cpi	r24, 0x17	; 23
    1076:	91 05       	cpc	r25, r1
    1078:	11 f4       	brne	.+4      	; 0x107e <pinChange+0x20e>
		  PORTC |= (1<<PC3);
    107a:	ab 9a       	sbi	0x15, 3	; 21
    107c:	08 95       	ret
		else if(a == eS_PORTC4)
    107e:	88 31       	cpi	r24, 0x18	; 24
    1080:	91 05       	cpc	r25, r1
    1082:	11 f4       	brne	.+4      	; 0x1088 <pinChange+0x218>
		  PORTC |= (1<<PC4);
    1084:	ac 9a       	sbi	0x15, 4	; 21
    1086:	08 95       	ret
		else if(a == eS_PORTC5)
    1088:	89 31       	cpi	r24, 0x19	; 25
    108a:	91 05       	cpc	r25, r1
    108c:	11 f4       	brne	.+4      	; 0x1092 <pinChange+0x222>
		  PORTC |= (1<<PC5);
    108e:	ad 9a       	sbi	0x15, 5	; 21
    1090:	08 95       	ret
		else if(a == eS_PORTC6)
    1092:	8a 31       	cpi	r24, 0x1A	; 26
    1094:	91 05       	cpc	r25, r1
    1096:	11 f4       	brne	.+4      	; 0x109c <pinChange+0x22c>
		  PORTC |= (1<<PC6);  
    1098:	ae 9a       	sbi	0x15, 6	; 21
    109a:	08 95       	ret
		else if(a == eS_PORTC7)
    109c:	8b 31       	cpi	r24, 0x1B	; 27
    109e:	91 05       	cpc	r25, r1
    10a0:	11 f4       	brne	.+4      	; 0x10a6 <pinChange+0x236>
		  PORTC |= (1<<PC7);
    10a2:	af 9a       	sbi	0x15, 7	; 21
    10a4:	08 95       	ret
		else if(a == eS_PORTD0)
    10a6:	8e 31       	cpi	r24, 0x1E	; 30
    10a8:	91 05       	cpc	r25, r1
    10aa:	11 f4       	brne	.+4      	; 0x10b0 <pinChange+0x240>
		  PORTD |= (1<<PD0);
    10ac:	90 9a       	sbi	0x12, 0	; 18
    10ae:	08 95       	ret
		else if(a == eS_PORTD1)
    10b0:	8f 31       	cpi	r24, 0x1F	; 31
    10b2:	91 05       	cpc	r25, r1
    10b4:	11 f4       	brne	.+4      	; 0x10ba <pinChange+0x24a>
		  PORTD |= (1<<PD1);
    10b6:	91 9a       	sbi	0x12, 1	; 18
    10b8:	08 95       	ret
		else if(a == eS_PORTD2)
    10ba:	80 32       	cpi	r24, 0x20	; 32
    10bc:	91 05       	cpc	r25, r1
    10be:	11 f4       	brne	.+4      	; 0x10c4 <pinChange+0x254>
		  PORTD |= (1<<PD2);
    10c0:	92 9a       	sbi	0x12, 2	; 18
    10c2:	08 95       	ret
		else if(a == eS_PORTD3)
    10c4:	81 32       	cpi	r24, 0x21	; 33
    10c6:	91 05       	cpc	r25, r1
    10c8:	11 f4       	brne	.+4      	; 0x10ce <pinChange+0x25e>
		  PORTD |= (1<<PD3);
    10ca:	93 9a       	sbi	0x12, 3	; 18
    10cc:	08 95       	ret
		else if(a == eS_PORTD4)
    10ce:	82 32       	cpi	r24, 0x22	; 34
    10d0:	91 05       	cpc	r25, r1
    10d2:	11 f4       	brne	.+4      	; 0x10d8 <pinChange+0x268>
		  PORTD |= (1<<PD4);
    10d4:	94 9a       	sbi	0x12, 4	; 18
    10d6:	08 95       	ret
		else if(a == eS_PORTD5)
    10d8:	83 32       	cpi	r24, 0x23	; 35
    10da:	91 05       	cpc	r25, r1
    10dc:	11 f4       	brne	.+4      	; 0x10e2 <pinChange+0x272>
		  PORTD |= (1<<PD5);
    10de:	95 9a       	sbi	0x12, 5	; 18
    10e0:	08 95       	ret
		else if(a == eS_PORTD6)
    10e2:	84 32       	cpi	r24, 0x24	; 36
    10e4:	91 05       	cpc	r25, r1
    10e6:	11 f4       	brne	.+4      	; 0x10ec <pinChange+0x27c>
		  PORTD |= (1<<PD6);
    10e8:	96 9a       	sbi	0x12, 6	; 18
    10ea:	08 95       	ret
		else if(a == eS_PORTD7)
    10ec:	85 32       	cpi	r24, 0x25	; 37
    10ee:	91 05       	cpc	r25, r1
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <pinChange+0x284>
		  PORTD |= (1<<PD7);
    10f2:	97 9a       	sbi	0x12, 7	; 18
    10f4:	08 95       	ret

000010f6 <Lcd8_Port>:



//LCD 8 Bit Interfacing Functions
void Lcd8_Port(char a)
{
    10f6:	0f 93       	push	r16
    10f8:	1f 93       	push	r17
    10fa:	08 2f       	mov	r16, r24
	if(a & 1)
    10fc:	18 2f       	mov	r17, r24
    10fe:	80 ff       	sbrs	r24, 0
    1100:	07 c0       	rjmp	.+14     	; 0x1110 <__stack+0x11>
	pinChange(D0,1);
    1102:	80 e0       	ldi	r24, 0x00	; 0
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	61 e0       	ldi	r22, 0x01	; 1
    1108:	70 e0       	ldi	r23, 0x00	; 0
    110a:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    110e:	06 c0       	rjmp	.+12     	; 0x111c <__stack+0x1d>
	else
	pinChange(D0,0);
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	60 e0       	ldi	r22, 0x00	; 0
    1116:	70 e0       	ldi	r23, 0x00	; 0
    1118:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 2)
    111c:	11 ff       	sbrs	r17, 1
    111e:	07 c0       	rjmp	.+14     	; 0x112e <__stack+0x2f>
	pinChange(D1,1);
    1120:	81 e0       	ldi	r24, 0x01	; 1
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	61 e0       	ldi	r22, 0x01	; 1
    1126:	70 e0       	ldi	r23, 0x00	; 0
    1128:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    112c:	06 c0       	rjmp	.+12     	; 0x113a <__stack+0x3b>
	else
	pinChange(D1,0);
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	60 e0       	ldi	r22, 0x00	; 0
    1134:	70 e0       	ldi	r23, 0x00	; 0
    1136:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 4)
    113a:	12 ff       	sbrs	r17, 2
    113c:	07 c0       	rjmp	.+14     	; 0x114c <__stack+0x4d>
	pinChange(D2,1);
    113e:	82 e0       	ldi	r24, 0x02	; 2
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	70 e0       	ldi	r23, 0x00	; 0
    1146:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    114a:	06 c0       	rjmp	.+12     	; 0x1158 <__stack+0x59>
	else
	pinChange(D2,0);
    114c:	82 e0       	ldi	r24, 0x02	; 2
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	60 e0       	ldi	r22, 0x00	; 0
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 8)
    1158:	13 ff       	sbrs	r17, 3
    115a:	07 c0       	rjmp	.+14     	; 0x116a <__stack+0x6b>
	pinChange(D3,1);
    115c:	83 e0       	ldi	r24, 0x03	; 3
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	61 e0       	ldi	r22, 0x01	; 1
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1168:	06 c0       	rjmp	.+12     	; 0x1176 <__stack+0x77>
	else
	pinChange(D3,0);
    116a:	83 e0       	ldi	r24, 0x03	; 3
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 16)
    1176:	14 ff       	sbrs	r17, 4
    1178:	07 c0       	rjmp	.+14     	; 0x1188 <__stack+0x89>
	pinChange(D4,1);
    117a:	88 e1       	ldi	r24, 0x18	; 24
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	61 e0       	ldi	r22, 0x01	; 1
    1180:	70 e0       	ldi	r23, 0x00	; 0
    1182:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1186:	06 c0       	rjmp	.+12     	; 0x1194 <__stack+0x95>
	else
	pinChange(D4,0);
    1188:	88 e1       	ldi	r24, 0x18	; 24
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	60 e0       	ldi	r22, 0x00	; 0
    118e:	70 e0       	ldi	r23, 0x00	; 0
    1190:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>

	if(a & 32)
    1194:	15 ff       	sbrs	r17, 5
    1196:	07 c0       	rjmp	.+14     	; 0x11a6 <__stack+0xa7>
	pinChange(D5,1);
    1198:	89 e1       	ldi	r24, 0x19	; 25
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	61 e0       	ldi	r22, 0x01	; 1
    119e:	70 e0       	ldi	r23, 0x00	; 0
    11a0:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    11a4:	06 c0       	rjmp	.+12     	; 0x11b2 <__stack+0xb3>
	else
	pinChange(D5,0);
    11a6:	89 e1       	ldi	r24, 0x19	; 25
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	60 e0       	ldi	r22, 0x00	; 0
    11ac:	70 e0       	ldi	r23, 0x00	; 0
    11ae:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 64)
    11b2:	16 ff       	sbrs	r17, 6
    11b4:	07 c0       	rjmp	.+14     	; 0x11c4 <__stack+0xc5>
	pinChange(D6,1);
    11b6:	8a e1       	ldi	r24, 0x1A	; 26
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	61 e0       	ldi	r22, 0x01	; 1
    11bc:	70 e0       	ldi	r23, 0x00	; 0
    11be:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    11c2:	06 c0       	rjmp	.+12     	; 0x11d0 <__stack+0xd1>
	else
	pinChange(D6,0);
    11c4:	8a e1       	ldi	r24, 0x1A	; 26
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	60 e0       	ldi	r22, 0x00	; 0
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 128)
    11d0:	00 23       	and	r16, r16
    11d2:	3c f4       	brge	.+14     	; 0x11e2 <__stack+0xe3>
	pinChange(D7,1);
    11d4:	8b e1       	ldi	r24, 0x1B	; 27
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	61 e0       	ldi	r22, 0x01	; 1
    11da:	70 e0       	ldi	r23, 0x00	; 0
    11dc:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    11e0:	06 c0       	rjmp	.+12     	; 0x11ee <__stack+0xef>
	else
	pinChange(D7,0);
    11e2:	8b e1       	ldi	r24, 0x1B	; 27
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	60 e0       	ldi	r22, 0x00	; 0
    11e8:	70 e0       	ldi	r23, 0x00	; 0
    11ea:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
}
    11ee:	1f 91       	pop	r17
    11f0:	0f 91       	pop	r16
    11f2:	08 95       	ret

000011f4 <Lcd8_Cmd>:
void Lcd8_Cmd(char a)
{
    11f4:	1f 93       	push	r17
    11f6:	18 2f       	mov	r17, r24
	pinChange(RS,0);             // => RS = 0
    11f8:	86 e1       	ldi	r24, 0x16	; 22
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	60 e0       	ldi	r22, 0x00	; 0
    11fe:	70 e0       	ldi	r23, 0x00	; 0
    1200:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	Lcd8_Port(a);             //Data transfer
    1204:	81 2f       	mov	r24, r17
    1206:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <Lcd8_Port>
	pinChange(EN,1);             // => E = 1
    120a:	87 e1       	ldi	r24, 0x17	; 23
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	61 e0       	ldi	r22, 0x01	; 1
    1210:	70 e0       	ldi	r23, 0x00	; 0
    1212:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1216:	89 ef       	ldi	r24, 0xF9	; 249
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	01 97       	sbiw	r24, 0x01	; 1
    121c:	f1 f7       	brne	.-4      	; 0x121a <Lcd8_Cmd+0x26>
    121e:	00 c0       	rjmp	.+0      	; 0x1220 <Lcd8_Cmd+0x2c>
    1220:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 0
    1222:	87 e1       	ldi	r24, 0x17	; 23
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	60 e0       	ldi	r22, 0x00	; 0
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    122e:	89 ef       	ldi	r24, 0xF9	; 249
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	01 97       	sbiw	r24, 0x01	; 1
    1234:	f1 f7       	brne	.-4      	; 0x1232 <Lcd8_Cmd+0x3e>
    1236:	00 c0       	rjmp	.+0      	; 0x1238 <Lcd8_Cmd+0x44>
    1238:	00 00       	nop
	_delay_ms(1);
}
    123a:	1f 91       	pop	r17
    123c:	08 95       	ret

0000123e <Lcd8_Clear>:

void Lcd8_Clear()
{
	Lcd8_Cmd(1);
    123e:	81 e0       	ldi	r24, 0x01	; 1
    1240:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
}
    1244:	08 95       	ret

00001246 <Lcd8_Set_Cursor>:

void Lcd8_Set_Cursor(char a, char b)
{
	if(a == 1)
    1246:	81 30       	cpi	r24, 0x01	; 1
    1248:	29 f4       	brne	.+10     	; 0x1254 <Lcd8_Set_Cursor+0xe>
	Lcd8_Cmd(0x80 + b);
    124a:	86 2f       	mov	r24, r22
    124c:	80 58       	subi	r24, 0x80	; 128
    124e:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    1252:	08 95       	ret
	else if(a == 2)
    1254:	82 30       	cpi	r24, 0x02	; 2
    1256:	21 f4       	brne	.+8      	; 0x1260 <Lcd8_Set_Cursor+0x1a>
	Lcd8_Cmd(0xC0 + b);
    1258:	86 2f       	mov	r24, r22
    125a:	80 54       	subi	r24, 0x40	; 64
    125c:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    1260:	08 95       	ret

00001262 <Lcd8_Init>:
}

void Lcd8_Init()
{
	pinChange(RS,0);
    1262:	86 e1       	ldi	r24, 0x16	; 22
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	60 e0       	ldi	r22, 0x00	; 0
    1268:	70 e0       	ldi	r23, 0x00	; 0
    126a:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	pinChange(EN,0);
    126e:	87 e1       	ldi	r24, 0x17	; 23
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	60 e0       	ldi	r22, 0x00	; 0
    1274:	70 e0       	ldi	r23, 0x00	; 0
    1276:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    127a:	87 e8       	ldi	r24, 0x87	; 135
    127c:	93 e1       	ldi	r25, 0x13	; 19
    127e:	01 97       	sbiw	r24, 0x01	; 1
    1280:	f1 f7       	brne	.-4      	; 0x127e <Lcd8_Init+0x1c>
    1282:	00 c0       	rjmp	.+0      	; 0x1284 <Lcd8_Init+0x22>
    1284:	00 00       	nop
	_delay_ms(20);
	///////////// Reset process from datasheet /////////
	Lcd8_Cmd(0x30);
    1286:	80 e3       	ldi	r24, 0x30	; 48
    1288:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    128c:	81 ee       	ldi	r24, 0xE1	; 225
    128e:	94 e0       	ldi	r25, 0x04	; 4
    1290:	01 97       	sbiw	r24, 0x01	; 1
    1292:	f1 f7       	brne	.-4      	; 0x1290 <Lcd8_Init+0x2e>
    1294:	00 c0       	rjmp	.+0      	; 0x1296 <Lcd8_Init+0x34>
    1296:	00 00       	nop
	_delay_ms(5);
	Lcd8_Cmd(0x30);
    1298:	80 e3       	ldi	r24, 0x30	; 48
    129a:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    129e:	89 ef       	ldi	r24, 0xF9	; 249
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	01 97       	sbiw	r24, 0x01	; 1
    12a4:	f1 f7       	brne	.-4      	; 0x12a2 <Lcd8_Init+0x40>
    12a6:	00 c0       	rjmp	.+0      	; 0x12a8 <Lcd8_Init+0x46>
    12a8:	00 00       	nop
	_delay_ms(1);
	Lcd8_Cmd(0x30);
    12aa:	80 e3       	ldi	r24, 0x30	; 48
    12ac:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
    12b0:	83 ec       	ldi	r24, 0xC3	; 195
    12b2:	99 e0       	ldi	r25, 0x09	; 9
    12b4:	01 97       	sbiw	r24, 0x01	; 1
    12b6:	f1 f7       	brne	.-4      	; 0x12b4 <Lcd8_Init+0x52>
    12b8:	00 c0       	rjmp	.+0      	; 0x12ba <Lcd8_Init+0x58>
    12ba:	00 00       	nop
	_delay_ms(10);
	/////////////////////////////////////////////////////
	Lcd8_Cmd(0x38);    //function set
    12bc:	88 e3       	ldi	r24, 0x38	; 56
    12be:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
	Lcd8_Cmd(0x0C);    //display on,cursor off,blink off
    12c2:	8c e0       	ldi	r24, 0x0C	; 12
    12c4:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
	Lcd8_Cmd(0x01);    //clear display
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
	Lcd8_Cmd(0x06);    //entry mode, set increment
    12ce:	86 e0       	ldi	r24, 0x06	; 6
    12d0:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
}
    12d4:	08 95       	ret

000012d6 <Lcd8_Write_Char>:

void Lcd8_Write_Char(char a)
{
    12d6:	1f 93       	push	r17
    12d8:	18 2f       	mov	r17, r24
	pinChange(RS,1);             // => RS = 1
    12da:	86 e1       	ldi	r24, 0x16	; 22
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	61 e0       	ldi	r22, 0x01	; 1
    12e0:	70 e0       	ldi	r23, 0x00	; 0
    12e2:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	Lcd8_Port(a);             //Data transfer
    12e6:	81 2f       	mov	r24, r17
    12e8:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <Lcd8_Port>
	pinChange(EN,1);             // => E = 1
    12ec:	87 e1       	ldi	r24, 0x17	; 23
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	61 e0       	ldi	r22, 0x01	; 1
    12f2:	70 e0       	ldi	r23, 0x00	; 0
    12f4:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    12f8:	89 ef       	ldi	r24, 0xF9	; 249
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	01 97       	sbiw	r24, 0x01	; 1
    12fe:	f1 f7       	brne	.-4      	; 0x12fc <Lcd8_Write_Char+0x26>
    1300:	00 c0       	rjmp	.+0      	; 0x1302 <Lcd8_Write_Char+0x2c>
    1302:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 04
    1304:	87 e1       	ldi	r24, 0x17	; 23
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	60 e0       	ldi	r22, 0x00	; 0
    130a:	70 e0       	ldi	r23, 0x00	; 0
    130c:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1310:	89 ef       	ldi	r24, 0xF9	; 249
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	01 97       	sbiw	r24, 0x01	; 1
    1316:	f1 f7       	brne	.-4      	; 0x1314 <Lcd8_Write_Char+0x3e>
    1318:	00 c0       	rjmp	.+0      	; 0x131a <Lcd8_Write_Char+0x44>
    131a:	00 00       	nop
	_delay_ms(1);
}
    131c:	1f 91       	pop	r17
    131e:	08 95       	ret

00001320 <Lcd8_Write_String>:

void Lcd8_Write_String(char *a)
{
    1320:	cf 93       	push	r28
    1322:	df 93       	push	r29
    1324:	ec 01       	movw	r28, r24
	int i;
	for(i=0;a[i]!='\0';i++)
    1326:	88 81       	ld	r24, Y
    1328:	88 23       	and	r24, r24
    132a:	31 f0       	breq	.+12     	; 0x1338 <Lcd8_Write_String+0x18>
	_delay_ms(1);
	pinChange(EN,0);             // => E = 04
	_delay_ms(1);
}

void Lcd8_Write_String(char *a)
    132c:	21 96       	adiw	r28, 0x01	; 1
{
	int i;
	for(i=0;a[i]!='\0';i++)
	Lcd8_Write_Char(a[i]);
    132e:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <Lcd8_Write_Char>
}

void Lcd8_Write_String(char *a)
{
	int i;
	for(i=0;a[i]!='\0';i++)
    1332:	89 91       	ld	r24, Y+
    1334:	88 23       	and	r24, r24
    1336:	d9 f7       	brne	.-10     	; 0x132e <Lcd8_Write_String+0xe>
	Lcd8_Write_Char(a[i]);
}
    1338:	df 91       	pop	r29
    133a:	cf 91       	pop	r28
    133c:	08 95       	ret

0000133e <Lcd8_Shift_Right>:

void Lcd8_Shift_Right()
{
	Lcd8_Cmd(0x1C);
    133e:	8c e1       	ldi	r24, 0x1C	; 28
    1340:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
}
    1344:	08 95       	ret

00001346 <Lcd8_Shift_Left>:

void Lcd8_Shift_Left()
{
	Lcd8_Cmd(0x18);
    1346:	88 e1       	ldi	r24, 0x18	; 24
    1348:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <Lcd8_Cmd>
}
    134c:	08 95       	ret

0000134e <Lcd4_Port>:
//End LCD 8 Bit Interfacing Functions

//LCD 4 Bit Interfacing Functions

void Lcd4_Port(char a)
{
    134e:	cf 93       	push	r28
    1350:	df 93       	push	r29
	if(a & 1)
    1352:	c8 2f       	mov	r28, r24
    1354:	d0 e0       	ldi	r29, 0x00	; 0
    1356:	ce 01       	movw	r24, r28
    1358:	80 ff       	sbrs	r24, 0
    135a:	07 c0       	rjmp	.+14     	; 0x136a <Lcd4_Port+0x1c>
	pinChange(D4,1);
    135c:	88 e1       	ldi	r24, 0x18	; 24
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	61 e0       	ldi	r22, 0x01	; 1
    1362:	70 e0       	ldi	r23, 0x00	; 0
    1364:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <Lcd4_Port+0x28>
	else
	pinChange(D4,0);
    136a:	88 e1       	ldi	r24, 0x18	; 24
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	60 e0       	ldi	r22, 0x00	; 0
    1370:	70 e0       	ldi	r23, 0x00	; 0
    1372:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 2)
    1376:	c1 ff       	sbrs	r28, 1
    1378:	07 c0       	rjmp	.+14     	; 0x1388 <Lcd4_Port+0x3a>
	pinChange(D5,1);
    137a:	89 e1       	ldi	r24, 0x19	; 25
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	61 e0       	ldi	r22, 0x01	; 1
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1386:	06 c0       	rjmp	.+12     	; 0x1394 <Lcd4_Port+0x46>
	else
	pinChange(D5,0);
    1388:	89 e1       	ldi	r24, 0x19	; 25
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 4)
    1394:	c2 ff       	sbrs	r28, 2
    1396:	07 c0       	rjmp	.+14     	; 0x13a6 <Lcd4_Port+0x58>
	pinChange(D6,1);
    1398:	8a e1       	ldi	r24, 0x1A	; 26
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	61 e0       	ldi	r22, 0x01	; 1
    139e:	70 e0       	ldi	r23, 0x00	; 0
    13a0:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    13a4:	06 c0       	rjmp	.+12     	; 0x13b2 <Lcd4_Port+0x64>
	else
	pinChange(D6,0);
    13a6:	8a e1       	ldi	r24, 0x1A	; 26
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	60 e0       	ldi	r22, 0x00	; 0
    13ac:	70 e0       	ldi	r23, 0x00	; 0
    13ae:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	
	if(a & 8)
    13b2:	c3 ff       	sbrs	r28, 3
    13b4:	07 c0       	rjmp	.+14     	; 0x13c4 <Lcd4_Port+0x76>
	pinChange(D7,1);
    13b6:	8b e1       	ldi	r24, 0x1B	; 27
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	61 e0       	ldi	r22, 0x01	; 1
    13bc:	70 e0       	ldi	r23, 0x00	; 0
    13be:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    13c2:	06 c0       	rjmp	.+12     	; 0x13d0 <Lcd4_Port+0x82>
	else
	pinChange(D7,0);
    13c4:	8b e1       	ldi	r24, 0x1B	; 27
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	60 e0       	ldi	r22, 0x00	; 0
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
}
    13d0:	df 91       	pop	r29
    13d2:	cf 91       	pop	r28
    13d4:	08 95       	ret

000013d6 <Lcd4_Cmd>:
void Lcd4_Cmd(char a)
{
    13d6:	1f 93       	push	r17
    13d8:	18 2f       	mov	r17, r24
	pinChange(RS,0);             // => RS = 0
    13da:	86 e1       	ldi	r24, 0x16	; 22
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	60 e0       	ldi	r22, 0x00	; 0
    13e0:	70 e0       	ldi	r23, 0x00	; 0
    13e2:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	Lcd4_Port(a);
    13e6:	81 2f       	mov	r24, r17
    13e8:	0e 94 a7 09 	call	0x134e	; 0x134e <Lcd4_Port>
	pinChange(EN,1);            // => E = 1
    13ec:	87 e1       	ldi	r24, 0x17	; 23
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	61 e0       	ldi	r22, 0x01	; 1
    13f2:	70 e0       	ldi	r23, 0x00	; 0
    13f4:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    13f8:	89 ef       	ldi	r24, 0xF9	; 249
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	01 97       	sbiw	r24, 0x01	; 1
    13fe:	f1 f7       	brne	.-4      	; 0x13fc <Lcd4_Cmd+0x26>
    1400:	00 c0       	rjmp	.+0      	; 0x1402 <Lcd4_Cmd+0x2c>
    1402:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 0
    1404:	87 e1       	ldi	r24, 0x17	; 23
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	60 e0       	ldi	r22, 0x00	; 0
    140a:	70 e0       	ldi	r23, 0x00	; 0
    140c:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1410:	89 ef       	ldi	r24, 0xF9	; 249
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	01 97       	sbiw	r24, 0x01	; 1
    1416:	f1 f7       	brne	.-4      	; 0x1414 <Lcd4_Cmd+0x3e>
    1418:	00 c0       	rjmp	.+0      	; 0x141a <Lcd4_Cmd+0x44>
    141a:	00 00       	nop
	_delay_ms(1);
}
    141c:	1f 91       	pop	r17
    141e:	08 95       	ret

00001420 <Lcd4_Clear>:

void Lcd4_Clear()
{
	Lcd4_Cmd(0);
    1420:	80 e0       	ldi	r24, 0x00	; 0
    1422:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(1);
    1426:	81 e0       	ldi	r24, 0x01	; 1
    1428:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
}
    142c:	08 95       	ret

0000142e <Lcd4_Set_Cursor>:

void Lcd4_Set_Cursor(char a, char b)
{
    142e:	1f 93       	push	r17
	char temp,z,y;
	if(a == 1)
    1430:	81 30       	cpi	r24, 0x01	; 1
    1432:	61 f4       	brne	.+24     	; 0x144c <Lcd4_Set_Cursor+0x1e>
	{
		temp = 0x80 + b;
    1434:	16 2f       	mov	r17, r22
    1436:	10 58       	subi	r17, 0x80	; 128
		z = temp>>4;
		y = (0x80+b) & 0x0F;
		Lcd4_Cmd(z);
    1438:	81 2f       	mov	r24, r17
    143a:	82 95       	swap	r24
    143c:	8f 70       	andi	r24, 0x0F	; 15
    143e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
		Lcd4_Cmd(y);
    1442:	81 2f       	mov	r24, r17
    1444:	8f 70       	andi	r24, 0x0F	; 15
    1446:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
    144a:	0d c0       	rjmp	.+26     	; 0x1466 <Lcd4_Set_Cursor+0x38>
	}
	else if(a == 2)
    144c:	82 30       	cpi	r24, 0x02	; 2
    144e:	59 f4       	brne	.+22     	; 0x1466 <Lcd4_Set_Cursor+0x38>
	{
		temp = 0xC0 + b;
    1450:	16 2f       	mov	r17, r22
    1452:	10 54       	subi	r17, 0x40	; 64
		z = temp>>4;
		y = (0xC0+b) & 0x0F;
		Lcd4_Cmd(z);
    1454:	81 2f       	mov	r24, r17
    1456:	82 95       	swap	r24
    1458:	8f 70       	andi	r24, 0x0F	; 15
    145a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
		Lcd4_Cmd(y);
    145e:	81 2f       	mov	r24, r17
    1460:	8f 70       	andi	r24, 0x0F	; 15
    1462:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	}
}
    1466:	1f 91       	pop	r17
    1468:	08 95       	ret

0000146a <Lcd4_Init>:

void Lcd4_Init()
{
	Lcd4_Port(0x00);
    146a:	80 e0       	ldi	r24, 0x00	; 0
    146c:	0e 94 a7 09 	call	0x134e	; 0x134e <Lcd4_Port>
    1470:	87 e8       	ldi	r24, 0x87	; 135
    1472:	93 e1       	ldi	r25, 0x13	; 19
    1474:	01 97       	sbiw	r24, 0x01	; 1
    1476:	f1 f7       	brne	.-4      	; 0x1474 <Lcd4_Init+0xa>
    1478:	00 c0       	rjmp	.+0      	; 0x147a <Lcd4_Init+0x10>
    147a:	00 00       	nop
	_delay_ms(20);
	///////////// Reset process from datasheet /////////
	Lcd4_Cmd(0x03);
    147c:	83 e0       	ldi	r24, 0x03	; 3
    147e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
    1482:	81 ee       	ldi	r24, 0xE1	; 225
    1484:	94 e0       	ldi	r25, 0x04	; 4
    1486:	01 97       	sbiw	r24, 0x01	; 1
    1488:	f1 f7       	brne	.-4      	; 0x1486 <Lcd4_Init+0x1c>
    148a:	00 c0       	rjmp	.+0      	; 0x148c <Lcd4_Init+0x22>
    148c:	00 00       	nop
	_delay_ms(5);
	Lcd4_Cmd(0x03);
    148e:	83 e0       	ldi	r24, 0x03	; 3
    1490:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
    1494:	8d eb       	ldi	r24, 0xBD	; 189
    1496:	9a e0       	ldi	r25, 0x0A	; 10
    1498:	01 97       	sbiw	r24, 0x01	; 1
    149a:	f1 f7       	brne	.-4      	; 0x1498 <Lcd4_Init+0x2e>
    149c:	00 c0       	rjmp	.+0      	; 0x149e <Lcd4_Init+0x34>
    149e:	00 00       	nop
	_delay_ms(11);
	Lcd4_Cmd(0x03);
    14a0:	83 e0       	ldi	r24, 0x03	; 3
    14a2:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	/////////////////////////////////////////////////////
	Lcd4_Cmd(0x02);
    14a6:	82 e0       	ldi	r24, 0x02	; 2
    14a8:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x02);
    14ac:	82 e0       	ldi	r24, 0x02	; 2
    14ae:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
    14b2:	88 e0       	ldi	r24, 0x08	; 8
    14b4:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x0C);
    14be:	8c e0       	ldi	r24, 0x0C	; 12
    14c0:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
    14c4:	80 e0       	ldi	r24, 0x00	; 0
    14c6:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x06);
    14ca:	86 e0       	ldi	r24, 0x06	; 6
    14cc:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
}
    14d0:	08 95       	ret

000014d2 <Lcd4_Write_Char>:

void Lcd4_Write_Char(char a)
{
    14d2:	1f 93       	push	r17
    14d4:	18 2f       	mov	r17, r24
	char temp,y;
	temp = a&0x0F;
	y = a&0xF0;
	pinChange(RS,1);             // => RS = 1
    14d6:	86 e1       	ldi	r24, 0x16	; 22
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	61 e0       	ldi	r22, 0x01	; 1
    14dc:	70 e0       	ldi	r23, 0x00	; 0
    14de:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
	Lcd4_Port(y>>4);             //Data transfer
    14e2:	81 2f       	mov	r24, r17
    14e4:	82 95       	swap	r24
    14e6:	8f 70       	andi	r24, 0x0F	; 15
    14e8:	0e 94 a7 09 	call	0x134e	; 0x134e <Lcd4_Port>
	pinChange(EN,1);
    14ec:	87 e1       	ldi	r24, 0x17	; 23
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	61 e0       	ldi	r22, 0x01	; 1
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    14f8:	89 ef       	ldi	r24, 0xF9	; 249
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	01 97       	sbiw	r24, 0x01	; 1
    14fe:	f1 f7       	brne	.-4      	; 0x14fc <Lcd4_Write_Char+0x2a>
    1500:	00 c0       	rjmp	.+0      	; 0x1502 <Lcd4_Write_Char+0x30>
    1502:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
    1504:	87 e1       	ldi	r24, 0x17	; 23
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	70 e0       	ldi	r23, 0x00	; 0
    150c:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1510:	89 ef       	ldi	r24, 0xF9	; 249
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	01 97       	sbiw	r24, 0x01	; 1
    1516:	f1 f7       	brne	.-4      	; 0x1514 <Lcd4_Write_Char+0x42>
    1518:	00 c0       	rjmp	.+0      	; 0x151a <Lcd4_Write_Char+0x48>
    151a:	00 00       	nop
	_delay_ms(1);
	Lcd4_Port(temp);
    151c:	81 2f       	mov	r24, r17
    151e:	8f 70       	andi	r24, 0x0F	; 15
    1520:	0e 94 a7 09 	call	0x134e	; 0x134e <Lcd4_Port>
	pinChange(EN,1);
    1524:	87 e1       	ldi	r24, 0x17	; 23
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	61 e0       	ldi	r22, 0x01	; 1
    152a:	70 e0       	ldi	r23, 0x00	; 0
    152c:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1530:	89 ef       	ldi	r24, 0xF9	; 249
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	01 97       	sbiw	r24, 0x01	; 1
    1536:	f1 f7       	brne	.-4      	; 0x1534 <Lcd4_Write_Char+0x62>
    1538:	00 c0       	rjmp	.+0      	; 0x153a <Lcd4_Write_Char+0x68>
    153a:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
    153c:	87 e1       	ldi	r24, 0x17	; 23
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	60 e0       	ldi	r22, 0x00	; 0
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	0e 94 38 07 	call	0xe70	; 0xe70 <pinChange>
    1548:	89 ef       	ldi	r24, 0xF9	; 249
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	01 97       	sbiw	r24, 0x01	; 1
    154e:	f1 f7       	brne	.-4      	; 0x154c <Lcd4_Write_Char+0x7a>
    1550:	00 c0       	rjmp	.+0      	; 0x1552 <Lcd4_Write_Char+0x80>
    1552:	00 00       	nop
	_delay_ms(1);
}
    1554:	1f 91       	pop	r17
    1556:	08 95       	ret

00001558 <Lcd4_Write_String>:

void Lcd4_Write_String(char *a)
{
    1558:	cf 93       	push	r28
    155a:	df 93       	push	r29
    155c:	ec 01       	movw	r28, r24
	int i;
	for(i=0;a[i]!='\0';i++)
    155e:	88 81       	ld	r24, Y
    1560:	88 23       	and	r24, r24
    1562:	31 f0       	breq	.+12     	; 0x1570 <Lcd4_Write_String+0x18>
	_delay_ms(1);
	pinChange(EN,0);
	_delay_ms(1);
}

void Lcd4_Write_String(char *a)
    1564:	21 96       	adiw	r28, 0x01	; 1
{
	int i;
	for(i=0;a[i]!='\0';i++)
	Lcd4_Write_Char(a[i]);
    1566:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <Lcd4_Write_Char>
}

void Lcd4_Write_String(char *a)
{
	int i;
	for(i=0;a[i]!='\0';i++)
    156a:	89 91       	ld	r24, Y+
    156c:	88 23       	and	r24, r24
    156e:	d9 f7       	brne	.-10     	; 0x1566 <Lcd4_Write_String+0xe>
	Lcd4_Write_Char(a[i]);
}
    1570:	df 91       	pop	r29
    1572:	cf 91       	pop	r28
    1574:	08 95       	ret

00001576 <Lcd4_Shift_Right>:

void Lcd4_Shift_Right()
{
	Lcd4_Cmd(0x01);
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x0C);
    157c:	8c e0       	ldi	r24, 0x0C	; 12
    157e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
}
    1582:	08 95       	ret

00001584 <Lcd4_Shift_Left>:

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
    158a:	88 e0       	ldi	r24, 0x08	; 8
    158c:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <Lcd4_Cmd>
}
    1590:	08 95       	ret

00001592 <Splash>:
			"Copyright:",
			"    OZHAN KD"
			};

	//-------------
	StringAt(0, 2, SPchar[0]);
    1592:	82 e0       	ldi	r24, 0x02	; 2
    1594:	60 e0       	ldi	r22, 0x00	; 0
    1596:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <N11_GotoXR>
    159a:	80 e0       	ldi	r24, 0x00	; 0
    159c:	91 e0       	ldi	r25, 0x01	; 1
    159e:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <N11_PrintString>
	StringAt(2, 2, SPchar[1]);
    15a2:	82 e0       	ldi	r24, 0x02	; 2
    15a4:	62 e0       	ldi	r22, 0x02	; 2
    15a6:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <N11_GotoXR>
    15aa:	8f e0       	ldi	r24, 0x0F	; 15
    15ac:	91 e0       	ldi	r25, 0x01	; 1
    15ae:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <N11_PrintString>
	StringAt(3, 2, SPchar[2]);
    15b2:	82 e0       	ldi	r24, 0x02	; 2
    15b4:	63 e0       	ldi	r22, 0x03	; 3
    15b6:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <N11_GotoXR>
    15ba:	84 e1       	ldi	r24, 0x14	; 20
    15bc:	91 e0       	ldi	r25, 0x01	; 1
    15be:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <N11_PrintString>
	StringAt(5, 2, SPchar[3]);
    15c2:	82 e0       	ldi	r24, 0x02	; 2
    15c4:	65 e0       	ldi	r22, 0x05	; 5
    15c6:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <N11_GotoXR>
    15ca:	8a e2       	ldi	r24, 0x2A	; 42
    15cc:	91 e0       	ldi	r25, 0x01	; 1
    15ce:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <N11_PrintString>
	StringAt(6, 2, SPchar[4]);
    15d2:	82 e0       	ldi	r24, 0x02	; 2
    15d4:	66 e0       	ldi	r22, 0x06	; 6
    15d6:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <N11_GotoXR>
    15da:	85 e3       	ldi	r24, 0x35	; 53
    15dc:	91 e0       	ldi	r25, 0x01	; 1
    15de:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <N11_PrintString>
    15e2:	8f eb       	ldi	r24, 0xBF	; 191
    15e4:	97 e2       	ldi	r25, 0x27	; 39
    15e6:	a9 e0       	ldi	r26, 0x09	; 9
    15e8:	81 50       	subi	r24, 0x01	; 1
    15ea:	90 40       	sbci	r25, 0x00	; 0
    15ec:	a0 40       	sbci	r26, 0x00	; 0
    15ee:	e1 f7       	brne	.-8      	; 0x15e8 <Splash+0x56>
    15f0:	00 c0       	rjmp	.+0      	; 0x15f2 <Splash+0x60>
    15f2:	00 00       	nop

	//-------------
	_delay_ms(3000);
	N11_CLS();
    15f4:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <N11_CLS>
}	//Splash
    15f8:	08 95       	ret

000015fa <Initial>:

//---------------------------------------------------------//
//---------------------------------------------------------//
void Initial(void)
{
	cli();												//Interrupts disable
    15fa:	f8 94       	cli

	HW_init();
    15fc:	0e 94 1c 07 	call	0xe38	; 0xe38 <HW_init>
	a2dInit();										//AVCC & DIV64
    1600:	0e 94 d7 06 	call	0xdae	; 0xdae <a2dInit>
    1604:	8f e9       	ldi	r24, 0x9F	; 159
    1606:	96 e8       	ldi	r25, 0x86	; 134
    1608:	a1 e0       	ldi	r26, 0x01	; 1
    160a:	81 50       	subi	r24, 0x01	; 1
    160c:	90 40       	sbci	r25, 0x00	; 0
    160e:	a0 40       	sbci	r26, 0x00	; 0
    1610:	e1 f7       	brne	.-8      	; 0x160a <Initial+0x10>
    1612:	00 c0       	rjmp	.+0      	; 0x1614 <Initial+0x1a>
    1614:	00 00       	nop
	
	_delay_ms(500);

	//----------------------
	N11_Init();
    1616:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <N11_Init>
	N11_Contrast(10);
    161a:	8a e0       	ldi	r24, 0x0A	; 10
    161c:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <N11_Contrast>
	N11_Backlight(ON);
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <N11_Backlight>
	
	//----------------------
	BUZZER(BOOT_sign);
    1626:	82 e0       	ldi	r24, 0x02	; 2
    1628:	0e 94 23 07 	call	0xe46	; 0xe46 <BUZZER>
    162c:	8f e9       	ldi	r24, 0x9F	; 159
    162e:	96 e8       	ldi	r25, 0x86	; 134
    1630:	a1 e0       	ldi	r26, 0x01	; 1
    1632:	81 50       	subi	r24, 0x01	; 1
    1634:	90 40       	sbci	r25, 0x00	; 0
    1636:	a0 40       	sbci	r26, 0x00	; 0
    1638:	e1 f7       	brne	.-8      	; 0x1632 <Initial+0x38>
    163a:	00 c0       	rjmp	.+0      	; 0x163c <Initial+0x42>
    163c:	00 00       	nop

	//----------------------
	//static FILE mystdout = FDEV_SETUP_STREAM(N11_PrintChar, NULL, _FDEV_SETUP_WRITE);
  //stdout = &mystdout;
	
	N11_CLS();
    163e:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <N11_CLS>
	
	//----------------------
	Splash();
    1642:	0e 94 c9 0a 	call	0x1592	; 0x1592 <Splash>
	BUZZER(OK_sign);
    1646:	81 e0       	ldi	r24, 0x01	; 1
    1648:	0e 94 23 07 	call	0xe46	; 0xe46 <BUZZER>

	//------------
	sei();												//Interrupts enabel	
    164c:	78 94       	sei
}	//Initial
    164e:	08 95       	ret

00001650 <test01>:


//---------------------------------------------------------//
//---------------------------------------------------------//
void test01(void)
{
    1650:	2f 92       	push	r2
    1652:	3f 92       	push	r3
    1654:	4f 92       	push	r4
    1656:	5f 92       	push	r5
    1658:	6f 92       	push	r6
    165a:	7f 92       	push	r7
    165c:	8f 92       	push	r8
    165e:	9f 92       	push	r9
    1660:	af 92       	push	r10
    1662:	bf 92       	push	r11
    1664:	cf 92       	push	r12
    1666:	df 92       	push	r13
    1668:	ef 92       	push	r14
    166a:	ff 92       	push	r15
    166c:	0f 93       	push	r16
    166e:	1f 93       	push	r17
    1670:	df 93       	push	r29
    1672:	cf 93       	push	r28
    1674:	cd b7       	in	r28, 0x3d	; 61
    1676:	de b7       	in	r29, 0x3e	; 62
    1678:	a2 97       	sbiw	r28, 0x22	; 34
    167a:	0f b6       	in	r0, 0x3f	; 63
    167c:	f8 94       	cli
    167e:	de bf       	out	0x3e, r29	; 62
    1680:	0f be       	out	0x3f, r0	; 63
    1682:	cd bf       	out	0x3d, r28	; 61

	unsigned int				FRQtemp;
	unsigned char				ACCtemp;
	unsigned char				DECtemp;

	SPWM_init();
    1684:	0e 94 af 11 	call	0x235e	; 0x235e <SPWM_init>
	
	ADC_CH_init(FRQ_ACH);
    1688:	a1 e6       	ldi	r26, 0x61	; 97
    168a:	b0 e0       	ldi	r27, 0x00	; 0
    168c:	8c 91       	ld	r24, X
    168e:	8e 7f       	andi	r24, 0xFE	; 254
    1690:	8c 93       	st	X, r24
    1692:	e2 e6       	ldi	r30, 0x62	; 98
    1694:	f0 e0       	ldi	r31, 0x00	; 0
    1696:	80 81       	ld	r24, Z
    1698:	8e 7f       	andi	r24, 0xFE	; 254
    169a:	80 83       	st	Z, r24
	ADC_CH_init(ACC_ACH);
    169c:	8c 91       	ld	r24, X
    169e:	8d 7f       	andi	r24, 0xFD	; 253
    16a0:	8c 93       	st	X, r24
    16a2:	80 81       	ld	r24, Z
    16a4:	8d 7f       	andi	r24, 0xFD	; 253
    16a6:	80 83       	st	Z, r24
	ADC_CH_init(DEC_ACH);
    16a8:	8c 91       	ld	r24, X
    16aa:	8b 7f       	andi	r24, 0xFB	; 251
    16ac:	8c 93       	st	X, r24
    16ae:	80 81       	ld	r24, Z
    16b0:	8b 7f       	andi	r24, 0xFB	; 251
    16b2:	80 83       	st	Z, r24
//---------------------------------------------------------//
void test01(void)
{
	unsigned char				LVflag 	= 0;
	unsigned int				TCRtemp = 0;
	unsigned char				i 			= 0;
    16b4:	44 24       	eor	r4, r4
//---------------------------------------------------------//
//---------------------------------------------------------//
void test01(void)
{
	unsigned char				LVflag 	= 0;
	unsigned int				TCRtemp = 0;
    16b6:	cc 24       	eor	r12, r12
    16b8:	dd 24       	eor	r13, r13

//---------------------------------------------------------//
//---------------------------------------------------------//
void test01(void)
{
	unsigned char				LVflag 	= 0;
    16ba:	ee 24       	eor	r14, r14
    else
    {     
     DIR_LED1_OFF;
     DIR_LED2_ON;
    }
    flags.dir_f^=1;
    16bc:	ff 24       	eor	r15, r15
    16be:	f3 94       	inc	r15
  
  case STOP_MODE:   // 0
   if((FAULT_PIN&(1<<FAULT_bp))==0)
   {
    old_key_code=key_code;
    mode=FAULT_MODE; // IR2130 fault condition
    16c0:	55 24       	eor	r5, r5
    16c2:	68 94       	set
    16c4:	51 f8       	bld	r5, 1
   }   
   else old_key_code=key_code;
   break;   
  }
  char str2[16];
   itoa(mode, str2, 10);
    16c6:	8e 01       	movw	r16, r28
    16c8:	0f 5f       	subi	r16, 0xFF	; 255
    16ca:	1f 4f       	sbci	r17, 0xFF	; 255
			//itoa();
  Lcd4_Init();
  Lcd4_Set_Cursor(1,1);
  sprintf(str2, "mode:%03d ", mode);
    16cc:	0f 2e       	mov	r0, r31
    16ce:	f2 e4       	ldi	r31, 0x42	; 66
    16d0:	af 2e       	mov	r10, r31
    16d2:	f1 e0       	ldi	r31, 0x01	; 1
    16d4:	bf 2e       	mov	r11, r31
    16d6:	f0 2d       	mov	r31, r0
			
			Lcd4_Set_Cursor(1,5);
			Lcd4_Write_String(str) ;   
			*/
			
			sprintf(Ctemp, "FRQ:%03d.%01dHz ", (FRQtemp/10), (FRQtemp%10));
    16d8:	0f 2e       	mov	r0, r31
    16da:	f4 ed       	ldi	r31, 0xD4	; 212
    16dc:	8f 2e       	mov	r8, r31
    16de:	f1 e0       	ldi	r31, 0x01	; 1
    16e0:	9f 2e       	mov	r9, r31
    16e2:	f0 2d       	mov	r31, r0
	ADC_CH_init(DEC_ACH);
	
	//----- main loop!
	while(1)  
	{	
  key_code=temp_key_code;
    16e4:	80 91 c3 01 	lds	r24, 0x01C3
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	90 93 f0 01 	sts	0x01F0, r25
    16ee:	80 93 ef 01 	sts	0x01EF, r24
  switch(mode)
    16f2:	20 91 c6 01 	lds	r18, 0x01C6
    16f6:	21 30       	cpi	r18, 0x01	; 1
    16f8:	09 f4       	brne	.+2      	; 0x16fc <test01+0xac>
    16fa:	4a c0       	rjmp	.+148    	; 0x1790 <test01+0x140>
    16fc:	21 30       	cpi	r18, 0x01	; 1
    16fe:	20 f0       	brcs	.+8      	; 0x1708 <test01+0xb8>
    1700:	22 30       	cpi	r18, 0x02	; 2
    1702:	09 f0       	breq	.+2      	; 0x1706 <test01+0xb6>
    1704:	af c0       	rjmp	.+350    	; 0x1864 <test01+0x214>
    1706:	94 c0       	rjmp	.+296    	; 0x1830 <test01+0x1e0>
  {
  
//----------------------------------------------------------------
  
  case STOP_MODE:   // 0
   if((FAULT_PIN&(1<<FAULT_bp))==0)
    1708:	81 99       	sbic	0x10, 1	; 16
    170a:	07 c0       	rjmp	.+14     	; 0x171a <test01+0xca>
   {
    old_key_code=key_code;
    170c:	90 93 ed 01 	sts	0x01ED, r25
    1710:	80 93 ec 01 	sts	0x01EC, r24
    mode=FAULT_MODE; // IR2130 fault condition
    1714:	50 92 c6 01 	sts	0x01C6, r5
    break;
    1718:	a5 c0       	rjmp	.+330    	; 0x1864 <test01+0x214>
   }
   if((key_code==RUN_CODE)&&(key_code!=old_key_code))
    171a:	00 97       	sbiw	r24, 0x00	; 0
    171c:	81 f4       	brne	.+32     	; 0x173e <test01+0xee>
    171e:	20 91 ec 01 	lds	r18, 0x01EC
    1722:	30 91 ed 01 	lds	r19, 0x01ED
    1726:	21 15       	cp	r18, r1
    1728:	31 05       	cpc	r19, r1
    172a:	49 f0       	breq	.+18     	; 0x173e <test01+0xee>
   {
    old_key_code=key_code;
    172c:	10 92 ed 01 	sts	0x01ED, r1
    1730:	10 92 ec 01 	sts	0x01EC, r1
    mode=RUN_MODE;
    1734:	f0 92 c6 01 	sts	0x01C6, r15
    RUN_LED_ON;
    1738:	92 98       	cbi	0x12, 2	; 18
    ENABLE_MOTOR;       
    173a:	90 9a       	sbi	0x12, 0	; 18
    173c:	93 c0       	rjmp	.+294    	; 0x1864 <test01+0x214>
   }
   else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
    173e:	82 30       	cpi	r24, 0x02	; 2
    1740:	91 05       	cpc	r25, r1
    1742:	09 f5       	brne	.+66     	; 0x1786 <test01+0x136>
    1744:	20 91 ec 01 	lds	r18, 0x01EC
    1748:	30 91 ed 01 	lds	r19, 0x01ED
    174c:	22 30       	cpi	r18, 0x02	; 2
    174e:	31 05       	cpc	r19, r1
    1750:	d1 f0       	breq	.+52     	; 0x1786 <test01+0x136>
   {
    old_key_code=key_code;
    1752:	82 e0       	ldi	r24, 0x02	; 2
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	90 93 ed 01 	sts	0x01ED, r25
    175a:	80 93 ec 01 	sts	0x01EC, r24
    if(flags.dir_f)
    175e:	80 91 ee 01 	lds	r24, 0x01EE
    1762:	80 ff       	sbrs	r24, 0
    1764:	03 c0       	rjmp	.+6      	; 0x176c <test01+0x11c>
    {     
     DIR_LED1_ON;
    1766:	93 98       	cbi	0x12, 3	; 18
     DIR_LED2_OFF;     
    1768:	94 9a       	sbi	0x12, 4	; 18
    176a:	02 c0       	rjmp	.+4      	; 0x1770 <test01+0x120>
    }
    else
    {     
     DIR_LED1_OFF;
    176c:	93 9a       	sbi	0x12, 3	; 18
     DIR_LED2_ON;
    176e:	94 98       	cbi	0x12, 4	; 18
    }
    flags.dir_f^=1;
    1770:	90 91 ee 01 	lds	r25, 0x01EE
    1774:	91 70       	andi	r25, 0x01	; 1
    1776:	9f 25       	eor	r25, r15
    1778:	80 91 ee 01 	lds	r24, 0x01EE
    177c:	8e 7f       	andi	r24, 0xFE	; 254
    177e:	89 2b       	or	r24, r25
    1780:	80 93 ee 01 	sts	0x01EE, r24
    1784:	6f c0       	rjmp	.+222    	; 0x1864 <test01+0x214>
   }
   else old_key_code=key_code;   
    1786:	90 93 ed 01 	sts	0x01ED, r25
    178a:	80 93 ec 01 	sts	0x01EC, r24
    178e:	6a c0       	rjmp	.+212    	; 0x1864 <test01+0x214>
   break;
  
//----------------------------------------------------------------
  
  case RUN_MODE:    //1
   if((FAULT_PIN&(1<<FAULT_bp))==0)
    1790:	81 99       	sbic	0x10, 1	; 16
    1792:	16 c0       	rjmp	.+44     	; 0x17c0 <test01+0x170>
   {
    DISABLE_MOTOR;
    1794:	90 98       	cbi	0x12, 0	; 18
    flags.deceleration_f=0;
    1796:	80 91 ee 01 	lds	r24, 0x01EE
    179a:	8d 7f       	andi	r24, 0xFD	; 253
    179c:	80 93 ee 01 	sts	0x01EE, r24
    flags.dir_change_f=0;
    17a0:	80 91 ee 01 	lds	r24, 0x01EE
    17a4:	8b 7f       	andi	r24, 0xFB	; 251
    17a6:	80 93 ee 01 	sts	0x01EE, r24
    old_key_code=key_code;
    17aa:	80 91 ef 01 	lds	r24, 0x01EF
    17ae:	90 91 f0 01 	lds	r25, 0x01F0
    17b2:	90 93 ed 01 	sts	0x01ED, r25
    17b6:	80 93 ec 01 	sts	0x01EC, r24
    mode=FAULT_MODE; // Fault condition
    17ba:	50 92 c6 01 	sts	0x01C6, r5
    break;
    17be:	52 c0       	rjmp	.+164    	; 0x1864 <test01+0x214>
   }
   if((key_code==STOP_CODE)&&(key_code!=old_key_code))
    17c0:	81 30       	cpi	r24, 0x01	; 1
    17c2:	91 05       	cpc	r25, r1
    17c4:	99 f4       	brne	.+38     	; 0x17ec <test01+0x19c>
    17c6:	20 91 ec 01 	lds	r18, 0x01EC
    17ca:	30 91 ed 01 	lds	r19, 0x01ED
    17ce:	21 30       	cpi	r18, 0x01	; 1
    17d0:	31 05       	cpc	r19, r1
    17d2:	61 f0       	breq	.+24     	; 0x17ec <test01+0x19c>
   {
    old_key_code=key_code;    
    17d4:	a1 e0       	ldi	r26, 0x01	; 1
    17d6:	b0 e0       	ldi	r27, 0x00	; 0
    17d8:	b0 93 ed 01 	sts	0x01ED, r27
    17dc:	a0 93 ec 01 	sts	0x01EC, r26
    flags.deceleration_f=1;    
    17e0:	80 91 ee 01 	lds	r24, 0x01EE
    17e4:	82 60       	ori	r24, 0x02	; 2
    17e6:	80 93 ee 01 	sts	0x01EE, r24
    17ea:	3c c0       	rjmp	.+120    	; 0x1864 <test01+0x214>
   }
   else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
    17ec:	82 30       	cpi	r24, 0x02	; 2
    17ee:	91 05       	cpc	r25, r1
    17f0:	d1 f4       	brne	.+52     	; 0x1826 <test01+0x1d6>
    17f2:	20 91 ec 01 	lds	r18, 0x01EC
    17f6:	30 91 ed 01 	lds	r19, 0x01ED
    17fa:	22 30       	cpi	r18, 0x02	; 2
    17fc:	31 05       	cpc	r19, r1
    17fe:	99 f0       	breq	.+38     	; 0x1826 <test01+0x1d6>
   {
    old_key_code=key_code;
    1800:	82 e0       	ldi	r24, 0x02	; 2
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	90 93 ed 01 	sts	0x01ED, r25
    1808:	80 93 ec 01 	sts	0x01EC, r24
    cli()   ; 
    180c:	f8 94       	cli
    flags.deceleration_f=1;
    180e:	80 91 ee 01 	lds	r24, 0x01EE
    1812:	82 60       	ori	r24, 0x02	; 2
    1814:	80 93 ee 01 	sts	0x01EE, r24
    flags.dir_change_f=1;
    1818:	80 91 ee 01 	lds	r24, 0x01EE
    181c:	84 60       	ori	r24, 0x04	; 4
    181e:	80 93 ee 01 	sts	0x01EE, r24
    sei() ;  
    1822:	78 94       	sei
    1824:	1f c0       	rjmp	.+62     	; 0x1864 <test01+0x214>
   }
   else old_key_code=key_code;
    1826:	90 93 ed 01 	sts	0x01ED, r25
    182a:	80 93 ec 01 	sts	0x01EC, r24
    182e:	1a c0       	rjmp	.+52     	; 0x1864 <test01+0x214>
//----------------------------------------------------------------
  
  case FAULT_MODE:  //   2
  
  
   if((FAULT_PIN&(1<<FAULT_bp))&&(key_code==STOP_CODE)&&(key_code!=old_key_code))    
    1830:	81 9b       	sbis	0x10, 1	; 16
    1832:	14 c0       	rjmp	.+40     	; 0x185c <test01+0x20c>
    1834:	81 30       	cpi	r24, 0x01	; 1
    1836:	91 05       	cpc	r25, r1
    1838:	89 f4       	brne	.+34     	; 0x185c <test01+0x20c>
    183a:	20 91 ec 01 	lds	r18, 0x01EC
    183e:	30 91 ed 01 	lds	r19, 0x01ED
    1842:	21 30       	cpi	r18, 0x01	; 1
    1844:	31 05       	cpc	r19, r1
    1846:	51 f0       	breq	.+20     	; 0x185c <test01+0x20c>
   {
     old_key_code=key_code;
    1848:	a1 e0       	ldi	r26, 0x01	; 1
    184a:	b0 e0       	ldi	r27, 0x00	; 0
    184c:	b0 93 ed 01 	sts	0x01ED, r27
    1850:	a0 93 ec 01 	sts	0x01EC, r26
     mode=STOP_MODE;
    1854:	10 92 c6 01 	sts	0x01C6, r1
     RUN_LED_OFF;
    1858:	92 9a       	sbi	0x12, 2	; 18
    185a:	04 c0       	rjmp	.+8      	; 0x1864 <test01+0x214>
   }   
   else old_key_code=key_code;
    185c:	90 93 ed 01 	sts	0x01ED, r25
    1860:	80 93 ec 01 	sts	0x01EC, r24
   break;   
  }
  char str2[16];
   itoa(mode, str2, 10);
    1864:	80 91 c6 01 	lds	r24, 0x01C6
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	b8 01       	movw	r22, r16
    186c:	4a e0       	ldi	r20, 0x0A	; 10
    186e:	50 e0       	ldi	r21, 0x00	; 0
    1870:	0e 94 08 13 	call	0x2610	; 0x2610 <itoa>
			//itoa();
  Lcd4_Init();
    1874:	0e 94 35 0a 	call	0x146a	; 0x146a <Lcd4_Init>
  Lcd4_Set_Cursor(1,1);
    1878:	8f 2d       	mov	r24, r15
    187a:	6f 2d       	mov	r22, r15
    187c:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
  sprintf(str2, "mode:%03d ", mode);
    1880:	80 91 c6 01 	lds	r24, 0x01C6
    1884:	00 d0       	rcall	.+0      	; 0x1886 <test01+0x236>
    1886:	00 d0       	rcall	.+0      	; 0x1888 <test01+0x238>
    1888:	00 d0       	rcall	.+0      	; 0x188a <test01+0x23a>
    188a:	ed b7       	in	r30, 0x3d	; 61
    188c:	fe b7       	in	r31, 0x3e	; 62
    188e:	31 96       	adiw	r30, 0x01	; 1
    1890:	ad b7       	in	r26, 0x3d	; 61
    1892:	be b7       	in	r27, 0x3e	; 62
    1894:	12 96       	adiw	r26, 0x02	; 2
    1896:	1c 93       	st	X, r17
    1898:	0e 93       	st	-X, r16
    189a:	11 97       	sbiw	r26, 0x01	; 1
    189c:	b3 82       	std	Z+3, r11	; 0x03
    189e:	a2 82       	std	Z+2, r10	; 0x02
    18a0:	84 83       	std	Z+4, r24	; 0x04
    18a2:	15 82       	std	Z+5, r1	; 0x05
    18a4:	0e 94 29 13 	call	0x2652	; 0x2652 <sprintf>
  Lcd4_Write_String(str2) ;
    18a8:	8d b7       	in	r24, 0x3d	; 61
    18aa:	9e b7       	in	r25, 0x3e	; 62
    18ac:	06 96       	adiw	r24, 0x06	; 6
    18ae:	0f b6       	in	r0, 0x3f	; 63
    18b0:	f8 94       	cli
    18b2:	9e bf       	out	0x3e, r25	; 62
    18b4:	0f be       	out	0x3f, r0	; 63
    18b6:	8d bf       	out	0x3d, r24	; 61
    18b8:	c8 01       	movw	r24, r16
    18ba:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
    18be:	a3 ec       	ldi	r26, 0xC3	; 195
    18c0:	b9 e0       	ldi	r27, 0x09	; 9
    18c2:	11 97       	sbiw	r26, 0x01	; 1
    18c4:	f1 f7       	brne	.-4      	; 0x18c2 <test01+0x272>
    18c6:	00 c0       	rjmp	.+0      	; 0x18c8 <test01+0x278>
    18c8:	00 00       	nop
  _delay_ms(10);
  	
		if((TCounter>=TCRtemp) &&  mode!=FAULT_MODE && mode!=STOP_MODE)//&& !bit_is_set(PORTD, 1))									//100mS //loop until fault is coming from portd.1 
    18ca:	80 91 cf 01 	lds	r24, 0x01CF
    18ce:	90 91 d0 01 	lds	r25, 0x01D0
    18d2:	8c 15       	cp	r24, r12
    18d4:	9d 05       	cpc	r25, r13
    18d6:	08 f4       	brcc	.+2      	; 0x18da <test01+0x28a>
    18d8:	c6 c0       	rjmp	.+396    	; 0x1a66 <test01+0x416>
    18da:	80 91 c6 01 	lds	r24, 0x01C6
    18de:	82 30       	cpi	r24, 0x02	; 2
    18e0:	09 f4       	brne	.+2      	; 0x18e4 <test01+0x294>
    18e2:	c1 c0       	rjmp	.+386    	; 0x1a66 <test01+0x416>
    18e4:	80 91 c6 01 	lds	r24, 0x01C6
    18e8:	88 23       	and	r24, r24
    18ea:	09 f4       	brne	.+2      	; 0x18ee <test01+0x29e>
    18ec:	bc c0       	rjmp	.+376    	; 0x1a66 <test01+0x416>
		{
			TCRtemp = TCounter +100;						//1mS x100
    18ee:	80 91 cf 01 	lds	r24, 0x01CF
    18f2:	90 91 d0 01 	lds	r25, 0x01D0
    18f6:	0f 2e       	mov	r0, r31
    18f8:	f4 e6       	ldi	r31, 0x64	; 100
    18fa:	cf 2e       	mov	r12, r31
    18fc:	dd 24       	eor	r13, r13
    18fe:	f0 2d       	mov	r31, r0
    1900:	c8 0e       	add	r12, r24
    1902:	d9 1e       	adc	r13, r25
			
			FRQtemp = a2dConvert10bit(FRQ_ACH);
    1904:	80 e0       	ldi	r24, 0x00	; 0
    1906:	0e 94 f4 06 	call	0xde8	; 0xde8 <a2dConvert10bit>
    190a:	1c 01       	movw	r2, r24
			ACCtemp = a2dConvert8bit(ACC_ACH);
    190c:	8f 2d       	mov	r24, r15
    190e:	0e 94 06 07 	call	0xe0c	; 0xe0c <a2dConvert8bit>
    1912:	78 2e       	mov	r7, r24
			DECtemp = a2dConvert8bit(DEC_ACH);
    1914:	85 2d       	mov	r24, r5
    1916:	0e 94 06 07 	call	0xe0c	; 0xe0c <a2dConvert8bit>
    191a:	68 2e       	mov	r6, r24
			
			//-------------------------------
			FRQtemp = SetFrequency(FRQtemp);
    191c:	c1 01       	movw	r24, r2
    191e:	0e 94 f5 11 	call	0x23ea	; 0x23ea <SetFrequency>
    1922:	1c 01       	movw	r2, r24
			ACCtemp = SetAcceleration(ACCtemp);
    1924:	87 2d       	mov	r24, r7
    1926:	0e 94 16 12 	call	0x242c	; 0x242c <SetAcceleration>
    192a:	89 a3       	std	Y+33, r24	; 0x21
			DECtemp = SetDeceleration(DECtemp);
    192c:	86 2d       	mov	r24, r6
    192e:	0e 94 21 12 	call	0x2442	; 0x2442 <SetDeceleration>
    1932:	8a a3       	std	Y+34, r24	; 0x22
			//-------------------------------
			
			float a;
			char str[16];

			a = (FRQtemp/10); // or some other calculation
    1934:	c1 01       	movw	r24, r2
    1936:	6a e0       	ldi	r22, 0x0A	; 10
    1938:	70 e0       	ldi	r23, 0x00	; 0
    193a:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <__udivmodhi4>
    193e:	3b 01       	movw	r6, r22
    1940:	1c 01       	movw	r2, r24
    1942:	80 e0       	ldi	r24, 0x00	; 0
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	0e 94 5d 12 	call	0x24ba	; 0x24ba <__floatunsisf>
			itoa(a, str, 10);
    194a:	0e 94 2c 12 	call	0x2458	; 0x2458 <__fixsfsi>
    194e:	dc 01       	movw	r26, r24
    1950:	cb 01       	movw	r24, r22
    1952:	be 01       	movw	r22, r28
    1954:	6f 5e       	subi	r22, 0xEF	; 239
    1956:	7f 4f       	sbci	r23, 0xFF	; 255
    1958:	4a e0       	ldi	r20, 0x0A	; 10
    195a:	50 e0       	ldi	r21, 0x00	; 0
    195c:	0e 94 08 13 	call	0x2610	; 0x2610 <itoa>
			//itoa();
			Lcd4_Init();
    1960:	0e 94 35 0a 	call	0x146a	; 0x146a <Lcd4_Init>
			
			Lcd4_Set_Cursor(1,5);
			Lcd4_Write_String(str) ;   
			*/
			
			sprintf(Ctemp, "FRQ:%03d.%01dHz ", (FRQtemp/10), (FRQtemp%10));
    1964:	8d b7       	in	r24, 0x3d	; 61
    1966:	9e b7       	in	r25, 0x3e	; 62
    1968:	08 97       	sbiw	r24, 0x08	; 8
    196a:	0f b6       	in	r0, 0x3f	; 63
    196c:	f8 94       	cli
    196e:	9e bf       	out	0x3e, r25	; 62
    1970:	0f be       	out	0x3f, r0	; 63
    1972:	8d bf       	out	0x3d, r24	; 61
    1974:	ed b7       	in	r30, 0x3d	; 61
    1976:	fe b7       	in	r31, 0x3e	; 62
    1978:	31 96       	adiw	r30, 0x01	; 1
    197a:	ad b7       	in	r26, 0x3d	; 61
    197c:	be b7       	in	r27, 0x3e	; 62
    197e:	12 96       	adiw	r26, 0x02	; 2
    1980:	9c 92       	st	X, r9
    1982:	8e 92       	st	-X, r8
    1984:	11 97       	sbiw	r26, 0x01	; 1
    1986:	8d e4       	ldi	r24, 0x4D	; 77
    1988:	91 e0       	ldi	r25, 0x01	; 1
    198a:	93 83       	std	Z+3, r25	; 0x03
    198c:	82 83       	std	Z+2, r24	; 0x02
    198e:	75 82       	std	Z+5, r7	; 0x05
    1990:	64 82       	std	Z+4, r6	; 0x04
    1992:	37 82       	std	Z+7, r3	; 0x07
    1994:	26 82       	std	Z+6, r2	; 0x06
    1996:	0e 94 29 13 	call	0x2652	; 0x2652 <sprintf>
			Lcd4_Set_Cursor(1,1);
    199a:	ad b7       	in	r26, 0x3d	; 61
    199c:	be b7       	in	r27, 0x3e	; 62
    199e:	18 96       	adiw	r26, 0x08	; 8
    19a0:	0f b6       	in	r0, 0x3f	; 63
    19a2:	f8 94       	cli
    19a4:	be bf       	out	0x3e, r27	; 62
    19a6:	0f be       	out	0x3f, r0	; 63
    19a8:	ad bf       	out	0x3d, r26	; 61
    19aa:	8f 2d       	mov	r24, r15
    19ac:	6f 2d       	mov	r22, r15
    19ae:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
			Lcd4_Write_String(Ctemp) ;
    19b2:	c4 01       	movw	r24, r8
    19b4:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
			
			//StringAt(1, 2, Ctemp);
			
			sprintf(Ctemp,"%03dS ", ACCtemp);
    19b8:	00 d0       	rcall	.+0      	; 0x19ba <test01+0x36a>
    19ba:	00 d0       	rcall	.+0      	; 0x19bc <test01+0x36c>
    19bc:	00 d0       	rcall	.+0      	; 0x19be <test01+0x36e>
    19be:	ed b7       	in	r30, 0x3d	; 61
    19c0:	fe b7       	in	r31, 0x3e	; 62
    19c2:	31 96       	adiw	r30, 0x01	; 1
    19c4:	ad b7       	in	r26, 0x3d	; 61
    19c6:	be b7       	in	r27, 0x3e	; 62
    19c8:	12 96       	adiw	r26, 0x02	; 2
    19ca:	9c 92       	st	X, r9
    19cc:	8e 92       	st	-X, r8
    19ce:	11 97       	sbiw	r26, 0x01	; 1
    19d0:	8e e5       	ldi	r24, 0x5E	; 94
    19d2:	91 e0       	ldi	r25, 0x01	; 1
    19d4:	93 83       	std	Z+3, r25	; 0x03
    19d6:	82 83       	std	Z+2, r24	; 0x02
    19d8:	99 a1       	ldd	r25, Y+33	; 0x21
    19da:	94 83       	std	Z+4, r25	; 0x04
    19dc:	15 82       	std	Z+5, r1	; 0x05
    19de:	0e 94 29 13 	call	0x2652	; 0x2652 <sprintf>
			Lcd4_Set_Cursor(1,13);
    19e2:	ad b7       	in	r26, 0x3d	; 61
    19e4:	be b7       	in	r27, 0x3e	; 62
    19e6:	16 96       	adiw	r26, 0x06	; 6
    19e8:	0f b6       	in	r0, 0x3f	; 63
    19ea:	f8 94       	cli
    19ec:	be bf       	out	0x3e, r27	; 62
    19ee:	0f be       	out	0x3f, r0	; 63
    19f0:	ad bf       	out	0x3d, r26	; 61
    19f2:	8f 2d       	mov	r24, r15
    19f4:	6d e0       	ldi	r22, 0x0D	; 13
    19f6:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
			Lcd4_Write_String("ACC:");
    19fa:	85 e6       	ldi	r24, 0x65	; 101
    19fc:	91 e0       	ldi	r25, 0x01	; 1
    19fe:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
			Lcd4_Set_Cursor(2,1);
    1a02:	85 2d       	mov	r24, r5
    1a04:	6f 2d       	mov	r22, r15
    1a06:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
			Lcd4_Write_String(Ctemp) ;
    1a0a:	c4 01       	movw	r24, r8
    1a0c:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
			
			//StringAt(3, 2, Ctemp);
	
			sprintf(Ctemp, "DEC:%03dS ", DECtemp);
    1a10:	00 d0       	rcall	.+0      	; 0x1a12 <test01+0x3c2>
    1a12:	00 d0       	rcall	.+0      	; 0x1a14 <test01+0x3c4>
    1a14:	00 d0       	rcall	.+0      	; 0x1a16 <test01+0x3c6>
    1a16:	ed b7       	in	r30, 0x3d	; 61
    1a18:	fe b7       	in	r31, 0x3e	; 62
    1a1a:	31 96       	adiw	r30, 0x01	; 1
    1a1c:	ad b7       	in	r26, 0x3d	; 61
    1a1e:	be b7       	in	r27, 0x3e	; 62
    1a20:	12 96       	adiw	r26, 0x02	; 2
    1a22:	9c 92       	st	X, r9
    1a24:	8e 92       	st	-X, r8
    1a26:	11 97       	sbiw	r26, 0x01	; 1
    1a28:	8a e6       	ldi	r24, 0x6A	; 106
    1a2a:	91 e0       	ldi	r25, 0x01	; 1
    1a2c:	93 83       	std	Z+3, r25	; 0x03
    1a2e:	82 83       	std	Z+2, r24	; 0x02
    1a30:	9a a1       	ldd	r25, Y+34	; 0x22
    1a32:	94 83       	std	Z+4, r25	; 0x04
    1a34:	15 82       	std	Z+5, r1	; 0x05
    1a36:	0e 94 29 13 	call	0x2652	; 0x2652 <sprintf>
			Lcd4_Set_Cursor(2,6);
    1a3a:	ad b7       	in	r26, 0x3d	; 61
    1a3c:	be b7       	in	r27, 0x3e	; 62
    1a3e:	16 96       	adiw	r26, 0x06	; 6
    1a40:	0f b6       	in	r0, 0x3f	; 63
    1a42:	f8 94       	cli
    1a44:	be bf       	out	0x3e, r27	; 62
    1a46:	0f be       	out	0x3f, r0	; 63
    1a48:	ad bf       	out	0x3d, r26	; 61
    1a4a:	85 2d       	mov	r24, r5
    1a4c:	66 e0       	ldi	r22, 0x06	; 6
    1a4e:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
			Lcd4_Write_String(Ctemp) ;
    1a52:	c4 01       	movw	r24, r8
    1a54:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
			//StringAt(5, 2, Ctemp);
			
			i++;
    1a58:	43 94       	inc	r4
			if(i==5)					{						LVflag = 1;		}
    1a5a:	b4 2d       	mov	r27, r4
    1a5c:	b5 30       	cpi	r27, 0x05	; 5
    1a5e:	99 f1       	breq	.+102    	; 0x1ac6 <test01+0x476>
			else if(i==10)		{	i = 0;		LVflag = 0;	}
    1a60:	ba 30       	cpi	r27, 0x0A	; 10
    1a62:	71 f5       	brne	.+92     	; 0x1ac0 <test01+0x470>
    1a64:	34 c0       	rjmp	.+104    	; 0x1ace <test01+0x47e>
		}
		else if( mode==FAULT_MODE)
    1a66:	80 91 c6 01 	lds	r24, 0x01C6
    1a6a:	82 30       	cpi	r24, 0x02	; 2
    1a6c:	99 f4       	brne	.+38     	; 0x1a94 <test01+0x444>
		{
		 Lcd4_Set_Cursor(1,1);
    1a6e:	8f 2d       	mov	r24, r15
    1a70:	6f 2d       	mov	r22, r15
    1a72:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
		Lcd4_Write_String("Fault accrued !!") ;	
    1a76:	85 e7       	ldi	r24, 0x75	; 117
    1a78:	91 e0       	ldi	r25, 0x01	; 1
    1a7a:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
		FRQtemp = SetFrequency(0);
    1a7e:	80 e0       	ldi	r24, 0x00	; 0
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	0e 94 f5 11 	call	0x23ea	; 0x23ea <SetFrequency>
			ACCtemp = SetAcceleration(1);
    1a86:	8f 2d       	mov	r24, r15
    1a88:	0e 94 16 12 	call	0x242c	; 0x242c <SetAcceleration>
			DECtemp = SetDeceleration(1);
    1a8c:	8f 2d       	mov	r24, r15
    1a8e:	0e 94 21 12 	call	0x2442	; 0x2442 <SetDeceleration>
    1a92:	16 c0       	rjmp	.+44     	; 0x1ac0 <test01+0x470>
		}
		else if( mode==STOP_MODE)
    1a94:	80 91 c6 01 	lds	r24, 0x01C6
    1a98:	88 23       	and	r24, r24
    1a9a:	91 f4       	brne	.+36     	; 0x1ac0 <test01+0x470>
		{
		 Lcd4_Set_Cursor(1,1);
    1a9c:	8f 2d       	mov	r24, r15
    1a9e:	6f 2d       	mov	r22, r15
    1aa0:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
		Lcd4_Write_String("STOP_MODE accrued !!") ;	
    1aa4:	86 e8       	ldi	r24, 0x86	; 134
    1aa6:	91 e0       	ldi	r25, 0x01	; 1
    1aa8:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
		FRQtemp = SetFrequency(0);
    1aac:	80 e0       	ldi	r24, 0x00	; 0
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	0e 94 f5 11 	call	0x23ea	; 0x23ea <SetFrequency>
			ACCtemp = SetAcceleration(1);
    1ab4:	8f 2d       	mov	r24, r15
    1ab6:	0e 94 16 12 	call	0x242c	; 0x242c <SetAcceleration>
			DECtemp = SetDeceleration(1);
    1aba:	8f 2d       	mov	r24, r15
    1abc:	0e 94 21 12 	call	0x2442	; 0x2442 <SetDeceleration>
		}
		
		GLED(LVflag);
    1ac0:	ee 20       	and	r14, r14
    1ac2:	31 f0       	breq	.+12     	; 0x1ad0 <test01+0x480>
    1ac4:	01 c0       	rjmp	.+2      	; 0x1ac8 <test01+0x478>
			Lcd4_Set_Cursor(2,6);
			Lcd4_Write_String(Ctemp) ;
			//StringAt(5, 2, Ctemp);
			
			i++;
			if(i==5)					{						LVflag = 1;		}
    1ac6:	ef 2c       	mov	r14, r15
		FRQtemp = SetFrequency(0);
			ACCtemp = SetAcceleration(1);
			DECtemp = SetDeceleration(1);
		}
		
		GLED(LVflag);
    1ac8:	ad 9a       	sbi	0x15, 5	; 21
    1aca:	85 b3       	in	r24, 0x15	; 21
    1acc:	0b ce       	rjmp	.-1002   	; 0x16e4 <test01+0x94>
			Lcd4_Write_String(Ctemp) ;
			//StringAt(5, 2, Ctemp);
			
			i++;
			if(i==5)					{						LVflag = 1;		}
			else if(i==10)		{	i = 0;		LVflag = 0;	}
    1ace:	44 24       	eor	r4, r4
		FRQtemp = SetFrequency(0);
			ACCtemp = SetAcceleration(1);
			DECtemp = SetDeceleration(1);
		}
		
		GLED(LVflag);
    1ad0:	ad 98       	cbi	0x15, 5	; 21
    1ad2:	85 b3       	in	r24, 0x15	; 21
    1ad4:	ee 24       	eor	r14, r14
    1ad6:	06 ce       	rjmp	.-1012   	; 0x16e4 <test01+0x94>

00001ad8 <LCD_0>:
dim LCD_D7_Direction as sbit at DDc7_bit

*/

//DDRD = 0xFF;
DDRC = 0xFF;
    1ad8:	8f ef       	ldi	r24, 0xFF	; 255
    1ada:	84 bb       	out	0x14, r24	; 20
int i;
Lcd4_Init();
    1adc:	0e 94 35 0a 	call	0x146a	; 0x146a <Lcd4_Init>
Lcd4_Set_Cursor(1,1);
    1ae0:	81 e0       	ldi	r24, 0x01	; 1
    1ae2:	61 e0       	ldi	r22, 0x01	; 1
    1ae4:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
Lcd4_Write_String("Elasa.ir Test");  
    1ae8:	8b e9       	ldi	r24, 0x9B	; 155
    1aea:	91 e0       	ldi	r25, 0x01	; 1
    1aec:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
	
}	
    1af0:	08 95       	ret

00001af2 <main>:
//	<<< main function >>>
//*****************************************************************************
void main(void)
{
	
	DDRE = (1<<PE4);     // put PortB bit 5 as input
    1af2:	80 e1       	ldi	r24, 0x10	; 16
    1af4:	82 b9       	out	0x02, r24	; 2
	PORTE = 1<<PE4;		// Enable PE4 pull-up resistor
    1af6:	83 b9       	out	0x03, r24	; 3
    EIMSK = (1<<INT4)| (1<<INT5)| (1<<INT6); // Enable INT0 External Interrupt
    1af8:	80 e7       	ldi	r24, 0x70	; 112
    1afa:	89 bf       	out	0x39, r24	; 57

	flags.dir_f=0;
    1afc:	80 91 ee 01 	lds	r24, 0x01EE
    1b00:	8e 7f       	andi	r24, 0xFE	; 254
    1b02:	80 93 ee 01 	sts	0x01EE, r24
	ENABLE_DDR|=1<<ENABLE_bp; // Turn on as output port
    1b06:	88 9a       	sbi	0x11, 0	; 17
    DISABLE_MOTOR;
    1b08:	90 98       	cbi	0x12, 0	; 18
 FAULT_PORT|=1<<FAULT_bp; // Turn on fault input pullup
    1b0a:	91 9a       	sbi	0x12, 1	; 18
 RUN_LED_DDR|=1<<RUN_LED_bp;
    1b0c:	8a 9a       	sbi	0x11, 2	; 17
 RUN_LED_OFF;
    1b0e:	92 9a       	sbi	0x12, 2	; 18
 DIR_LED1_DDR|=1<<DIR_LED1_bp;
    1b10:	8b 9a       	sbi	0x11, 3	; 17
 DIR_LED2_DDR|=1<<DIR_LED2_bp;
    1b12:	8c 9a       	sbi	0x11, 4	; 17
 DIR_LED1_ON;
    1b14:	93 98       	cbi	0x12, 3	; 18
 DIR_LED2_OFF;
    1b16:	94 9a       	sbi	0x12, 4	; 18
 KEY_PORT|=(1<<RUN_KEY_bp)|(1<<STOP_KEY_bp)|(1<<DIR_KEY_bp); // Turn on pullups 
    1b18:	83 b1       	in	r24, 0x03	; 3
    1b1a:	80 67       	ori	r24, 0x70	; 112
    1b1c:	83 b9       	out	0x03, r24	; 3
 
 flags.deceleration_f=flags.dir_change_f=0;flags.dir_f=1;
    1b1e:	80 91 ee 01 	lds	r24, 0x01EE
    1b22:	8b 7f       	andi	r24, 0xFB	; 251
    1b24:	80 93 ee 01 	sts	0x01EE, r24
    1b28:	80 91 ee 01 	lds	r24, 0x01EE
    1b2c:	86 95       	lsr	r24
    1b2e:	82 70       	andi	r24, 0x02	; 2
    1b30:	90 91 ee 01 	lds	r25, 0x01EE
    1b34:	9d 7f       	andi	r25, 0xFD	; 253
    1b36:	89 2b       	or	r24, r25
    1b38:	80 93 ee 01 	sts	0x01EE, r24
    1b3c:	80 91 ee 01 	lds	r24, 0x01EE
    1b40:	81 60       	ori	r24, 0x01	; 1
    1b42:	80 93 ee 01 	sts	0x01EE, r24
 
 cli(); 
    1b46:	f8 94       	cli
 sei();
    1b48:	78 94       	sei
	LCD_0();
    1b4a:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <LCD_0>
	Initial();
    1b4e:	0e 94 fd 0a 	call	0x15fa	; 0x15fa <Initial>
  Lcd4_Set_Cursor(1,1);
  Lcd4_Write_String(str) ;
  _delay_ms(100);
  */
  
  test01();
    1b52:	0e 94 28 0b 	call	0x1650	; 0x1650 <test01>
    1b56:	fd cf       	rjmp	.-6      	; 0x1b52 <main+0x60>

00001b58 <__vector_5>:
	
}	


//SIGNAL(SIG_INTERRUPT4) {
	ISR(INT4_vect){
    1b58:	1f 92       	push	r1
    1b5a:	0f 92       	push	r0
    1b5c:	0f b6       	in	r0, 0x3f	; 63
    1b5e:	0f 92       	push	r0
    1b60:	0b b6       	in	r0, 0x3b	; 59
    1b62:	0f 92       	push	r0
    1b64:	11 24       	eor	r1, r1
    1b66:	2f 93       	push	r18
    1b68:	3f 93       	push	r19
    1b6a:	4f 93       	push	r20
    1b6c:	5f 93       	push	r21
    1b6e:	6f 93       	push	r22
    1b70:	7f 93       	push	r23
    1b72:	8f 93       	push	r24
    1b74:	9f 93       	push	r25
    1b76:	af 93       	push	r26
    1b78:	bf 93       	push	r27
    1b7a:	ef 93       	push	r30
    1b7c:	ff 93       	push	r31

// SIG_INTERRUPT1 -> INT1 (PD3)

// While Button is pressed, LED is on

Lcd4_Init();
    1b7e:	0e 94 35 0a 	call	0x146a	; 0x146a <Lcd4_Init>
Lcd4_Set_Cursor(1,1);
    1b82:	81 e0       	ldi	r24, 0x01	; 1
    1b84:	61 e0       	ldi	r22, 0x01	; 1
    1b86:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
Lcd4_Write_String("RUN_MODE");  
    1b8a:	89 ea       	ldi	r24, 0xA9	; 169
    1b8c:	91 e0       	ldi	r25, 0x01	; 1
    1b8e:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
    1b92:	8f e4       	ldi	r24, 0x4F	; 79
    1b94:	93 ec       	ldi	r25, 0xC3	; 195
    1b96:	01 97       	sbiw	r24, 0x01	; 1
    1b98:	f1 f7       	brne	.-4      	; 0x1b96 <__vector_5+0x3e>
    1b9a:	00 c0       	rjmp	.+0      	; 0x1b9c <__vector_5+0x44>
    1b9c:	00 00       	nop
_delay_ms(200);

mode=RUN_MODE;
    1b9e:	81 e0       	ldi	r24, 0x01	; 1
    1ba0:	80 93 c6 01 	sts	0x01C6, r24
PORTB &= ~(1<<PB0);     // Put PortB bit 5 LOW

_delay_ms(10);
*/

}
    1ba4:	ff 91       	pop	r31
    1ba6:	ef 91       	pop	r30
    1ba8:	bf 91       	pop	r27
    1baa:	af 91       	pop	r26
    1bac:	9f 91       	pop	r25
    1bae:	8f 91       	pop	r24
    1bb0:	7f 91       	pop	r23
    1bb2:	6f 91       	pop	r22
    1bb4:	5f 91       	pop	r21
    1bb6:	4f 91       	pop	r20
    1bb8:	3f 91       	pop	r19
    1bba:	2f 91       	pop	r18
    1bbc:	0f 90       	pop	r0
    1bbe:	0b be       	out	0x3b, r0	; 59
    1bc0:	0f 90       	pop	r0
    1bc2:	0f be       	out	0x3f, r0	; 63
    1bc4:	0f 90       	pop	r0
    1bc6:	1f 90       	pop	r1
    1bc8:	18 95       	reti

00001bca <__vector_6>:

SIGNAL(SIG_INTERRUPT5) {
    1bca:	1f 92       	push	r1
    1bcc:	0f 92       	push	r0
    1bce:	0f b6       	in	r0, 0x3f	; 63
    1bd0:	0f 92       	push	r0
    1bd2:	0b b6       	in	r0, 0x3b	; 59
    1bd4:	0f 92       	push	r0
    1bd6:	11 24       	eor	r1, r1
    1bd8:	2f 93       	push	r18
    1bda:	3f 93       	push	r19
    1bdc:	4f 93       	push	r20
    1bde:	5f 93       	push	r21
    1be0:	6f 93       	push	r22
    1be2:	7f 93       	push	r23
    1be4:	8f 93       	push	r24
    1be6:	9f 93       	push	r25
    1be8:	af 93       	push	r26
    1bea:	bf 93       	push	r27
    1bec:	ef 93       	push	r30
    1bee:	ff 93       	push	r31

// SIG_INTERRUPT1 -> INT1 (PD3)

// While Button is pressed, LED is on

Lcd4_Init();
    1bf0:	0e 94 35 0a 	call	0x146a	; 0x146a <Lcd4_Init>
Lcd4_Set_Cursor(1,1);
    1bf4:	81 e0       	ldi	r24, 0x01	; 1
    1bf6:	61 e0       	ldi	r22, 0x01	; 1
    1bf8:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
Lcd4_Write_String("Stop on");  
    1bfc:	82 eb       	ldi	r24, 0xB2	; 178
    1bfe:	91 e0       	ldi	r25, 0x01	; 1
    1c00:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
    1c04:	8f e4       	ldi	r24, 0x4F	; 79
    1c06:	93 ec       	ldi	r25, 0xC3	; 195
    1c08:	01 97       	sbiw	r24, 0x01	; 1
    1c0a:	f1 f7       	brne	.-4      	; 0x1c08 <__vector_6+0x3e>
    1c0c:	00 c0       	rjmp	.+0      	; 0x1c0e <__vector_6+0x44>
    1c0e:	00 00       	nop
_delay_ms(200);
mode=STOP_MODE;
    1c10:	10 92 c6 01 	sts	0x01C6, r1
//RUN_LED_OFF;

}
    1c14:	ff 91       	pop	r31
    1c16:	ef 91       	pop	r30
    1c18:	bf 91       	pop	r27
    1c1a:	af 91       	pop	r26
    1c1c:	9f 91       	pop	r25
    1c1e:	8f 91       	pop	r24
    1c20:	7f 91       	pop	r23
    1c22:	6f 91       	pop	r22
    1c24:	5f 91       	pop	r21
    1c26:	4f 91       	pop	r20
    1c28:	3f 91       	pop	r19
    1c2a:	2f 91       	pop	r18
    1c2c:	0f 90       	pop	r0
    1c2e:	0b be       	out	0x3b, r0	; 59
    1c30:	0f 90       	pop	r0
    1c32:	0f be       	out	0x3f, r0	; 63
    1c34:	0f 90       	pop	r0
    1c36:	1f 90       	pop	r1
    1c38:	18 95       	reti

00001c3a <__vector_7>:

SIGNAL(SIG_INTERRUPT6) {
    1c3a:	1f 92       	push	r1
    1c3c:	0f 92       	push	r0
    1c3e:	0f b6       	in	r0, 0x3f	; 63
    1c40:	0f 92       	push	r0
    1c42:	0b b6       	in	r0, 0x3b	; 59
    1c44:	0f 92       	push	r0
    1c46:	11 24       	eor	r1, r1
    1c48:	2f 93       	push	r18
    1c4a:	3f 93       	push	r19
    1c4c:	4f 93       	push	r20
    1c4e:	5f 93       	push	r21
    1c50:	6f 93       	push	r22
    1c52:	7f 93       	push	r23
    1c54:	8f 93       	push	r24
    1c56:	9f 93       	push	r25
    1c58:	af 93       	push	r26
    1c5a:	bf 93       	push	r27
    1c5c:	ef 93       	push	r30
    1c5e:	ff 93       	push	r31

// SIG_INTERRUPT1 -> INT1 (PD3)

// While Button is pressed, LED is on

Lcd4_Init();
    1c60:	0e 94 35 0a 	call	0x146a	; 0x146a <Lcd4_Init>
Lcd4_Set_Cursor(1,1);
    1c64:	81 e0       	ldi	r24, 0x01	; 1
    1c66:	61 e0       	ldi	r22, 0x01	; 1
    1c68:	0e 94 17 0a 	call	0x142e	; 0x142e <Lcd4_Set_Cursor>
Lcd4_Write_String("DIR_CODE");  
    1c6c:	8a eb       	ldi	r24, 0xBA	; 186
    1c6e:	91 e0       	ldi	r25, 0x01	; 1
    1c70:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Lcd4_Write_String>
    1c74:	8f e4       	ldi	r24, 0x4F	; 79
    1c76:	93 ec       	ldi	r25, 0xC3	; 195
    1c78:	01 97       	sbiw	r24, 0x01	; 1
    1c7a:	f1 f7       	brne	.-4      	; 0x1c78 <__vector_7+0x3e>
    1c7c:	00 c0       	rjmp	.+0      	; 0x1c7e <__vector_7+0x44>
    1c7e:	00 00       	nop
_delay_ms(200);
key_code==DIR_CODE;

    1c80:	ff 91       	pop	r31
    1c82:	ef 91       	pop	r30
    1c84:	bf 91       	pop	r27
    1c86:	af 91       	pop	r26
    1c88:	9f 91       	pop	r25
    1c8a:	8f 91       	pop	r24
    1c8c:	7f 91       	pop	r23
    1c8e:	6f 91       	pop	r22
    1c90:	5f 91       	pop	r21
    1c92:	4f 91       	pop	r20
    1c94:	3f 91       	pop	r19
    1c96:	2f 91       	pop	r18
    1c98:	0f 90       	pop	r0
    1c9a:	0b be       	out	0x3b, r0	; 59
    1c9c:	0f 90       	pop	r0
    1c9e:	0f be       	out	0x3f, r0	; 63
    1ca0:	0f 90       	pop	r0
    1ca2:	1f 90       	pop	r1
    1ca4:	18 95       	reti

00001ca6 <N11_Write>:
    1ca6:	df 93       	push	r29
    1ca8:	cf 93       	push	r28
    1caa:	0f 92       	push	r0
    1cac:	cd b7       	in	r28, 0x3d	; 61
    1cae:	de b7       	in	r29, 0x3e	; 62
    1cb0:	69 83       	std	Y+1, r22	; 0x01
    1cb2:	ab 98       	cbi	0x15, 3	; 21
    1cb4:	a8 98       	cbi	0x15, 0	; 21
    1cb6:	88 23       	and	r24, r24
    1cb8:	19 f0       	breq	.+6      	; 0x1cc0 <N11_Write+0x1a>
    1cba:	a9 9a       	sbi	0x15, 1	; 21
    1cbc:	85 b3       	in	r24, 0x15	; 21
    1cbe:	02 c0       	rjmp	.+4      	; 0x1cc4 <N11_Write+0x1e>
    1cc0:	a9 98       	cbi	0x15, 1	; 21
    1cc2:	85 b3       	in	r24, 0x15	; 21
    1cc4:	a8 9a       	sbi	0x15, 0	; 21
    1cc6:	87 e0       	ldi	r24, 0x07	; 7
    1cc8:	90 e0       	ldi	r25, 0x00	; 0
    1cca:	fe 01       	movw	r30, r28
    1ccc:	31 96       	adiw	r30, 0x01	; 1
    1cce:	a8 98       	cbi	0x15, 0	; 21
    1cd0:	20 81       	ld	r18, Z
    1cd2:	30 e0       	ldi	r19, 0x00	; 0
    1cd4:	08 2e       	mov	r0, r24
    1cd6:	02 c0       	rjmp	.+4      	; 0x1cdc <N11_Write+0x36>
    1cd8:	35 95       	asr	r19
    1cda:	27 95       	ror	r18
    1cdc:	0a 94       	dec	r0
    1cde:	e2 f7       	brpl	.-8      	; 0x1cd8 <N11_Write+0x32>
    1ce0:	20 ff       	sbrs	r18, 0
    1ce2:	03 c0       	rjmp	.+6      	; 0x1cea <N11_Write+0x44>
    1ce4:	a9 9a       	sbi	0x15, 1	; 21
    1ce6:	25 b3       	in	r18, 0x15	; 21
    1ce8:	02 c0       	rjmp	.+4      	; 0x1cee <N11_Write+0x48>
    1cea:	a9 98       	cbi	0x15, 1	; 21
    1cec:	25 b3       	in	r18, 0x15	; 21
    1cee:	a8 9a       	sbi	0x15, 0	; 21
    1cf0:	01 97       	sbiw	r24, 0x01	; 1
    1cf2:	2f ef       	ldi	r18, 0xFF	; 255
    1cf4:	8f 3f       	cpi	r24, 0xFF	; 255
    1cf6:	92 07       	cpc	r25, r18
    1cf8:	51 f7       	brne	.-44     	; 0x1cce <N11_Write+0x28>
    1cfa:	ab 9a       	sbi	0x15, 3	; 21
    1cfc:	0f 90       	pop	r0
    1cfe:	cf 91       	pop	r28
    1d00:	df 91       	pop	r29
    1d02:	08 95       	ret

00001d04 <N11_GotoXR>:
    1d04:	1f 93       	push	r17
    1d06:	18 2f       	mov	r17, r24
    1d08:	6f 70       	andi	r22, 0x0F	; 15
    1d0a:	60 6b       	ori	r22, 0xB0	; 176
    1d0c:	80 e0       	ldi	r24, 0x00	; 0
    1d0e:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1d12:	61 2f       	mov	r22, r17
    1d14:	6f 70       	andi	r22, 0x0F	; 15
    1d16:	80 e0       	ldi	r24, 0x00	; 0
    1d18:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1d1c:	61 2f       	mov	r22, r17
    1d1e:	62 95       	swap	r22
    1d20:	6f 70       	andi	r22, 0x0F	; 15
    1d22:	67 70       	andi	r22, 0x07	; 7
    1d24:	60 61       	ori	r22, 0x10	; 16
    1d26:	80 e0       	ldi	r24, 0x00	; 0
    1d28:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1d2c:	1f 91       	pop	r17
    1d2e:	08 95       	ret

00001d30 <N11_CLS>:
    1d30:	ff 92       	push	r15
    1d32:	0f 93       	push	r16
    1d34:	1f 93       	push	r17
    1d36:	80 e0       	ldi	r24, 0x00	; 0
    1d38:	60 e0       	ldi	r22, 0x00	; 0
    1d3a:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <N11_GotoXR>
    1d3e:	80 e0       	ldi	r24, 0x00	; 0
    1d40:	6e ea       	ldi	r22, 0xAE	; 174
    1d42:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1d46:	00 e0       	ldi	r16, 0x00	; 0
    1d48:	0f 2e       	mov	r0, r31
    1d4a:	f0 e6       	ldi	r31, 0x60	; 96
    1d4c:	ff 2e       	mov	r15, r31
    1d4e:	f0 2d       	mov	r31, r0
    1d50:	09 c0       	rjmp	.+18     	; 0x1d64 <N11_CLS+0x34>
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	60 e0       	ldi	r22, 0x00	; 0
    1d56:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1d5a:	11 50       	subi	r17, 0x01	; 1
    1d5c:	d1 f7       	brne	.-12     	; 0x1d52 <N11_CLS+0x22>
    1d5e:	0f 5f       	subi	r16, 0xFF	; 255
    1d60:	09 30       	cpi	r16, 0x09	; 9
    1d62:	11 f0       	breq	.+4      	; 0x1d68 <N11_CLS+0x38>
    1d64:	1f 2d       	mov	r17, r15
    1d66:	f5 cf       	rjmp	.-22     	; 0x1d52 <N11_CLS+0x22>
    1d68:	80 e0       	ldi	r24, 0x00	; 0
    1d6a:	6f ea       	ldi	r22, 0xAF	; 175
    1d6c:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1d70:	1f 91       	pop	r17
    1d72:	0f 91       	pop	r16
    1d74:	ff 90       	pop	r15
    1d76:	08 95       	ret

00001d78 <N11_Init>:
    1d78:	a3 9a       	sbi	0x14, 3	; 20
    1d7a:	ab 9a       	sbi	0x15, 3	; 21
    1d7c:	a1 9a       	sbi	0x14, 1	; 20
    1d7e:	a9 98       	cbi	0x15, 1	; 21
    1d80:	a0 9a       	sbi	0x14, 0	; 20
    1d82:	a8 98       	cbi	0x15, 0	; 21
    1d84:	a2 9a       	sbi	0x14, 2	; 20
    1d86:	aa 98       	cbi	0x15, 2	; 21
    1d88:	ab 98       	cbi	0x15, 3	; 21
    1d8a:	83 ed       	ldi	r24, 0xD3	; 211
    1d8c:	90 e3       	ldi	r25, 0x30	; 48
    1d8e:	01 97       	sbiw	r24, 0x01	; 1
    1d90:	f1 f7       	brne	.-4      	; 0x1d8e <N11_Init+0x16>
    1d92:	00 c0       	rjmp	.+0      	; 0x1d94 <N11_Init+0x1c>
    1d94:	00 00       	nop
    1d96:	aa 9a       	sbi	0x15, 2	; 21
    1d98:	80 e0       	ldi	r24, 0x00	; 0
    1d9a:	63 e2       	ldi	r22, 0x23	; 35
    1d9c:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1da0:	80 e0       	ldi	r24, 0x00	; 0
    1da2:	60 e9       	ldi	r22, 0x90	; 144
    1da4:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1da8:	80 e0       	ldi	r24, 0x00	; 0
    1daa:	64 ea       	ldi	r22, 0xA4	; 164
    1dac:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1db0:	80 e0       	ldi	r24, 0x00	; 0
    1db2:	6f e2       	ldi	r22, 0x2F	; 47
    1db4:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1db8:	80 e0       	ldi	r24, 0x00	; 0
    1dba:	60 e4       	ldi	r22, 0x40	; 64
    1dbc:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1dc0:	80 e0       	ldi	r24, 0x00	; 0
    1dc2:	60 eb       	ldi	r22, 0xB0	; 176
    1dc4:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1dc8:	80 e0       	ldi	r24, 0x00	; 0
    1dca:	60 e1       	ldi	r22, 0x10	; 16
    1dcc:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1dd0:	80 e0       	ldi	r24, 0x00	; 0
    1dd2:	60 e0       	ldi	r22, 0x00	; 0
    1dd4:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1dd8:	80 e0       	ldi	r24, 0x00	; 0
    1dda:	68 ec       	ldi	r22, 0xC8	; 200
    1ddc:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1de0:	80 e0       	ldi	r24, 0x00	; 0
    1de2:	61 ea       	ldi	r22, 0xA1	; 161
    1de4:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	6c ea       	ldi	r22, 0xAC	; 172
    1dec:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1df0:	80 e0       	ldi	r24, 0x00	; 0
    1df2:	67 e0       	ldi	r22, 0x07	; 7
    1df4:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1df8:	80 e0       	ldi	r24, 0x00	; 0
    1dfa:	6f ea       	ldi	r22, 0xAF	; 175
    1dfc:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1e00:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <N11_CLS>
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	67 ea       	ldi	r22, 0xA7	; 167
    1e08:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1e0c:	8f e9       	ldi	r24, 0x9F	; 159
    1e0e:	96 e8       	ldi	r25, 0x86	; 134
    1e10:	a1 e0       	ldi	r26, 0x01	; 1
    1e12:	81 50       	subi	r24, 0x01	; 1
    1e14:	90 40       	sbci	r25, 0x00	; 0
    1e16:	a0 40       	sbci	r26, 0x00	; 0
    1e18:	e1 f7       	brne	.-8      	; 0x1e12 <N11_Init+0x9a>
    1e1a:	00 c0       	rjmp	.+0      	; 0x1e1c <N11_Init+0xa4>
    1e1c:	00 00       	nop
    1e1e:	80 e0       	ldi	r24, 0x00	; 0
    1e20:	66 ea       	ldi	r22, 0xA6	; 166
    1e22:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1e26:	8f e9       	ldi	r24, 0x9F	; 159
    1e28:	96 e8       	ldi	r25, 0x86	; 134
    1e2a:	a1 e0       	ldi	r26, 0x01	; 1
    1e2c:	81 50       	subi	r24, 0x01	; 1
    1e2e:	90 40       	sbci	r25, 0x00	; 0
    1e30:	a0 40       	sbci	r26, 0x00	; 0
    1e32:	e1 f7       	brne	.-8      	; 0x1e2c <N11_Init+0xb4>
    1e34:	00 c0       	rjmp	.+0      	; 0x1e36 <N11_Init+0xbe>
    1e36:	00 00       	nop
    1e38:	08 95       	ret

00001e3a <N11_Update>:
    1e3a:	08 95       	ret

00001e3c <N11_Contrast>:
    1e3c:	1f 93       	push	r17
    1e3e:	18 2f       	mov	r17, r24
    1e40:	80 e0       	ldi	r24, 0x00	; 0
    1e42:	61 e2       	ldi	r22, 0x21	; 33
    1e44:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1e48:	61 2f       	mov	r22, r17
    1e4a:	60 68       	ori	r22, 0x80	; 128
    1e4c:	80 e0       	ldi	r24, 0x00	; 0
    1e4e:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1e52:	80 e0       	ldi	r24, 0x00	; 0
    1e54:	60 e2       	ldi	r22, 0x20	; 32
    1e56:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1e5a:	1f 91       	pop	r17
    1e5c:	08 95       	ret

00001e5e <N11_Backlight>:
    1e5e:	08 95       	ret

00001e60 <N11_SetPixel>:
    1e60:	08 95       	ret

00001e62 <N11_ReadPixel>:
    1e62:	08 95       	ret

00001e64 <N11_FillRect>:
    1e64:	08 95       	ret

00001e66 <N11_DrawBitmap>:
    1e66:	08 95       	ret

00001e68 <N11_PrintChar>:
    1e68:	0f 93       	push	r16
    1e6a:	1f 93       	push	r17
    1e6c:	cf 93       	push	r28
    1e6e:	df 93       	push	r29
    1e70:	05 e0       	ldi	r16, 0x05	; 5
    1e72:	80 9f       	mul	r24, r16
    1e74:	80 01       	movw	r16, r0
    1e76:	11 24       	eor	r1, r1
    1e78:	e8 01       	movw	r28, r16
    1e7a:	c4 51       	subi	r28, 0x14	; 20
    1e7c:	d0 40       	sbci	r29, 0x00	; 0
    1e7e:	0f 50       	subi	r16, 0x0F	; 15
    1e80:	10 40       	sbci	r17, 0x00	; 0
    1e82:	fe 01       	movw	r30, r28
    1e84:	64 91       	lpm	r22, Z+
    1e86:	66 0f       	add	r22, r22
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1e8e:	21 96       	adiw	r28, 0x01	; 1
    1e90:	c0 17       	cp	r28, r16
    1e92:	d1 07       	cpc	r29, r17
    1e94:	b1 f7       	brne	.-20     	; 0x1e82 <N11_PrintChar+0x1a>
    1e96:	81 e0       	ldi	r24, 0x01	; 1
    1e98:	60 e0       	ldi	r22, 0x00	; 0
    1e9a:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1e9e:	df 91       	pop	r29
    1ea0:	cf 91       	pop	r28
    1ea2:	1f 91       	pop	r17
    1ea4:	0f 91       	pop	r16
    1ea6:	08 95       	ret

00001ea8 <N11_PrintString>:
    1ea8:	cf 93       	push	r28
    1eaa:	df 93       	push	r29
    1eac:	ec 01       	movw	r28, r24
    1eae:	80 e0       	ldi	r24, 0x00	; 0
    1eb0:	6e ea       	ldi	r22, 0xAE	; 174
    1eb2:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1eb6:	88 81       	ld	r24, Y
    1eb8:	88 23       	and	r24, r24
    1eba:	31 f0       	breq	.+12     	; 0x1ec8 <N11_PrintString+0x20>
    1ebc:	21 96       	adiw	r28, 0x01	; 1
    1ebe:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <N11_PrintChar>
    1ec2:	89 91       	ld	r24, Y+
    1ec4:	88 23       	and	r24, r24
    1ec6:	d9 f7       	brne	.-10     	; 0x1ebe <N11_PrintString+0x16>
    1ec8:	80 e0       	ldi	r24, 0x00	; 0
    1eca:	6f ea       	ldi	r22, 0xAF	; 175
    1ecc:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <N11_Write>
    1ed0:	df 91       	pop	r29
    1ed2:	cf 91       	pop	r28
    1ed4:	08 95       	ret

00001ed6 <A_calc>:
unsigned char A_calc(unsigned char sine, unsigned char Ain)
{
	unsigned int 						sine_temp;
	unsigned char 					sine1;
 
	sine1 = (sine<128)? ~sine : sine;
    1ed6:	88 23       	and	r24, r24
    1ed8:	c4 f0       	brlt	.+48     	; 0x1f0a <A_calc+0x34>
    1eda:	80 95       	com	r24
 
	sine_temp   = ((unsigned int)sine1) <<1;
    1edc:	28 2f       	mov	r18, r24
    1ede:	30 e0       	ldi	r19, 0x00	; 0
    1ee0:	22 0f       	add	r18, r18
    1ee2:	33 1f       	adc	r19, r19
	sine_temp  -= 255;
    1ee4:	2f 5f       	subi	r18, 0xFF	; 255
    1ee6:	30 40       	sbci	r19, 0x00	; 0
	sine_temp  *= Ain;
    1ee8:	70 e0       	ldi	r23, 0x00	; 0
    1eea:	26 9f       	mul	r18, r22
    1eec:	c0 01       	movw	r24, r0
    1eee:	27 9f       	mul	r18, r23
    1ef0:	90 0d       	add	r25, r0
    1ef2:	36 9f       	mul	r19, r22
    1ef4:	90 0d       	add	r25, r0
    1ef6:	11 24       	eor	r1, r1
	sine_temp >>= 8;
    1ef8:	89 2f       	mov	r24, r25
    1efa:	99 27       	eor	r25, r25
	sine_temp  += 255;
    1efc:	81 50       	subi	r24, 0x01	; 1
    1efe:	9f 4f       	sbci	r25, 0xFF	; 255
	sine_temp >>= 1;
    1f00:	96 95       	lsr	r25
    1f02:	87 95       	ror	r24
	sine_temp  += 1;
 
	sine1 = (unsigned char)sine_temp;
    1f04:	8f 5f       	subi	r24, 0xFF	; 255
 
	return((sine<128)? ~sine1 : sine1);
    1f06:	80 95       	com	r24
}	//A_calc
    1f08:	08 95       	ret
	unsigned int 						sine_temp;
	unsigned char 					sine1;
 
	sine1 = (sine<128)? ~sine : sine;
 
	sine_temp   = ((unsigned int)sine1) <<1;
    1f0a:	28 2f       	mov	r18, r24
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	22 0f       	add	r18, r18
    1f10:	33 1f       	adc	r19, r19
	sine_temp  -= 255;
    1f12:	2f 5f       	subi	r18, 0xFF	; 255
    1f14:	30 40       	sbci	r19, 0x00	; 0
	sine_temp  *= Ain;
    1f16:	70 e0       	ldi	r23, 0x00	; 0
    1f18:	26 9f       	mul	r18, r22
    1f1a:	c0 01       	movw	r24, r0
    1f1c:	27 9f       	mul	r18, r23
    1f1e:	90 0d       	add	r25, r0
    1f20:	36 9f       	mul	r19, r22
    1f22:	90 0d       	add	r25, r0
    1f24:	11 24       	eor	r1, r1
	sine_temp >>= 8;
    1f26:	89 2f       	mov	r24, r25
    1f28:	99 27       	eor	r25, r25
	sine_temp  += 255;
    1f2a:	81 50       	subi	r24, 0x01	; 1
    1f2c:	9f 4f       	sbci	r25, 0xFF	; 255
	sine_temp >>= 1;
    1f2e:	96 95       	lsr	r25
    1f30:	87 95       	ror	r24
	sine_temp  += 1;
 
	sine1 = (unsigned char)sine_temp;
    1f32:	8f 5f       	subi	r24, 0xFF	; 255
    1f34:	08 95       	ret

00001f36 <__vector_26>:
	return((sine<128)? ~sine1 : sine1);
}	//A_calc

//-----------------------------------------------------------------------------
ISR_PWM_SET()
{
    1f36:	1f 92       	push	r1
    1f38:	0f 92       	push	r0
    1f3a:	0f b6       	in	r0, 0x3f	; 63
    1f3c:	0f 92       	push	r0
    1f3e:	0b b6       	in	r0, 0x3b	; 59
    1f40:	0f 92       	push	r0
    1f42:	11 24       	eor	r1, r1
    1f44:	ef 92       	push	r14
    1f46:	ff 92       	push	r15
    1f48:	0f 93       	push	r16
    1f4a:	1f 93       	push	r17
    1f4c:	2f 93       	push	r18
    1f4e:	3f 93       	push	r19
    1f50:	4f 93       	push	r20
    1f52:	5f 93       	push	r21
    1f54:	6f 93       	push	r22
    1f56:	7f 93       	push	r23
    1f58:	8f 93       	push	r24
    1f5a:	9f 93       	push	r25
    1f5c:	af 93       	push	r26
    1f5e:	bf 93       	push	r27
    1f60:	ef 93       	push	r30
    1f62:	ff 93       	push	r31
	unsigned long 				A;

	if 			(speed>795)				index += 16;
    1f64:	80 91 cb 01 	lds	r24, 0x01CB
    1f68:	90 91 cc 01 	lds	r25, 0x01CC
    1f6c:	23 e0       	ldi	r18, 0x03	; 3
    1f6e:	8c 31       	cpi	r24, 0x1C	; 28
    1f70:	92 07       	cpc	r25, r18
    1f72:	30 f0       	brcs	.+12     	; 0x1f80 <__vector_26+0x4a>
    1f74:	80 91 cd 01 	lds	r24, 0x01CD
    1f78:	80 5f       	subi	r24, 0xF0	; 240
    1f7a:	80 93 cd 01 	sts	0x01CD, r24
    1f7e:	2e c0       	rjmp	.+92     	; 0x1fdc <__vector_26+0xa6>
	else if	(speed>595)				index += 8;
    1f80:	80 91 cb 01 	lds	r24, 0x01CB
    1f84:	90 91 cc 01 	lds	r25, 0x01CC
    1f88:	22 e0       	ldi	r18, 0x02	; 2
    1f8a:	84 35       	cpi	r24, 0x54	; 84
    1f8c:	92 07       	cpc	r25, r18
    1f8e:	30 f0       	brcs	.+12     	; 0x1f9c <__vector_26+0x66>
    1f90:	80 91 cd 01 	lds	r24, 0x01CD
    1f94:	88 5f       	subi	r24, 0xF8	; 248
    1f96:	80 93 cd 01 	sts	0x01CD, r24
    1f9a:	20 c0       	rjmp	.+64     	; 0x1fdc <__vector_26+0xa6>
	else if	(speed>395)				index += 4;
    1f9c:	80 91 cb 01 	lds	r24, 0x01CB
    1fa0:	90 91 cc 01 	lds	r25, 0x01CC
    1fa4:	21 e0       	ldi	r18, 0x01	; 1
    1fa6:	8c 38       	cpi	r24, 0x8C	; 140
    1fa8:	92 07       	cpc	r25, r18
    1faa:	30 f0       	brcs	.+12     	; 0x1fb8 <__vector_26+0x82>
    1fac:	80 91 cd 01 	lds	r24, 0x01CD
    1fb0:	8c 5f       	subi	r24, 0xFC	; 252
    1fb2:	80 93 cd 01 	sts	0x01CD, r24
    1fb6:	12 c0       	rjmp	.+36     	; 0x1fdc <__vector_26+0xa6>
	else if	(speed>195)				index += 2;
    1fb8:	80 91 cb 01 	lds	r24, 0x01CB
    1fbc:	90 91 cc 01 	lds	r25, 0x01CC
    1fc0:	84 3c       	cpi	r24, 0xC4	; 196
    1fc2:	91 05       	cpc	r25, r1
    1fc4:	30 f0       	brcs	.+12     	; 0x1fd2 <__vector_26+0x9c>
    1fc6:	80 91 cd 01 	lds	r24, 0x01CD
    1fca:	8e 5f       	subi	r24, 0xFE	; 254
    1fcc:	80 93 cd 01 	sts	0x01CD, r24
    1fd0:	05 c0       	rjmp	.+10     	; 0x1fdc <__vector_26+0xa6>
	else 											index += 1;
    1fd2:	80 91 cd 01 	lds	r24, 0x01CD
    1fd6:	8f 5f       	subi	r24, 0xFF	; 255
    1fd8:	80 93 cd 01 	sts	0x01CD, r24

	//-------------------
	if(speed>=f_Base)
    1fdc:	80 91 cb 01 	lds	r24, 0x01CB
    1fe0:	90 91 cc 01 	lds	r25, 0x01CC
    1fe4:	21 e0       	ldi	r18, 0x01	; 1
    1fe6:	8f 3e       	cpi	r24, 0xEF	; 239
    1fe8:	92 07       	cpc	r25, r18
    1fea:	08 f4       	brcc	.+2      	; 0x1fee <__vector_26+0xb8>
    1fec:	38 c0       	rjmp	.+112    	; 0x205e <__vector_26+0x128>
	{
		 if (flags.dir_f){
    1fee:	80 91 ee 01 	lds	r24, 0x01EE
    1ff2:	80 ff       	sbrs	r24, 0
    1ff4:	14 c0       	rjmp	.+40     	; 0x201e <__vector_26+0xe8>
		   PWMR_SET(pgm_read_byte(&sine[R_Index(index)]));
    1ff6:	e0 91 cd 01 	lds	r30, 0x01CD
    1ffa:	f0 e0       	ldi	r31, 0x00	; 0
    1ffc:	e4 59       	subi	r30, 0x94	; 148
    1ffe:	fc 4f       	sbci	r31, 0xFC	; 252
    2000:	e4 91       	lpm	r30, Z+
    2002:	f0 e0       	ldi	r31, 0x00	; 0
    2004:	fb bd       	out	0x2b, r31	; 43
    2006:	ea bd       	out	0x2a, r30	; 42
		   PWMS_SET(pgm_read_byte(&sine[S_Index(index)]));
    2008:	e0 91 cd 01 	lds	r30, 0x01CD
    200c:	ec 5a       	subi	r30, 0xAC	; 172
    200e:	f0 e0       	ldi	r31, 0x00	; 0
    2010:	e4 59       	subi	r30, 0x94	; 148
    2012:	fc 4f       	sbci	r31, 0xFC	; 252
    2014:	e4 91       	lpm	r30, Z+
    2016:	f0 e0       	ldi	r31, 0x00	; 0
    2018:	f9 bd       	out	0x29, r31	; 41
    201a:	e8 bd       	out	0x28, r30	; 40
    201c:	13 c0       	rjmp	.+38     	; 0x2044 <__vector_26+0x10e>
		 }
		 else
		 {
			PWMS_SET(pgm_read_byte(&sine[R_Index(index)]));
    201e:	e0 91 cd 01 	lds	r30, 0x01CD
    2022:	f0 e0       	ldi	r31, 0x00	; 0
    2024:	e4 59       	subi	r30, 0x94	; 148
    2026:	fc 4f       	sbci	r31, 0xFC	; 252
    2028:	e4 91       	lpm	r30, Z+
    202a:	f0 e0       	ldi	r31, 0x00	; 0
    202c:	f9 bd       	out	0x29, r31	; 41
    202e:	e8 bd       	out	0x28, r30	; 40
		    PWMR_SET(pgm_read_byte(&sine[S_Index(index)])); 
    2030:	e0 91 cd 01 	lds	r30, 0x01CD
    2034:	ec 5a       	subi	r30, 0xAC	; 172
    2036:	f0 e0       	ldi	r31, 0x00	; 0
    2038:	e4 59       	subi	r30, 0x94	; 148
    203a:	fc 4f       	sbci	r31, 0xFC	; 252
    203c:	e4 91       	lpm	r30, Z+
    203e:	f0 e0       	ldi	r31, 0x00	; 0
    2040:	fb bd       	out	0x2b, r31	; 43
    2042:	ea bd       	out	0x2a, r30	; 42
		 }		
		PWMT_SET(pgm_read_byte(&sine[T_Index(index)]));
    2044:	e0 91 cd 01 	lds	r30, 0x01CD
    2048:	e6 55       	subi	r30, 0x56	; 86
    204a:	f0 e0       	ldi	r31, 0x00	; 0
    204c:	e4 59       	subi	r30, 0x94	; 148
    204e:	fc 4f       	sbci	r31, 0xFC	; 252
    2050:	e4 91       	lpm	r30, Z+
    2052:	f0 e0       	ldi	r31, 0x00	; 0
    2054:	f0 93 79 00 	sts	0x0079, r31
    2058:	e0 93 78 00 	sts	0x0078, r30
    205c:	b3 c0       	rjmp	.+358    	; 0x21c4 <__vector_26+0x28e>
	}

	//-----
	else if (speed<=f_Boost)
    205e:	80 91 cb 01 	lds	r24, 0x01CB
    2062:	90 91 cc 01 	lds	r25, 0x01CC
    2066:	80 36       	cpi	r24, 0x60	; 96
    2068:	91 05       	cpc	r25, r1
    206a:	08 f0       	brcs	.+2      	; 0x206e <__vector_26+0x138>
    206c:	47 c0       	rjmp	.+142    	; 0x20fc <__vector_26+0x1c6>
	{
		if (flags.dir_f){
    206e:	80 91 ee 01 	lds	r24, 0x01EE
    2072:	80 ff       	sbrs	r24, 0
    2074:	1a c0       	rjmp	.+52     	; 0x20aa <__vector_26+0x174>
			
		PWMR_SET(A_calc(pgm_read_byte(&sine[R_Index(index)]), A_Boost));
    2076:	e0 91 cd 01 	lds	r30, 0x01CD
    207a:	f0 e0       	ldi	r31, 0x00	; 0
    207c:	e4 59       	subi	r30, 0x94	; 148
    207e:	fc 4f       	sbci	r31, 0xFC	; 252
    2080:	84 91       	lpm	r24, Z+
    2082:	69 e1       	ldi	r22, 0x19	; 25
    2084:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    2088:	90 e0       	ldi	r25, 0x00	; 0
    208a:	9b bd       	out	0x2b, r25	; 43
    208c:	8a bd       	out	0x2a, r24	; 42
		PWMS_SET(A_calc(pgm_read_byte(&sine[S_Index(index)]), A_Boost));
    208e:	e0 91 cd 01 	lds	r30, 0x01CD
    2092:	ec 5a       	subi	r30, 0xAC	; 172
    2094:	f0 e0       	ldi	r31, 0x00	; 0
    2096:	e4 59       	subi	r30, 0x94	; 148
    2098:	fc 4f       	sbci	r31, 0xFC	; 252
    209a:	84 91       	lpm	r24, Z+
    209c:	69 e1       	ldi	r22, 0x19	; 25
    209e:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    20a2:	90 e0       	ldi	r25, 0x00	; 0
    20a4:	99 bd       	out	0x29, r25	; 41
    20a6:	88 bd       	out	0x28, r24	; 40
    20a8:	19 c0       	rjmp	.+50     	; 0x20dc <__vector_26+0x1a6>
		}
		else{
		PWMS_SET(A_calc(pgm_read_byte(&sine[R_Index(index)]), A_Boost));
    20aa:	e0 91 cd 01 	lds	r30, 0x01CD
    20ae:	f0 e0       	ldi	r31, 0x00	; 0
    20b0:	e4 59       	subi	r30, 0x94	; 148
    20b2:	fc 4f       	sbci	r31, 0xFC	; 252
    20b4:	84 91       	lpm	r24, Z+
    20b6:	69 e1       	ldi	r22, 0x19	; 25
    20b8:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    20bc:	90 e0       	ldi	r25, 0x00	; 0
    20be:	99 bd       	out	0x29, r25	; 41
    20c0:	88 bd       	out	0x28, r24	; 40
		PWMR_SET(A_calc(pgm_read_byte(&sine[S_Index(index)]), A_Boost));	
    20c2:	e0 91 cd 01 	lds	r30, 0x01CD
    20c6:	ec 5a       	subi	r30, 0xAC	; 172
    20c8:	f0 e0       	ldi	r31, 0x00	; 0
    20ca:	e4 59       	subi	r30, 0x94	; 148
    20cc:	fc 4f       	sbci	r31, 0xFC	; 252
    20ce:	84 91       	lpm	r24, Z+
    20d0:	69 e1       	ldi	r22, 0x19	; 25
    20d2:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	9b bd       	out	0x2b, r25	; 43
    20da:	8a bd       	out	0x2a, r24	; 42
		}					
		PWMT_SET(A_calc(pgm_read_byte(&sine[T_Index(index)]), A_Boost));
    20dc:	e0 91 cd 01 	lds	r30, 0x01CD
    20e0:	e6 55       	subi	r30, 0x56	; 86
    20e2:	f0 e0       	ldi	r31, 0x00	; 0
    20e4:	e4 59       	subi	r30, 0x94	; 148
    20e6:	fc 4f       	sbci	r31, 0xFC	; 252
    20e8:	84 91       	lpm	r24, Z+
    20ea:	69 e1       	ldi	r22, 0x19	; 25
    20ec:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	90 93 79 00 	sts	0x0079, r25
    20f6:	80 93 78 00 	sts	0x0078, r24
    20fa:	64 c0       	rjmp	.+200    	; 0x21c4 <__vector_26+0x28e>
	}

	//-----
	else
	{
		A = ((N *(unsigned long)(speed -f_Boost)) /M) +A_Boost;
    20fc:	20 91 cb 01 	lds	r18, 0x01CB
    2100:	30 91 cc 01 	lds	r19, 0x01CC
    2104:	2f 55       	subi	r18, 0x5F	; 95
    2106:	30 40       	sbci	r19, 0x00	; 0
    2108:	46 ee       	ldi	r20, 0xE6	; 230
    210a:	50 e0       	ldi	r21, 0x00	; 0
    210c:	0e 94 c3 12 	call	0x2586	; 0x2586 <__umulhisi3>
    2110:	20 e9       	ldi	r18, 0x90	; 144
    2112:	31 e0       	ldi	r19, 0x01	; 1
    2114:	40 e0       	ldi	r20, 0x00	; 0
    2116:	50 e0       	ldi	r21, 0x00	; 0
    2118:	0e 94 e6 12 	call	0x25cc	; 0x25cc <__udivmodsi4>
    211c:	0f 2e       	mov	r0, r31
    211e:	f9 e1       	ldi	r31, 0x19	; 25
    2120:	ef 2e       	mov	r14, r31
    2122:	f0 e0       	ldi	r31, 0x00	; 0
    2124:	ff 2e       	mov	r15, r31
    2126:	f0 e0       	ldi	r31, 0x00	; 0
    2128:	0f 2f       	mov	r16, r31
    212a:	f0 e0       	ldi	r31, 0x00	; 0
    212c:	1f 2f       	mov	r17, r31
    212e:	f0 2d       	mov	r31, r0
    2130:	e2 0e       	add	r14, r18
    2132:	f3 1e       	adc	r15, r19
    2134:	04 1f       	adc	r16, r20
    2136:	15 1f       	adc	r17, r21
		
		if (flags.dir_f){
    2138:	80 91 ee 01 	lds	r24, 0x01EE
    213c:	80 ff       	sbrs	r24, 0
    213e:	1a c0       	rjmp	.+52     	; 0x2174 <__vector_26+0x23e>
			
		PWMR_SET(A_calc(pgm_read_byte(&sine[R_Index(index)]), (unsigned char)A));
    2140:	e0 91 cd 01 	lds	r30, 0x01CD
    2144:	f0 e0       	ldi	r31, 0x00	; 0
    2146:	e4 59       	subi	r30, 0x94	; 148
    2148:	fc 4f       	sbci	r31, 0xFC	; 252
    214a:	84 91       	lpm	r24, Z+
    214c:	6e 2d       	mov	r22, r14
    214e:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    2152:	90 e0       	ldi	r25, 0x00	; 0
    2154:	9b bd       	out	0x2b, r25	; 43
    2156:	8a bd       	out	0x2a, r24	; 42
		PWMS_SET(A_calc(pgm_read_byte(&sine[S_Index(index)]), (unsigned char)A));
    2158:	e0 91 cd 01 	lds	r30, 0x01CD
    215c:	ec 5a       	subi	r30, 0xAC	; 172
    215e:	f0 e0       	ldi	r31, 0x00	; 0
    2160:	e4 59       	subi	r30, 0x94	; 148
    2162:	fc 4f       	sbci	r31, 0xFC	; 252
    2164:	84 91       	lpm	r24, Z+
    2166:	6e 2d       	mov	r22, r14
    2168:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    216c:	90 e0       	ldi	r25, 0x00	; 0
    216e:	99 bd       	out	0x29, r25	; 41
    2170:	88 bd       	out	0x28, r24	; 40
    2172:	19 c0       	rjmp	.+50     	; 0x21a6 <__vector_26+0x270>
		}
		else
		{
		PWMS_SET(A_calc(pgm_read_byte(&sine[R_Index(index)]), (unsigned char)A));
    2174:	e0 91 cd 01 	lds	r30, 0x01CD
    2178:	f0 e0       	ldi	r31, 0x00	; 0
    217a:	e4 59       	subi	r30, 0x94	; 148
    217c:	fc 4f       	sbci	r31, 0xFC	; 252
    217e:	84 91       	lpm	r24, Z+
    2180:	6e 2d       	mov	r22, r14
    2182:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	99 bd       	out	0x29, r25	; 41
    218a:	88 bd       	out	0x28, r24	; 40
		PWMR_SET(A_calc(pgm_read_byte(&sine[S_Index(index)]), (unsigned char)A));			
    218c:	e0 91 cd 01 	lds	r30, 0x01CD
    2190:	ec 5a       	subi	r30, 0xAC	; 172
    2192:	f0 e0       	ldi	r31, 0x00	; 0
    2194:	e4 59       	subi	r30, 0x94	; 148
    2196:	fc 4f       	sbci	r31, 0xFC	; 252
    2198:	84 91       	lpm	r24, Z+
    219a:	6e 2d       	mov	r22, r14
    219c:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    21a0:	90 e0       	ldi	r25, 0x00	; 0
    21a2:	9b bd       	out	0x2b, r25	; 43
    21a4:	8a bd       	out	0x2a, r24	; 42
		}			
		PWMT_SET(A_calc(pgm_read_byte(&sine[T_Index(index)]), (unsigned char)A));
    21a6:	e0 91 cd 01 	lds	r30, 0x01CD
    21aa:	e6 55       	subi	r30, 0x56	; 86
    21ac:	f0 e0       	ldi	r31, 0x00	; 0
    21ae:	e4 59       	subi	r30, 0x94	; 148
    21b0:	fc 4f       	sbci	r31, 0xFC	; 252
    21b2:	84 91       	lpm	r24, Z+
    21b4:	6e 2d       	mov	r22, r14
    21b6:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <A_calc>
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	90 93 79 00 	sts	0x0079, r25
    21c0:	80 93 78 00 	sts	0x0078, r24
	}
}	//ISR_PWM_SET
    21c4:	ff 91       	pop	r31
    21c6:	ef 91       	pop	r30
    21c8:	bf 91       	pop	r27
    21ca:	af 91       	pop	r26
    21cc:	9f 91       	pop	r25
    21ce:	8f 91       	pop	r24
    21d0:	7f 91       	pop	r23
    21d2:	6f 91       	pop	r22
    21d4:	5f 91       	pop	r21
    21d6:	4f 91       	pop	r20
    21d8:	3f 91       	pop	r19
    21da:	2f 91       	pop	r18
    21dc:	1f 91       	pop	r17
    21de:	0f 91       	pop	r16
    21e0:	ff 90       	pop	r15
    21e2:	ef 90       	pop	r14
    21e4:	0f 90       	pop	r0
    21e6:	0b be       	out	0x3b, r0	; 59
    21e8:	0f 90       	pop	r0
    21ea:	0f be       	out	0x3f, r0	; 63
    21ec:	0f 90       	pop	r0
    21ee:	1f 90       	pop	r1
    21f0:	18 95       	reti

000021f2 <__vector_9>:

ISR_SPEED_TUNE()								//Occur every 1ms!
{
    21f2:	1f 92       	push	r1
    21f4:	0f 92       	push	r0
    21f6:	0f b6       	in	r0, 0x3f	; 63
    21f8:	0f 92       	push	r0
    21fa:	0b b6       	in	r0, 0x3b	; 59
    21fc:	0f 92       	push	r0
    21fe:	11 24       	eor	r1, r1
    2200:	2f 93       	push	r18
    2202:	3f 93       	push	r19
    2204:	8f 93       	push	r24
    2206:	9f 93       	push	r25
    2208:	ef 93       	push	r30
    220a:	ff 93       	push	r31
		static unsigned char 					ACC_counter = 0;
		static unsigned char 					DEC_counter = 0;
	 
	
		//-----  Acceleration
		if(speed<FinalSpeed)
    220c:	20 91 cb 01 	lds	r18, 0x01CB
    2210:	30 91 cc 01 	lds	r19, 0x01CC
    2214:	80 91 c9 01 	lds	r24, 0x01C9
    2218:	90 91 ca 01 	lds	r25, 0x01CA
    221c:	28 17       	cp	r18, r24
    221e:	39 07       	cpc	r19, r25
    2220:	b8 f4       	brcc	.+46     	; 0x2250 <__vector_9+0x5e>
		{
			DEC_counter = 0;
    2222:	10 92 d1 01 	sts	0x01D1, r1

			#if (ACC_DEC_USE ==1) || (ACC_DEC_USE ==3)
				ACC_counter++;
    2226:	80 91 d2 01 	lds	r24, 0x01D2
    222a:	8f 5f       	subi	r24, 0xFF	; 255
    222c:	80 93 d2 01 	sts	0x01D2, r24
		 		if(ACC_counter>=Acceleration)
    2230:	90 91 c4 01 	lds	r25, 0x01C4
    2234:	89 17       	cp	r24, r25
    2236:	90 f1       	brcs	.+100    	; 0x229c <__vector_9+0xaa>
		 		{
		 			ACC_counter = 0;
    2238:	10 92 d2 01 	sts	0x01D2, r1
		  		speed++;
    223c:	80 91 cb 01 	lds	r24, 0x01CB
    2240:	90 91 cc 01 	lds	r25, 0x01CC
    2244:	01 96       	adiw	r24, 0x01	; 1
    2246:	90 93 cc 01 	sts	0x01CC, r25
    224a:	80 93 cb 01 	sts	0x01CB, r24
    224e:	26 c0       	rjmp	.+76     	; 0x229c <__vector_9+0xaa>

			#endif
		}

		//-----  Deceleration
		else if(speed>FinalSpeed)
    2250:	20 91 cb 01 	lds	r18, 0x01CB
    2254:	30 91 cc 01 	lds	r19, 0x01CC
    2258:	80 91 c9 01 	lds	r24, 0x01C9
    225c:	90 91 ca 01 	lds	r25, 0x01CA
    2260:	82 17       	cp	r24, r18
    2262:	93 07       	cpc	r25, r19
    2264:	b8 f4       	brcc	.+46     	; 0x2294 <__vector_9+0xa2>
		{
			ACC_counter = 0;
    2266:	10 92 d2 01 	sts	0x01D2, r1

			#if (ACC_DEC_USE ==2) || (ACC_DEC_USE ==3)
				DEC_counter++;
    226a:	80 91 d1 01 	lds	r24, 0x01D1
    226e:	8f 5f       	subi	r24, 0xFF	; 255
    2270:	80 93 d1 01 	sts	0x01D1, r24
				if(DEC_counter>=Deceleration)
    2274:	90 91 c5 01 	lds	r25, 0x01C5
    2278:	89 17       	cp	r24, r25
    227a:	80 f0       	brcs	.+32     	; 0x229c <__vector_9+0xaa>
				{
			  	DEC_counter = 0;
    227c:	10 92 d1 01 	sts	0x01D1, r1
			  	speed--;
    2280:	80 91 cb 01 	lds	r24, 0x01CB
    2284:	90 91 cc 01 	lds	r25, 0x01CC
    2288:	01 97       	sbiw	r24, 0x01	; 1
    228a:	90 93 cc 01 	sts	0x01CC, r25
    228e:	80 93 cb 01 	sts	0x01CB, r24
    2292:	04 c0       	rjmp	.+8      	; 0x229c <__vector_9+0xaa>
		}

		//-----
		else
		{
	 		ACC_counter = 0;
    2294:	10 92 d2 01 	sts	0x01D2, r1
	  	DEC_counter = 0;
    2298:	10 92 d1 01 	sts	0x01D1, r1
		}

	#endif	

	//-------------------
	if(speed)
    229c:	80 91 cb 01 	lds	r24, 0x01CB
    22a0:	90 91 cc 01 	lds	r25, 0x01CC
    22a4:	00 97       	sbiw	r24, 0x00	; 0
    22a6:	81 f1       	breq	.+96     	; 0x2308 <__vector_9+0x116>
	{
		FRQ_SET(pgm_read_word(&Timer_Value[speed])-1);
    22a8:	e0 91 cb 01 	lds	r30, 0x01CB
    22ac:	f0 91 cc 01 	lds	r31, 0x01CC
    22b0:	ee 0f       	add	r30, r30
    22b2:	ff 1f       	adc	r31, r31
    22b4:	e4 59       	subi	r30, 0x94	; 148
    22b6:	fa 4f       	sbci	r31, 0xFA	; 250
    22b8:	85 91       	lpm	r24, Z+
    22ba:	94 91       	lpm	r25, Z+
    22bc:	01 97       	sbiw	r24, 0x01	; 1
    22be:	90 93 87 00 	sts	0x0087, r25
    22c2:	80 93 86 00 	sts	0x0086, r24

 		if(MSflag==0)
    22c6:	80 91 ce 01 	lds	r24, 0x01CE
    22ca:	88 23       	and	r24, r24
    22cc:	91 f5       	brne	.+100    	; 0x2332 <__vector_9+0x140>
 		{
			PWMRST_ON();
    22ce:	8f b5       	in	r24, 0x2f	; 47
    22d0:	80 68       	ori	r24, 0x80	; 128
    22d2:	8f bd       	out	0x2f, r24	; 47
    22d4:	8f b5       	in	r24, 0x2f	; 47
    22d6:	80 62       	ori	r24, 0x20	; 32
    22d8:	8f bd       	out	0x2f, r24	; 47
    22da:	8f b5       	in	r24, 0x2f	; 47
    22dc:	88 60       	ori	r24, 0x08	; 8
    22de:	8f bd       	out	0x2f, r24	; 47
			MSflag = 1;
    22e0:	81 e0       	ldi	r24, 0x01	; 1
    22e2:	80 93 ce 01 	sts	0x01CE, r24
		
			PWM_INTV_TMR_ON();
    22e6:	ea e8       	ldi	r30, 0x8A	; 138
    22e8:	f0 e0       	ldi	r31, 0x00	; 0
    22ea:	80 81       	ld	r24, Z
    22ec:	88 7f       	andi	r24, 0xF8	; 248
    22ee:	81 60       	ori	r24, 0x01	; 1
    22f0:	80 83       	st	Z, r24
			PWM_INTV_ena();
    22f2:	ec e7       	ldi	r30, 0x7C	; 124
    22f4:	f0 e0       	ldi	r31, 0x00	; 0
    22f6:	80 81       	ld	r24, Z
    22f8:	80 61       	ori	r24, 0x10	; 16
    22fa:	80 83       	st	Z, r24
    22fc:	ed e7       	ldi	r30, 0x7D	; 125
    22fe:	f0 e0       	ldi	r31, 0x00	; 0
    2300:	80 81       	ld	r24, Z
    2302:	80 61       	ori	r24, 0x10	; 16
    2304:	80 83       	st	Z, r24
    2306:	15 c0       	rjmp	.+42     	; 0x2332 <__vector_9+0x140>
	}

	//-----
	else
	{
	 	PWMRST_OFF();
    2308:	8f b5       	in	r24, 0x2f	; 47
    230a:	8f 77       	andi	r24, 0x7F	; 127
    230c:	8f bd       	out	0x2f, r24	; 47
    230e:	8f b5       	in	r24, 0x2f	; 47
    2310:	8f 7d       	andi	r24, 0xDF	; 223
    2312:	8f bd       	out	0x2f, r24	; 47
    2314:	8f b5       	in	r24, 0x2f	; 47
    2316:	87 7f       	andi	r24, 0xF7	; 247
    2318:	8f bd       	out	0x2f, r24	; 47
		MSflag = 0;
    231a:	10 92 ce 01 	sts	0x01CE, r1

	 	PWM_INTV_TMR_OFF();
    231e:	ea e8       	ldi	r30, 0x8A	; 138
    2320:	f0 e0       	ldi	r31, 0x00	; 0
    2322:	80 81       	ld	r24, Z
    2324:	88 7f       	andi	r24, 0xF8	; 248
    2326:	80 83       	st	Z, r24
	 	PWM_INTV_dis();
    2328:	ed e7       	ldi	r30, 0x7D	; 125
    232a:	f0 e0       	ldi	r31, 0x00	; 0
    232c:	80 81       	ld	r24, Z
    232e:	8f 7e       	andi	r24, 0xEF	; 239
    2330:	80 83       	st	Z, r24
	}
	
	TCounter++;
    2332:	80 91 cf 01 	lds	r24, 0x01CF
    2336:	90 91 d0 01 	lds	r25, 0x01D0
    233a:	01 96       	adiw	r24, 0x01	; 1
    233c:	90 93 d0 01 	sts	0x01D0, r25
    2340:	80 93 cf 01 	sts	0x01CF, r24
}	//ISR_SPEED_TUNE
    2344:	ff 91       	pop	r31
    2346:	ef 91       	pop	r30
    2348:	9f 91       	pop	r25
    234a:	8f 91       	pop	r24
    234c:	3f 91       	pop	r19
    234e:	2f 91       	pop	r18
    2350:	0f 90       	pop	r0
    2352:	0b be       	out	0x3b, r0	; 59
    2354:	0f 90       	pop	r0
    2356:	0f be       	out	0x3f, r0	; 63
    2358:	0f 90       	pop	r0
    235a:	1f 90       	pop	r1
    235c:	18 95       	reti

0000235e <SPWM_init>:

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
void SPWM_init(void)
{
	SPWM_HW_init();
    235e:	bd 9a       	sbi	0x17, 5	; 23
    2360:	8f b5       	in	r24, 0x2f	; 47
    2362:	8f 77       	andi	r24, 0x7F	; 127
    2364:	8f bd       	out	0x2f, r24	; 47
    2366:	be 9a       	sbi	0x17, 6	; 23
    2368:	8f b5       	in	r24, 0x2f	; 47
    236a:	8f 7d       	andi	r24, 0xDF	; 223
    236c:	8f bd       	out	0x2f, r24	; 47
    236e:	bf 9a       	sbi	0x17, 7	; 23
    2370:	8f b5       	in	r24, 0x2f	; 47
    2372:	87 7f       	andi	r24, 0xF7	; 247
    2374:	8f bd       	out	0x2f, r24	; 47
	
	if (flags.dir_f){
    2376:	80 91 ee 01 	lds	r24, 0x01EE
    237a:	80 ff       	sbrs	r24, 0
    237c:	0c c0       	rjmp	.+24     	; 0x2396 <SPWM_init+0x38>
	PWMR_SET(R_Index(index));
    237e:	80 91 cd 01 	lds	r24, 0x01CD
    2382:	90 e0       	ldi	r25, 0x00	; 0
    2384:	9b bd       	out	0x2b, r25	; 43
    2386:	8a bd       	out	0x2a, r24	; 42
 	PWMS_SET(S_Index(index));
    2388:	80 91 cd 01 	lds	r24, 0x01CD
    238c:	8c 5a       	subi	r24, 0xAC	; 172
    238e:	90 e0       	ldi	r25, 0x00	; 0
    2390:	99 bd       	out	0x29, r25	; 41
    2392:	88 bd       	out	0x28, r24	; 40
    2394:	0b c0       	rjmp	.+22     	; 0x23ac <SPWM_init+0x4e>
	}
	else
	{
	PWMS_SET(R_Index(index));
    2396:	80 91 cd 01 	lds	r24, 0x01CD
    239a:	90 e0       	ldi	r25, 0x00	; 0
    239c:	99 bd       	out	0x29, r25	; 41
    239e:	88 bd       	out	0x28, r24	; 40
 	PWMR_SET(S_Index(index));	
    23a0:	80 91 cd 01 	lds	r24, 0x01CD
    23a4:	8c 5a       	subi	r24, 0xAC	; 172
    23a6:	90 e0       	ldi	r25, 0x00	; 0
    23a8:	9b bd       	out	0x2b, r25	; 43
    23aa:	8a bd       	out	0x2a, r24	; 42
	}			 
 	PWMT_SET(T_Index(index));
    23ac:	80 91 cd 01 	lds	r24, 0x01CD
    23b0:	86 55       	subi	r24, 0x56	; 86
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	90 93 79 00 	sts	0x0079, r25
    23b8:	80 93 78 00 	sts	0x0078, r24

	PWM_TMR_init();
    23bc:	81 e0       	ldi	r24, 0x01	; 1
    23be:	8f bd       	out	0x2f, r24	; 47
	PWM_TMR_ON();
    23c0:	8e b5       	in	r24, 0x2e	; 46
    23c2:	88 7f       	andi	r24, 0xF8	; 248
    23c4:	81 60       	ori	r24, 0x01	; 1
    23c6:	8e bd       	out	0x2e, r24	; 46
	
	PWM_INTV_init();
    23c8:	83 e0       	ldi	r24, 0x03	; 3
    23ca:	80 93 8b 00 	sts	0x008B, r24
    23ce:	88 e1       	ldi	r24, 0x18	; 24
    23d0:	80 93 8a 00 	sts	0x008A, r24
	SPEED_INTV_SET(SPEED_INTV_time);		//Occur every 1ms!
    23d4:	8c e7       	ldi	r24, 0x7C	; 124
    23d6:	83 bd       	out	0x23, r24	; 35

	SPEED_INTV_init();
    23d8:	8b e0       	ldi	r24, 0x0B	; 11
    23da:	85 bd       	out	0x25, r24	; 37
	SPEED_INTV_ena();
    23dc:	86 b7       	in	r24, 0x36	; 54
    23de:	80 68       	ori	r24, 0x80	; 128
    23e0:	86 bf       	out	0x36, r24	; 54
    23e2:	87 b7       	in	r24, 0x37	; 55
    23e4:	80 68       	ori	r24, 0x80	; 128
    23e6:	87 bf       	out	0x37, r24	; 55
}	//SPWM_init
    23e8:	08 95       	ret

000023ea <SetFrequency>:

unsigned int SetFrequency(unsigned int FRQ)
{
	if			(FRQ<14)					FinalSpeed = 0;
    23ea:	8e 30       	cpi	r24, 0x0E	; 14
    23ec:	91 05       	cpc	r25, r1
    23ee:	28 f4       	brcc	.+10     	; 0x23fa <SetFrequency+0x10>
    23f0:	10 92 ca 01 	sts	0x01CA, r1
    23f4:	10 92 c9 01 	sts	0x01C9, r1
    23f8:	10 c0       	rjmp	.+32     	; 0x241a <SetFrequency+0x30>
	else if (FRQ<1010)				FinalSpeed = FRQ -13;
    23fa:	23 e0       	ldi	r18, 0x03	; 3
    23fc:	82 3f       	cpi	r24, 0xF2	; 242
    23fe:	92 07       	cpc	r25, r18
    2400:	30 f4       	brcc	.+12     	; 0x240e <SetFrequency+0x24>
    2402:	0d 97       	sbiw	r24, 0x0d	; 13
    2404:	90 93 ca 01 	sts	0x01CA, r25
    2408:	80 93 c9 01 	sts	0x01C9, r24
    240c:	06 c0       	rjmp	.+12     	; 0x241a <SetFrequency+0x30>
	else 											FinalSpeed = 996;
    240e:	84 ee       	ldi	r24, 0xE4	; 228
    2410:	93 e0       	ldi	r25, 0x03	; 3
    2412:	90 93 ca 01 	sts	0x01CA, r25
    2416:	80 93 c9 01 	sts	0x01C9, r24
	
	return(FinalSpeed +4);
    241a:	20 91 c9 01 	lds	r18, 0x01C9
    241e:	30 91 ca 01 	lds	r19, 0x01CA
    2422:	2c 5f       	subi	r18, 0xFC	; 252
    2424:	3f 4f       	sbci	r19, 0xFF	; 255
}	//SetFrequency
    2426:	82 2f       	mov	r24, r18
    2428:	93 2f       	mov	r25, r19
    242a:	08 95       	ret

0000242c <SetAcceleration>:

unsigned char SetAcceleration(unsigned char ACC)
{
	if(ACC) 									Acceleration = ACC;
    242c:	88 23       	and	r24, r24
    242e:	19 f0       	breq	.+6      	; 0x2436 <SetAcceleration+0xa>
    2430:	80 93 c4 01 	sts	0x01C4, r24
    2434:	03 c0       	rjmp	.+6      	; 0x243c <SetAcceleration+0x10>
	else 											Acceleration = 1;
    2436:	81 e0       	ldi	r24, 0x01	; 1
    2438:	80 93 c4 01 	sts	0x01C4, r24
	
	return(Acceleration);
    243c:	80 91 c4 01 	lds	r24, 0x01C4
}	//SetAcceleration
    2440:	08 95       	ret

00002442 <SetDeceleration>:

unsigned char SetDeceleration(unsigned char DEC)
{
	if(DEC) 									Deceleration = DEC;
    2442:	88 23       	and	r24, r24
    2444:	19 f0       	breq	.+6      	; 0x244c <SetDeceleration+0xa>
    2446:	80 93 c5 01 	sts	0x01C5, r24
    244a:	03 c0       	rjmp	.+6      	; 0x2452 <SetDeceleration+0x10>
	else 											Deceleration = 1;
    244c:	81 e0       	ldi	r24, 0x01	; 1
    244e:	80 93 c5 01 	sts	0x01C5, r24
	
	return(Deceleration);
    2452:	80 91 c5 01 	lds	r24, 0x01C5
}	//SetDeceleration
    2456:	08 95       	ret

00002458 <__fixsfsi>:
    2458:	04 d0       	rcall	.+8      	; 0x2462 <__fixunssfsi>
    245a:	68 94       	set
    245c:	b1 11       	cpse	r27, r1
    245e:	8d c0       	rjmp	.+282    	; 0x257a <__fp_szero>
    2460:	08 95       	ret

00002462 <__fixunssfsi>:
    2462:	70 d0       	rcall	.+224    	; 0x2544 <__fp_splitA>
    2464:	88 f0       	brcs	.+34     	; 0x2488 <__fixunssfsi+0x26>
    2466:	9f 57       	subi	r25, 0x7F	; 127
    2468:	90 f0       	brcs	.+36     	; 0x248e <__fixunssfsi+0x2c>
    246a:	b9 2f       	mov	r27, r25
    246c:	99 27       	eor	r25, r25
    246e:	b7 51       	subi	r27, 0x17	; 23
    2470:	a0 f0       	brcs	.+40     	; 0x249a <__fixunssfsi+0x38>
    2472:	d1 f0       	breq	.+52     	; 0x24a8 <__fixunssfsi+0x46>
    2474:	66 0f       	add	r22, r22
    2476:	77 1f       	adc	r23, r23
    2478:	88 1f       	adc	r24, r24
    247a:	99 1f       	adc	r25, r25
    247c:	1a f0       	brmi	.+6      	; 0x2484 <__fixunssfsi+0x22>
    247e:	ba 95       	dec	r27
    2480:	c9 f7       	brne	.-14     	; 0x2474 <__fixunssfsi+0x12>
    2482:	12 c0       	rjmp	.+36     	; 0x24a8 <__fixunssfsi+0x46>
    2484:	b1 30       	cpi	r27, 0x01	; 1
    2486:	81 f0       	breq	.+32     	; 0x24a8 <__fixunssfsi+0x46>
    2488:	77 d0       	rcall	.+238    	; 0x2578 <__fp_zero>
    248a:	b1 e0       	ldi	r27, 0x01	; 1
    248c:	08 95       	ret
    248e:	74 c0       	rjmp	.+232    	; 0x2578 <__fp_zero>
    2490:	67 2f       	mov	r22, r23
    2492:	78 2f       	mov	r23, r24
    2494:	88 27       	eor	r24, r24
    2496:	b8 5f       	subi	r27, 0xF8	; 248
    2498:	39 f0       	breq	.+14     	; 0x24a8 <__fixunssfsi+0x46>
    249a:	b9 3f       	cpi	r27, 0xF9	; 249
    249c:	cc f3       	brlt	.-14     	; 0x2490 <__fixunssfsi+0x2e>
    249e:	86 95       	lsr	r24
    24a0:	77 95       	ror	r23
    24a2:	67 95       	ror	r22
    24a4:	b3 95       	inc	r27
    24a6:	d9 f7       	brne	.-10     	; 0x249e <__fixunssfsi+0x3c>
    24a8:	3e f4       	brtc	.+14     	; 0x24b8 <__fixunssfsi+0x56>
    24aa:	90 95       	com	r25
    24ac:	80 95       	com	r24
    24ae:	70 95       	com	r23
    24b0:	61 95       	neg	r22
    24b2:	7f 4f       	sbci	r23, 0xFF	; 255
    24b4:	8f 4f       	sbci	r24, 0xFF	; 255
    24b6:	9f 4f       	sbci	r25, 0xFF	; 255
    24b8:	08 95       	ret

000024ba <__floatunsisf>:
    24ba:	e8 94       	clt
    24bc:	09 c0       	rjmp	.+18     	; 0x24d0 <__floatsisf+0x12>

000024be <__floatsisf>:
    24be:	97 fb       	bst	r25, 7
    24c0:	3e f4       	brtc	.+14     	; 0x24d0 <__floatsisf+0x12>
    24c2:	90 95       	com	r25
    24c4:	80 95       	com	r24
    24c6:	70 95       	com	r23
    24c8:	61 95       	neg	r22
    24ca:	7f 4f       	sbci	r23, 0xFF	; 255
    24cc:	8f 4f       	sbci	r24, 0xFF	; 255
    24ce:	9f 4f       	sbci	r25, 0xFF	; 255
    24d0:	99 23       	and	r25, r25
    24d2:	a9 f0       	breq	.+42     	; 0x24fe <__floatsisf+0x40>
    24d4:	f9 2f       	mov	r31, r25
    24d6:	96 e9       	ldi	r25, 0x96	; 150
    24d8:	bb 27       	eor	r27, r27
    24da:	93 95       	inc	r25
    24dc:	f6 95       	lsr	r31
    24de:	87 95       	ror	r24
    24e0:	77 95       	ror	r23
    24e2:	67 95       	ror	r22
    24e4:	b7 95       	ror	r27
    24e6:	f1 11       	cpse	r31, r1
    24e8:	f8 cf       	rjmp	.-16     	; 0x24da <__floatsisf+0x1c>
    24ea:	fa f4       	brpl	.+62     	; 0x252a <__floatsisf+0x6c>
    24ec:	bb 0f       	add	r27, r27
    24ee:	11 f4       	brne	.+4      	; 0x24f4 <__floatsisf+0x36>
    24f0:	60 ff       	sbrs	r22, 0
    24f2:	1b c0       	rjmp	.+54     	; 0x252a <__floatsisf+0x6c>
    24f4:	6f 5f       	subi	r22, 0xFF	; 255
    24f6:	7f 4f       	sbci	r23, 0xFF	; 255
    24f8:	8f 4f       	sbci	r24, 0xFF	; 255
    24fa:	9f 4f       	sbci	r25, 0xFF	; 255
    24fc:	16 c0       	rjmp	.+44     	; 0x252a <__floatsisf+0x6c>
    24fe:	88 23       	and	r24, r24
    2500:	11 f0       	breq	.+4      	; 0x2506 <__floatsisf+0x48>
    2502:	96 e9       	ldi	r25, 0x96	; 150
    2504:	11 c0       	rjmp	.+34     	; 0x2528 <__floatsisf+0x6a>
    2506:	77 23       	and	r23, r23
    2508:	21 f0       	breq	.+8      	; 0x2512 <__floatsisf+0x54>
    250a:	9e e8       	ldi	r25, 0x8E	; 142
    250c:	87 2f       	mov	r24, r23
    250e:	76 2f       	mov	r23, r22
    2510:	05 c0       	rjmp	.+10     	; 0x251c <__floatsisf+0x5e>
    2512:	66 23       	and	r22, r22
    2514:	71 f0       	breq	.+28     	; 0x2532 <__floatsisf+0x74>
    2516:	96 e8       	ldi	r25, 0x86	; 134
    2518:	86 2f       	mov	r24, r22
    251a:	70 e0       	ldi	r23, 0x00	; 0
    251c:	60 e0       	ldi	r22, 0x00	; 0
    251e:	2a f0       	brmi	.+10     	; 0x252a <__floatsisf+0x6c>
    2520:	9a 95       	dec	r25
    2522:	66 0f       	add	r22, r22
    2524:	77 1f       	adc	r23, r23
    2526:	88 1f       	adc	r24, r24
    2528:	da f7       	brpl	.-10     	; 0x2520 <__floatsisf+0x62>
    252a:	88 0f       	add	r24, r24
    252c:	96 95       	lsr	r25
    252e:	87 95       	ror	r24
    2530:	97 f9       	bld	r25, 7
    2532:	08 95       	ret

00002534 <__fp_split3>:
    2534:	57 fd       	sbrc	r21, 7
    2536:	90 58       	subi	r25, 0x80	; 128
    2538:	44 0f       	add	r20, r20
    253a:	55 1f       	adc	r21, r21
    253c:	59 f0       	breq	.+22     	; 0x2554 <__fp_splitA+0x10>
    253e:	5f 3f       	cpi	r21, 0xFF	; 255
    2540:	71 f0       	breq	.+28     	; 0x255e <__fp_splitA+0x1a>
    2542:	47 95       	ror	r20

00002544 <__fp_splitA>:
    2544:	88 0f       	add	r24, r24
    2546:	97 fb       	bst	r25, 7
    2548:	99 1f       	adc	r25, r25
    254a:	61 f0       	breq	.+24     	; 0x2564 <__fp_splitA+0x20>
    254c:	9f 3f       	cpi	r25, 0xFF	; 255
    254e:	79 f0       	breq	.+30     	; 0x256e <__fp_splitA+0x2a>
    2550:	87 95       	ror	r24
    2552:	08 95       	ret
    2554:	12 16       	cp	r1, r18
    2556:	13 06       	cpc	r1, r19
    2558:	14 06       	cpc	r1, r20
    255a:	55 1f       	adc	r21, r21
    255c:	f2 cf       	rjmp	.-28     	; 0x2542 <__fp_split3+0xe>
    255e:	46 95       	lsr	r20
    2560:	f1 df       	rcall	.-30     	; 0x2544 <__fp_splitA>
    2562:	08 c0       	rjmp	.+16     	; 0x2574 <__fp_splitA+0x30>
    2564:	16 16       	cp	r1, r22
    2566:	17 06       	cpc	r1, r23
    2568:	18 06       	cpc	r1, r24
    256a:	99 1f       	adc	r25, r25
    256c:	f1 cf       	rjmp	.-30     	; 0x2550 <__fp_splitA+0xc>
    256e:	86 95       	lsr	r24
    2570:	71 05       	cpc	r23, r1
    2572:	61 05       	cpc	r22, r1
    2574:	08 94       	sec
    2576:	08 95       	ret

00002578 <__fp_zero>:
    2578:	e8 94       	clt

0000257a <__fp_szero>:
    257a:	bb 27       	eor	r27, r27
    257c:	66 27       	eor	r22, r22
    257e:	77 27       	eor	r23, r23
    2580:	cb 01       	movw	r24, r22
    2582:	97 f9       	bld	r25, 7
    2584:	08 95       	ret

00002586 <__umulhisi3>:
    2586:	53 9f       	mul	r21, r19
    2588:	c0 01       	movw	r24, r0
    258a:	42 9f       	mul	r20, r18
    258c:	b0 01       	movw	r22, r0
    258e:	52 9f       	mul	r21, r18
    2590:	70 0d       	add	r23, r0
    2592:	81 1d       	adc	r24, r1
    2594:	11 24       	eor	r1, r1
    2596:	91 1d       	adc	r25, r1
    2598:	34 9f       	mul	r19, r20
    259a:	70 0d       	add	r23, r0
    259c:	81 1d       	adc	r24, r1
    259e:	11 24       	eor	r1, r1
    25a0:	91 1d       	adc	r25, r1
    25a2:	08 95       	ret

000025a4 <__udivmodhi4>:
    25a4:	aa 1b       	sub	r26, r26
    25a6:	bb 1b       	sub	r27, r27
    25a8:	51 e1       	ldi	r21, 0x11	; 17
    25aa:	07 c0       	rjmp	.+14     	; 0x25ba <__udivmodhi4_ep>

000025ac <__udivmodhi4_loop>:
    25ac:	aa 1f       	adc	r26, r26
    25ae:	bb 1f       	adc	r27, r27
    25b0:	a6 17       	cp	r26, r22
    25b2:	b7 07       	cpc	r27, r23
    25b4:	10 f0       	brcs	.+4      	; 0x25ba <__udivmodhi4_ep>
    25b6:	a6 1b       	sub	r26, r22
    25b8:	b7 0b       	sbc	r27, r23

000025ba <__udivmodhi4_ep>:
    25ba:	88 1f       	adc	r24, r24
    25bc:	99 1f       	adc	r25, r25
    25be:	5a 95       	dec	r21
    25c0:	a9 f7       	brne	.-22     	; 0x25ac <__udivmodhi4_loop>
    25c2:	80 95       	com	r24
    25c4:	90 95       	com	r25
    25c6:	bc 01       	movw	r22, r24
    25c8:	cd 01       	movw	r24, r26
    25ca:	08 95       	ret

000025cc <__udivmodsi4>:
    25cc:	a1 e2       	ldi	r26, 0x21	; 33
    25ce:	1a 2e       	mov	r1, r26
    25d0:	aa 1b       	sub	r26, r26
    25d2:	bb 1b       	sub	r27, r27
    25d4:	fd 01       	movw	r30, r26
    25d6:	0d c0       	rjmp	.+26     	; 0x25f2 <__udivmodsi4_ep>

000025d8 <__udivmodsi4_loop>:
    25d8:	aa 1f       	adc	r26, r26
    25da:	bb 1f       	adc	r27, r27
    25dc:	ee 1f       	adc	r30, r30
    25de:	ff 1f       	adc	r31, r31
    25e0:	a2 17       	cp	r26, r18
    25e2:	b3 07       	cpc	r27, r19
    25e4:	e4 07       	cpc	r30, r20
    25e6:	f5 07       	cpc	r31, r21
    25e8:	20 f0       	brcs	.+8      	; 0x25f2 <__udivmodsi4_ep>
    25ea:	a2 1b       	sub	r26, r18
    25ec:	b3 0b       	sbc	r27, r19
    25ee:	e4 0b       	sbc	r30, r20
    25f0:	f5 0b       	sbc	r31, r21

000025f2 <__udivmodsi4_ep>:
    25f2:	66 1f       	adc	r22, r22
    25f4:	77 1f       	adc	r23, r23
    25f6:	88 1f       	adc	r24, r24
    25f8:	99 1f       	adc	r25, r25
    25fa:	1a 94       	dec	r1
    25fc:	69 f7       	brne	.-38     	; 0x25d8 <__udivmodsi4_loop>
    25fe:	60 95       	com	r22
    2600:	70 95       	com	r23
    2602:	80 95       	com	r24
    2604:	90 95       	com	r25
    2606:	9b 01       	movw	r18, r22
    2608:	ac 01       	movw	r20, r24
    260a:	bd 01       	movw	r22, r26
    260c:	cf 01       	movw	r24, r30
    260e:	08 95       	ret

00002610 <itoa>:
    2610:	fb 01       	movw	r30, r22
    2612:	9f 01       	movw	r18, r30
    2614:	e8 94       	clt
    2616:	42 30       	cpi	r20, 0x02	; 2
    2618:	c4 f0       	brlt	.+48     	; 0x264a <itoa+0x3a>
    261a:	45 32       	cpi	r20, 0x25	; 37
    261c:	b4 f4       	brge	.+44     	; 0x264a <itoa+0x3a>
    261e:	4a 30       	cpi	r20, 0x0A	; 10
    2620:	29 f4       	brne	.+10     	; 0x262c <itoa+0x1c>
    2622:	97 fb       	bst	r25, 7
    2624:	1e f4       	brtc	.+6      	; 0x262c <itoa+0x1c>
    2626:	90 95       	com	r25
    2628:	81 95       	neg	r24
    262a:	9f 4f       	sbci	r25, 0xFF	; 255
    262c:	64 2f       	mov	r22, r20
    262e:	77 27       	eor	r23, r23
    2630:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <__udivmodhi4>
    2634:	80 5d       	subi	r24, 0xD0	; 208
    2636:	8a 33       	cpi	r24, 0x3A	; 58
    2638:	0c f0       	brlt	.+2      	; 0x263c <itoa+0x2c>
    263a:	89 5d       	subi	r24, 0xD9	; 217
    263c:	81 93       	st	Z+, r24
    263e:	cb 01       	movw	r24, r22
    2640:	00 97       	sbiw	r24, 0x00	; 0
    2642:	a1 f7       	brne	.-24     	; 0x262c <itoa+0x1c>
    2644:	16 f4       	brtc	.+4      	; 0x264a <itoa+0x3a>
    2646:	5d e2       	ldi	r21, 0x2D	; 45
    2648:	51 93       	st	Z+, r21
    264a:	10 82       	st	Z, r1
    264c:	c9 01       	movw	r24, r18
    264e:	0c 94 7f 15 	jmp	0x2afe	; 0x2afe <strrev>

00002652 <sprintf>:
    2652:	0f 93       	push	r16
    2654:	1f 93       	push	r17
    2656:	df 93       	push	r29
    2658:	cf 93       	push	r28
    265a:	cd b7       	in	r28, 0x3d	; 61
    265c:	de b7       	in	r29, 0x3e	; 62
    265e:	2e 97       	sbiw	r28, 0x0e	; 14
    2660:	0f b6       	in	r0, 0x3f	; 63
    2662:	f8 94       	cli
    2664:	de bf       	out	0x3e, r29	; 62
    2666:	0f be       	out	0x3f, r0	; 63
    2668:	cd bf       	out	0x3d, r28	; 61
    266a:	0d 89       	ldd	r16, Y+21	; 0x15
    266c:	1e 89       	ldd	r17, Y+22	; 0x16
    266e:	86 e0       	ldi	r24, 0x06	; 6
    2670:	8c 83       	std	Y+4, r24	; 0x04
    2672:	1a 83       	std	Y+2, r17	; 0x02
    2674:	09 83       	std	Y+1, r16	; 0x01
    2676:	8f ef       	ldi	r24, 0xFF	; 255
    2678:	9f e7       	ldi	r25, 0x7F	; 127
    267a:	9e 83       	std	Y+6, r25	; 0x06
    267c:	8d 83       	std	Y+5, r24	; 0x05
    267e:	9e 01       	movw	r18, r28
    2680:	27 5e       	subi	r18, 0xE7	; 231
    2682:	3f 4f       	sbci	r19, 0xFF	; 255
    2684:	ce 01       	movw	r24, r28
    2686:	01 96       	adiw	r24, 0x01	; 1
    2688:	6f 89       	ldd	r22, Y+23	; 0x17
    268a:	78 8d       	ldd	r23, Y+24	; 0x18
    268c:	a9 01       	movw	r20, r18
    268e:	0e 94 59 13 	call	0x26b2	; 0x26b2 <vfprintf>
    2692:	ef 81       	ldd	r30, Y+7	; 0x07
    2694:	f8 85       	ldd	r31, Y+8	; 0x08
    2696:	e0 0f       	add	r30, r16
    2698:	f1 1f       	adc	r31, r17
    269a:	10 82       	st	Z, r1
    269c:	2e 96       	adiw	r28, 0x0e	; 14
    269e:	0f b6       	in	r0, 0x3f	; 63
    26a0:	f8 94       	cli
    26a2:	de bf       	out	0x3e, r29	; 62
    26a4:	0f be       	out	0x3f, r0	; 63
    26a6:	cd bf       	out	0x3d, r28	; 61
    26a8:	cf 91       	pop	r28
    26aa:	df 91       	pop	r29
    26ac:	1f 91       	pop	r17
    26ae:	0f 91       	pop	r16
    26b0:	08 95       	ret

000026b2 <vfprintf>:
    26b2:	2f 92       	push	r2
    26b4:	3f 92       	push	r3
    26b6:	4f 92       	push	r4
    26b8:	5f 92       	push	r5
    26ba:	6f 92       	push	r6
    26bc:	7f 92       	push	r7
    26be:	8f 92       	push	r8
    26c0:	9f 92       	push	r9
    26c2:	af 92       	push	r10
    26c4:	bf 92       	push	r11
    26c6:	cf 92       	push	r12
    26c8:	df 92       	push	r13
    26ca:	ef 92       	push	r14
    26cc:	ff 92       	push	r15
    26ce:	0f 93       	push	r16
    26d0:	1f 93       	push	r17
    26d2:	df 93       	push	r29
    26d4:	cf 93       	push	r28
    26d6:	cd b7       	in	r28, 0x3d	; 61
    26d8:	de b7       	in	r29, 0x3e	; 62
    26da:	2c 97       	sbiw	r28, 0x0c	; 12
    26dc:	0f b6       	in	r0, 0x3f	; 63
    26de:	f8 94       	cli
    26e0:	de bf       	out	0x3e, r29	; 62
    26e2:	0f be       	out	0x3f, r0	; 63
    26e4:	cd bf       	out	0x3d, r28	; 61
    26e6:	6c 01       	movw	r12, r24
    26e8:	1b 01       	movw	r2, r22
    26ea:	8a 01       	movw	r16, r20
    26ec:	fc 01       	movw	r30, r24
    26ee:	17 82       	std	Z+7, r1	; 0x07
    26f0:	16 82       	std	Z+6, r1	; 0x06
    26f2:	83 81       	ldd	r24, Z+3	; 0x03
    26f4:	81 ff       	sbrs	r24, 1
    26f6:	d1 c1       	rjmp	.+930    	; 0x2a9a <vfprintf+0x3e8>
    26f8:	2e 01       	movw	r4, r28
    26fa:	08 94       	sec
    26fc:	41 1c       	adc	r4, r1
    26fe:	51 1c       	adc	r5, r1
    2700:	f6 01       	movw	r30, r12
    2702:	93 81       	ldd	r25, Z+3	; 0x03
    2704:	f1 01       	movw	r30, r2
    2706:	93 fd       	sbrc	r25, 3
    2708:	85 91       	lpm	r24, Z+
    270a:	93 ff       	sbrs	r25, 3
    270c:	81 91       	ld	r24, Z+
    270e:	1f 01       	movw	r2, r30
    2710:	88 23       	and	r24, r24
    2712:	09 f4       	brne	.+2      	; 0x2716 <vfprintf+0x64>
    2714:	be c1       	rjmp	.+892    	; 0x2a92 <vfprintf+0x3e0>
    2716:	85 32       	cpi	r24, 0x25	; 37
    2718:	39 f4       	brne	.+14     	; 0x2728 <vfprintf+0x76>
    271a:	93 fd       	sbrc	r25, 3
    271c:	85 91       	lpm	r24, Z+
    271e:	93 ff       	sbrs	r25, 3
    2720:	81 91       	ld	r24, Z+
    2722:	1f 01       	movw	r2, r30
    2724:	85 32       	cpi	r24, 0x25	; 37
    2726:	29 f4       	brne	.+10     	; 0x2732 <vfprintf+0x80>
    2728:	90 e0       	ldi	r25, 0x00	; 0
    272a:	b6 01       	movw	r22, r12
    272c:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2730:	e7 cf       	rjmp	.-50     	; 0x2700 <vfprintf+0x4e>
    2732:	ee 24       	eor	r14, r14
    2734:	ff 24       	eor	r15, r15
    2736:	20 e0       	ldi	r18, 0x00	; 0
    2738:	20 32       	cpi	r18, 0x20	; 32
    273a:	b0 f4       	brcc	.+44     	; 0x2768 <vfprintf+0xb6>
    273c:	8b 32       	cpi	r24, 0x2B	; 43
    273e:	69 f0       	breq	.+26     	; 0x275a <vfprintf+0xa8>
    2740:	8c 32       	cpi	r24, 0x2C	; 44
    2742:	28 f4       	brcc	.+10     	; 0x274e <vfprintf+0x9c>
    2744:	80 32       	cpi	r24, 0x20	; 32
    2746:	51 f0       	breq	.+20     	; 0x275c <vfprintf+0xaa>
    2748:	83 32       	cpi	r24, 0x23	; 35
    274a:	71 f4       	brne	.+28     	; 0x2768 <vfprintf+0xb6>
    274c:	0b c0       	rjmp	.+22     	; 0x2764 <vfprintf+0xb2>
    274e:	8d 32       	cpi	r24, 0x2D	; 45
    2750:	39 f0       	breq	.+14     	; 0x2760 <vfprintf+0xae>
    2752:	80 33       	cpi	r24, 0x30	; 48
    2754:	49 f4       	brne	.+18     	; 0x2768 <vfprintf+0xb6>
    2756:	21 60       	ori	r18, 0x01	; 1
    2758:	2c c0       	rjmp	.+88     	; 0x27b2 <vfprintf+0x100>
    275a:	22 60       	ori	r18, 0x02	; 2
    275c:	24 60       	ori	r18, 0x04	; 4
    275e:	29 c0       	rjmp	.+82     	; 0x27b2 <vfprintf+0x100>
    2760:	28 60       	ori	r18, 0x08	; 8
    2762:	27 c0       	rjmp	.+78     	; 0x27b2 <vfprintf+0x100>
    2764:	20 61       	ori	r18, 0x10	; 16
    2766:	25 c0       	rjmp	.+74     	; 0x27b2 <vfprintf+0x100>
    2768:	27 fd       	sbrc	r18, 7
    276a:	2c c0       	rjmp	.+88     	; 0x27c4 <vfprintf+0x112>
    276c:	38 2f       	mov	r19, r24
    276e:	30 53       	subi	r19, 0x30	; 48
    2770:	3a 30       	cpi	r19, 0x0A	; 10
    2772:	98 f4       	brcc	.+38     	; 0x279a <vfprintf+0xe8>
    2774:	26 ff       	sbrs	r18, 6
    2776:	08 c0       	rjmp	.+16     	; 0x2788 <vfprintf+0xd6>
    2778:	8e 2d       	mov	r24, r14
    277a:	88 0f       	add	r24, r24
    277c:	e8 2e       	mov	r14, r24
    277e:	ee 0c       	add	r14, r14
    2780:	ee 0c       	add	r14, r14
    2782:	e8 0e       	add	r14, r24
    2784:	e3 0e       	add	r14, r19
    2786:	15 c0       	rjmp	.+42     	; 0x27b2 <vfprintf+0x100>
    2788:	8f 2d       	mov	r24, r15
    278a:	88 0f       	add	r24, r24
    278c:	f8 2e       	mov	r15, r24
    278e:	ff 0c       	add	r15, r15
    2790:	ff 0c       	add	r15, r15
    2792:	f8 0e       	add	r15, r24
    2794:	f3 0e       	add	r15, r19
    2796:	20 62       	ori	r18, 0x20	; 32
    2798:	0c c0       	rjmp	.+24     	; 0x27b2 <vfprintf+0x100>
    279a:	8e 32       	cpi	r24, 0x2E	; 46
    279c:	21 f4       	brne	.+8      	; 0x27a6 <vfprintf+0xf4>
    279e:	26 fd       	sbrc	r18, 6
    27a0:	78 c1       	rjmp	.+752    	; 0x2a92 <vfprintf+0x3e0>
    27a2:	20 64       	ori	r18, 0x40	; 64
    27a4:	06 c0       	rjmp	.+12     	; 0x27b2 <vfprintf+0x100>
    27a6:	8c 36       	cpi	r24, 0x6C	; 108
    27a8:	11 f4       	brne	.+4      	; 0x27ae <vfprintf+0xfc>
    27aa:	20 68       	ori	r18, 0x80	; 128
    27ac:	02 c0       	rjmp	.+4      	; 0x27b2 <vfprintf+0x100>
    27ae:	88 36       	cpi	r24, 0x68	; 104
    27b0:	49 f4       	brne	.+18     	; 0x27c4 <vfprintf+0x112>
    27b2:	f1 01       	movw	r30, r2
    27b4:	93 fd       	sbrc	r25, 3
    27b6:	85 91       	lpm	r24, Z+
    27b8:	93 ff       	sbrs	r25, 3
    27ba:	81 91       	ld	r24, Z+
    27bc:	1f 01       	movw	r2, r30
    27be:	88 23       	and	r24, r24
    27c0:	09 f0       	breq	.+2      	; 0x27c4 <vfprintf+0x112>
    27c2:	ba cf       	rjmp	.-140    	; 0x2738 <vfprintf+0x86>
    27c4:	98 2f       	mov	r25, r24
    27c6:	95 54       	subi	r25, 0x45	; 69
    27c8:	93 30       	cpi	r25, 0x03	; 3
    27ca:	18 f0       	brcs	.+6      	; 0x27d2 <vfprintf+0x120>
    27cc:	90 52       	subi	r25, 0x20	; 32
    27ce:	93 30       	cpi	r25, 0x03	; 3
    27d0:	28 f4       	brcc	.+10     	; 0x27dc <vfprintf+0x12a>
    27d2:	0c 5f       	subi	r16, 0xFC	; 252
    27d4:	1f 4f       	sbci	r17, 0xFF	; 255
    27d6:	ff e3       	ldi	r31, 0x3F	; 63
    27d8:	f9 83       	std	Y+1, r31	; 0x01
    27da:	0d c0       	rjmp	.+26     	; 0x27f6 <vfprintf+0x144>
    27dc:	83 36       	cpi	r24, 0x63	; 99
    27de:	31 f0       	breq	.+12     	; 0x27ec <vfprintf+0x13a>
    27e0:	83 37       	cpi	r24, 0x73	; 115
    27e2:	71 f0       	breq	.+28     	; 0x2800 <vfprintf+0x14e>
    27e4:	83 35       	cpi	r24, 0x53	; 83
    27e6:	09 f0       	breq	.+2      	; 0x27ea <vfprintf+0x138>
    27e8:	60 c0       	rjmp	.+192    	; 0x28aa <vfprintf+0x1f8>
    27ea:	22 c0       	rjmp	.+68     	; 0x2830 <vfprintf+0x17e>
    27ec:	f8 01       	movw	r30, r16
    27ee:	80 81       	ld	r24, Z
    27f0:	89 83       	std	Y+1, r24	; 0x01
    27f2:	0e 5f       	subi	r16, 0xFE	; 254
    27f4:	1f 4f       	sbci	r17, 0xFF	; 255
    27f6:	42 01       	movw	r8, r4
    27f8:	71 e0       	ldi	r23, 0x01	; 1
    27fa:	a7 2e       	mov	r10, r23
    27fc:	b1 2c       	mov	r11, r1
    27fe:	16 c0       	rjmp	.+44     	; 0x282c <vfprintf+0x17a>
    2800:	62 e0       	ldi	r22, 0x02	; 2
    2802:	66 2e       	mov	r6, r22
    2804:	71 2c       	mov	r7, r1
    2806:	60 0e       	add	r6, r16
    2808:	71 1e       	adc	r7, r17
    280a:	f8 01       	movw	r30, r16
    280c:	80 80       	ld	r8, Z
    280e:	91 80       	ldd	r9, Z+1	; 0x01
    2810:	26 ff       	sbrs	r18, 6
    2812:	03 c0       	rjmp	.+6      	; 0x281a <vfprintf+0x168>
    2814:	6e 2d       	mov	r22, r14
    2816:	70 e0       	ldi	r23, 0x00	; 0
    2818:	02 c0       	rjmp	.+4      	; 0x281e <vfprintf+0x16c>
    281a:	6f ef       	ldi	r22, 0xFF	; 255
    281c:	7f ef       	ldi	r23, 0xFF	; 255
    281e:	c4 01       	movw	r24, r8
    2820:	2c 87       	std	Y+12, r18	; 0x0c
    2822:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <strnlen>
    2826:	5c 01       	movw	r10, r24
    2828:	83 01       	movw	r16, r6
    282a:	2c 85       	ldd	r18, Y+12	; 0x0c
    282c:	2f 77       	andi	r18, 0x7F	; 127
    282e:	17 c0       	rjmp	.+46     	; 0x285e <vfprintf+0x1ac>
    2830:	52 e0       	ldi	r21, 0x02	; 2
    2832:	65 2e       	mov	r6, r21
    2834:	71 2c       	mov	r7, r1
    2836:	60 0e       	add	r6, r16
    2838:	71 1e       	adc	r7, r17
    283a:	f8 01       	movw	r30, r16
    283c:	80 80       	ld	r8, Z
    283e:	91 80       	ldd	r9, Z+1	; 0x01
    2840:	26 ff       	sbrs	r18, 6
    2842:	03 c0       	rjmp	.+6      	; 0x284a <vfprintf+0x198>
    2844:	6e 2d       	mov	r22, r14
    2846:	70 e0       	ldi	r23, 0x00	; 0
    2848:	02 c0       	rjmp	.+4      	; 0x284e <vfprintf+0x19c>
    284a:	6f ef       	ldi	r22, 0xFF	; 255
    284c:	7f ef       	ldi	r23, 0xFF	; 255
    284e:	c4 01       	movw	r24, r8
    2850:	2c 87       	std	Y+12, r18	; 0x0c
    2852:	0e 94 69 15 	call	0x2ad2	; 0x2ad2 <strnlen_P>
    2856:	5c 01       	movw	r10, r24
    2858:	2c 85       	ldd	r18, Y+12	; 0x0c
    285a:	20 68       	ori	r18, 0x80	; 128
    285c:	83 01       	movw	r16, r6
    285e:	23 fd       	sbrc	r18, 3
    2860:	20 c0       	rjmp	.+64     	; 0x28a2 <vfprintf+0x1f0>
    2862:	08 c0       	rjmp	.+16     	; 0x2874 <vfprintf+0x1c2>
    2864:	80 e2       	ldi	r24, 0x20	; 32
    2866:	90 e0       	ldi	r25, 0x00	; 0
    2868:	b6 01       	movw	r22, r12
    286a:	2c 87       	std	Y+12, r18	; 0x0c
    286c:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2870:	fa 94       	dec	r15
    2872:	2c 85       	ldd	r18, Y+12	; 0x0c
    2874:	8f 2d       	mov	r24, r15
    2876:	90 e0       	ldi	r25, 0x00	; 0
    2878:	a8 16       	cp	r10, r24
    287a:	b9 06       	cpc	r11, r25
    287c:	98 f3       	brcs	.-26     	; 0x2864 <vfprintf+0x1b2>
    287e:	11 c0       	rjmp	.+34     	; 0x28a2 <vfprintf+0x1f0>
    2880:	f4 01       	movw	r30, r8
    2882:	27 fd       	sbrc	r18, 7
    2884:	85 91       	lpm	r24, Z+
    2886:	27 ff       	sbrs	r18, 7
    2888:	81 91       	ld	r24, Z+
    288a:	4f 01       	movw	r8, r30
    288c:	90 e0       	ldi	r25, 0x00	; 0
    288e:	b6 01       	movw	r22, r12
    2890:	2c 87       	std	Y+12, r18	; 0x0c
    2892:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2896:	2c 85       	ldd	r18, Y+12	; 0x0c
    2898:	f1 10       	cpse	r15, r1
    289a:	fa 94       	dec	r15
    289c:	08 94       	sec
    289e:	a1 08       	sbc	r10, r1
    28a0:	b1 08       	sbc	r11, r1
    28a2:	a1 14       	cp	r10, r1
    28a4:	b1 04       	cpc	r11, r1
    28a6:	61 f7       	brne	.-40     	; 0x2880 <vfprintf+0x1ce>
    28a8:	f1 c0       	rjmp	.+482    	; 0x2a8c <vfprintf+0x3da>
    28aa:	84 36       	cpi	r24, 0x64	; 100
    28ac:	11 f0       	breq	.+4      	; 0x28b2 <vfprintf+0x200>
    28ae:	89 36       	cpi	r24, 0x69	; 105
    28b0:	49 f5       	brne	.+82     	; 0x2904 <vfprintf+0x252>
    28b2:	27 ff       	sbrs	r18, 7
    28b4:	08 c0       	rjmp	.+16     	; 0x28c6 <vfprintf+0x214>
    28b6:	f8 01       	movw	r30, r16
    28b8:	60 81       	ld	r22, Z
    28ba:	71 81       	ldd	r23, Z+1	; 0x01
    28bc:	82 81       	ldd	r24, Z+2	; 0x02
    28be:	93 81       	ldd	r25, Z+3	; 0x03
    28c0:	0c 5f       	subi	r16, 0xFC	; 252
    28c2:	1f 4f       	sbci	r17, 0xFF	; 255
    28c4:	09 c0       	rjmp	.+18     	; 0x28d8 <vfprintf+0x226>
    28c6:	f8 01       	movw	r30, r16
    28c8:	60 81       	ld	r22, Z
    28ca:	71 81       	ldd	r23, Z+1	; 0x01
    28cc:	88 27       	eor	r24, r24
    28ce:	77 fd       	sbrc	r23, 7
    28d0:	80 95       	com	r24
    28d2:	98 2f       	mov	r25, r24
    28d4:	0e 5f       	subi	r16, 0xFE	; 254
    28d6:	1f 4f       	sbci	r17, 0xFF	; 255
    28d8:	4f e6       	ldi	r20, 0x6F	; 111
    28da:	b4 2e       	mov	r11, r20
    28dc:	b2 22       	and	r11, r18
    28de:	97 ff       	sbrs	r25, 7
    28e0:	09 c0       	rjmp	.+18     	; 0x28f4 <vfprintf+0x242>
    28e2:	90 95       	com	r25
    28e4:	80 95       	com	r24
    28e6:	70 95       	com	r23
    28e8:	61 95       	neg	r22
    28ea:	7f 4f       	sbci	r23, 0xFF	; 255
    28ec:	8f 4f       	sbci	r24, 0xFF	; 255
    28ee:	9f 4f       	sbci	r25, 0xFF	; 255
    28f0:	f0 e8       	ldi	r31, 0x80	; 128
    28f2:	bf 2a       	or	r11, r31
    28f4:	a2 01       	movw	r20, r4
    28f6:	2a e0       	ldi	r18, 0x0A	; 10
    28f8:	30 e0       	ldi	r19, 0x00	; 0
    28fa:	0e 94 bb 15 	call	0x2b76	; 0x2b76 <__ultoa_invert>
    28fe:	78 2e       	mov	r7, r24
    2900:	74 18       	sub	r7, r4
    2902:	45 c0       	rjmp	.+138    	; 0x298e <vfprintf+0x2dc>
    2904:	85 37       	cpi	r24, 0x75	; 117
    2906:	31 f4       	brne	.+12     	; 0x2914 <vfprintf+0x262>
    2908:	3f ee       	ldi	r19, 0xEF	; 239
    290a:	b3 2e       	mov	r11, r19
    290c:	b2 22       	and	r11, r18
    290e:	2a e0       	ldi	r18, 0x0A	; 10
    2910:	30 e0       	ldi	r19, 0x00	; 0
    2912:	25 c0       	rjmp	.+74     	; 0x295e <vfprintf+0x2ac>
    2914:	99 ef       	ldi	r25, 0xF9	; 249
    2916:	b9 2e       	mov	r11, r25
    2918:	b2 22       	and	r11, r18
    291a:	8f 36       	cpi	r24, 0x6F	; 111
    291c:	c1 f0       	breq	.+48     	; 0x294e <vfprintf+0x29c>
    291e:	80 37       	cpi	r24, 0x70	; 112
    2920:	20 f4       	brcc	.+8      	; 0x292a <vfprintf+0x278>
    2922:	88 35       	cpi	r24, 0x58	; 88
    2924:	09 f0       	breq	.+2      	; 0x2928 <vfprintf+0x276>
    2926:	b5 c0       	rjmp	.+362    	; 0x2a92 <vfprintf+0x3e0>
    2928:	0d c0       	rjmp	.+26     	; 0x2944 <vfprintf+0x292>
    292a:	80 37       	cpi	r24, 0x70	; 112
    292c:	21 f0       	breq	.+8      	; 0x2936 <vfprintf+0x284>
    292e:	88 37       	cpi	r24, 0x78	; 120
    2930:	09 f0       	breq	.+2      	; 0x2934 <vfprintf+0x282>
    2932:	af c0       	rjmp	.+350    	; 0x2a92 <vfprintf+0x3e0>
    2934:	02 c0       	rjmp	.+4      	; 0x293a <vfprintf+0x288>
    2936:	20 e1       	ldi	r18, 0x10	; 16
    2938:	b2 2a       	or	r11, r18
    293a:	b4 fe       	sbrs	r11, 4
    293c:	0b c0       	rjmp	.+22     	; 0x2954 <vfprintf+0x2a2>
    293e:	84 e0       	ldi	r24, 0x04	; 4
    2940:	b8 2a       	or	r11, r24
    2942:	08 c0       	rjmp	.+16     	; 0x2954 <vfprintf+0x2a2>
    2944:	b4 fe       	sbrs	r11, 4
    2946:	09 c0       	rjmp	.+18     	; 0x295a <vfprintf+0x2a8>
    2948:	e6 e0       	ldi	r30, 0x06	; 6
    294a:	be 2a       	or	r11, r30
    294c:	06 c0       	rjmp	.+12     	; 0x295a <vfprintf+0x2a8>
    294e:	28 e0       	ldi	r18, 0x08	; 8
    2950:	30 e0       	ldi	r19, 0x00	; 0
    2952:	05 c0       	rjmp	.+10     	; 0x295e <vfprintf+0x2ac>
    2954:	20 e1       	ldi	r18, 0x10	; 16
    2956:	30 e0       	ldi	r19, 0x00	; 0
    2958:	02 c0       	rjmp	.+4      	; 0x295e <vfprintf+0x2ac>
    295a:	20 e1       	ldi	r18, 0x10	; 16
    295c:	32 e0       	ldi	r19, 0x02	; 2
    295e:	b7 fe       	sbrs	r11, 7
    2960:	08 c0       	rjmp	.+16     	; 0x2972 <vfprintf+0x2c0>
    2962:	f8 01       	movw	r30, r16
    2964:	60 81       	ld	r22, Z
    2966:	71 81       	ldd	r23, Z+1	; 0x01
    2968:	82 81       	ldd	r24, Z+2	; 0x02
    296a:	93 81       	ldd	r25, Z+3	; 0x03
    296c:	0c 5f       	subi	r16, 0xFC	; 252
    296e:	1f 4f       	sbci	r17, 0xFF	; 255
    2970:	07 c0       	rjmp	.+14     	; 0x2980 <vfprintf+0x2ce>
    2972:	f8 01       	movw	r30, r16
    2974:	60 81       	ld	r22, Z
    2976:	71 81       	ldd	r23, Z+1	; 0x01
    2978:	80 e0       	ldi	r24, 0x00	; 0
    297a:	90 e0       	ldi	r25, 0x00	; 0
    297c:	0e 5f       	subi	r16, 0xFE	; 254
    297e:	1f 4f       	sbci	r17, 0xFF	; 255
    2980:	a2 01       	movw	r20, r4
    2982:	0e 94 bb 15 	call	0x2b76	; 0x2b76 <__ultoa_invert>
    2986:	78 2e       	mov	r7, r24
    2988:	74 18       	sub	r7, r4
    298a:	ff e7       	ldi	r31, 0x7F	; 127
    298c:	bf 22       	and	r11, r31
    298e:	b6 fe       	sbrs	r11, 6
    2990:	0b c0       	rjmp	.+22     	; 0x29a8 <vfprintf+0x2f6>
    2992:	2e ef       	ldi	r18, 0xFE	; 254
    2994:	b2 22       	and	r11, r18
    2996:	7e 14       	cp	r7, r14
    2998:	38 f4       	brcc	.+14     	; 0x29a8 <vfprintf+0x2f6>
    299a:	b4 fe       	sbrs	r11, 4
    299c:	07 c0       	rjmp	.+14     	; 0x29ac <vfprintf+0x2fa>
    299e:	b2 fc       	sbrc	r11, 2
    29a0:	05 c0       	rjmp	.+10     	; 0x29ac <vfprintf+0x2fa>
    29a2:	8f ee       	ldi	r24, 0xEF	; 239
    29a4:	b8 22       	and	r11, r24
    29a6:	02 c0       	rjmp	.+4      	; 0x29ac <vfprintf+0x2fa>
    29a8:	a7 2c       	mov	r10, r7
    29aa:	01 c0       	rjmp	.+2      	; 0x29ae <vfprintf+0x2fc>
    29ac:	ae 2c       	mov	r10, r14
    29ae:	8b 2d       	mov	r24, r11
    29b0:	90 e0       	ldi	r25, 0x00	; 0
    29b2:	b4 fe       	sbrs	r11, 4
    29b4:	0d c0       	rjmp	.+26     	; 0x29d0 <vfprintf+0x31e>
    29b6:	fe 01       	movw	r30, r28
    29b8:	e7 0d       	add	r30, r7
    29ba:	f1 1d       	adc	r31, r1
    29bc:	20 81       	ld	r18, Z
    29be:	20 33       	cpi	r18, 0x30	; 48
    29c0:	19 f4       	brne	.+6      	; 0x29c8 <vfprintf+0x316>
    29c2:	e9 ee       	ldi	r30, 0xE9	; 233
    29c4:	be 22       	and	r11, r30
    29c6:	09 c0       	rjmp	.+18     	; 0x29da <vfprintf+0x328>
    29c8:	a3 94       	inc	r10
    29ca:	b2 fe       	sbrs	r11, 2
    29cc:	06 c0       	rjmp	.+12     	; 0x29da <vfprintf+0x328>
    29ce:	04 c0       	rjmp	.+8      	; 0x29d8 <vfprintf+0x326>
    29d0:	86 78       	andi	r24, 0x86	; 134
    29d2:	90 70       	andi	r25, 0x00	; 0
    29d4:	00 97       	sbiw	r24, 0x00	; 0
    29d6:	09 f0       	breq	.+2      	; 0x29da <vfprintf+0x328>
    29d8:	a3 94       	inc	r10
    29da:	8b 2c       	mov	r8, r11
    29dc:	99 24       	eor	r9, r9
    29de:	b3 fc       	sbrc	r11, 3
    29e0:	14 c0       	rjmp	.+40     	; 0x2a0a <vfprintf+0x358>
    29e2:	b0 fe       	sbrs	r11, 0
    29e4:	0f c0       	rjmp	.+30     	; 0x2a04 <vfprintf+0x352>
    29e6:	af 14       	cp	r10, r15
    29e8:	28 f4       	brcc	.+10     	; 0x29f4 <vfprintf+0x342>
    29ea:	e7 2c       	mov	r14, r7
    29ec:	ef 0c       	add	r14, r15
    29ee:	ea 18       	sub	r14, r10
    29f0:	af 2c       	mov	r10, r15
    29f2:	08 c0       	rjmp	.+16     	; 0x2a04 <vfprintf+0x352>
    29f4:	e7 2c       	mov	r14, r7
    29f6:	06 c0       	rjmp	.+12     	; 0x2a04 <vfprintf+0x352>
    29f8:	80 e2       	ldi	r24, 0x20	; 32
    29fa:	90 e0       	ldi	r25, 0x00	; 0
    29fc:	b6 01       	movw	r22, r12
    29fe:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2a02:	a3 94       	inc	r10
    2a04:	af 14       	cp	r10, r15
    2a06:	c0 f3       	brcs	.-16     	; 0x29f8 <vfprintf+0x346>
    2a08:	04 c0       	rjmp	.+8      	; 0x2a12 <vfprintf+0x360>
    2a0a:	af 14       	cp	r10, r15
    2a0c:	10 f4       	brcc	.+4      	; 0x2a12 <vfprintf+0x360>
    2a0e:	fa 18       	sub	r15, r10
    2a10:	01 c0       	rjmp	.+2      	; 0x2a14 <vfprintf+0x362>
    2a12:	ff 24       	eor	r15, r15
    2a14:	84 fe       	sbrs	r8, 4
    2a16:	0f c0       	rjmp	.+30     	; 0x2a36 <vfprintf+0x384>
    2a18:	80 e3       	ldi	r24, 0x30	; 48
    2a1a:	90 e0       	ldi	r25, 0x00	; 0
    2a1c:	b6 01       	movw	r22, r12
    2a1e:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2a22:	82 fe       	sbrs	r8, 2
    2a24:	1f c0       	rjmp	.+62     	; 0x2a64 <vfprintf+0x3b2>
    2a26:	81 fe       	sbrs	r8, 1
    2a28:	03 c0       	rjmp	.+6      	; 0x2a30 <vfprintf+0x37e>
    2a2a:	88 e5       	ldi	r24, 0x58	; 88
    2a2c:	90 e0       	ldi	r25, 0x00	; 0
    2a2e:	10 c0       	rjmp	.+32     	; 0x2a50 <vfprintf+0x39e>
    2a30:	88 e7       	ldi	r24, 0x78	; 120
    2a32:	90 e0       	ldi	r25, 0x00	; 0
    2a34:	0d c0       	rjmp	.+26     	; 0x2a50 <vfprintf+0x39e>
    2a36:	c4 01       	movw	r24, r8
    2a38:	86 78       	andi	r24, 0x86	; 134
    2a3a:	90 70       	andi	r25, 0x00	; 0
    2a3c:	00 97       	sbiw	r24, 0x00	; 0
    2a3e:	91 f0       	breq	.+36     	; 0x2a64 <vfprintf+0x3b2>
    2a40:	81 fc       	sbrc	r8, 1
    2a42:	02 c0       	rjmp	.+4      	; 0x2a48 <vfprintf+0x396>
    2a44:	80 e2       	ldi	r24, 0x20	; 32
    2a46:	01 c0       	rjmp	.+2      	; 0x2a4a <vfprintf+0x398>
    2a48:	8b e2       	ldi	r24, 0x2B	; 43
    2a4a:	b7 fc       	sbrc	r11, 7
    2a4c:	8d e2       	ldi	r24, 0x2D	; 45
    2a4e:	90 e0       	ldi	r25, 0x00	; 0
    2a50:	b6 01       	movw	r22, r12
    2a52:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2a56:	06 c0       	rjmp	.+12     	; 0x2a64 <vfprintf+0x3b2>
    2a58:	80 e3       	ldi	r24, 0x30	; 48
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	b6 01       	movw	r22, r12
    2a5e:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2a62:	ea 94       	dec	r14
    2a64:	7e 14       	cp	r7, r14
    2a66:	c0 f3       	brcs	.-16     	; 0x2a58 <vfprintf+0x3a6>
    2a68:	7a 94       	dec	r7
    2a6a:	f2 01       	movw	r30, r4
    2a6c:	e7 0d       	add	r30, r7
    2a6e:	f1 1d       	adc	r31, r1
    2a70:	80 81       	ld	r24, Z
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	b6 01       	movw	r22, r12
    2a76:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2a7a:	77 20       	and	r7, r7
    2a7c:	a9 f7       	brne	.-22     	; 0x2a68 <vfprintf+0x3b6>
    2a7e:	06 c0       	rjmp	.+12     	; 0x2a8c <vfprintf+0x3da>
    2a80:	80 e2       	ldi	r24, 0x20	; 32
    2a82:	90 e0       	ldi	r25, 0x00	; 0
    2a84:	b6 01       	movw	r22, r12
    2a86:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <fputc>
    2a8a:	fa 94       	dec	r15
    2a8c:	ff 20       	and	r15, r15
    2a8e:	c1 f7       	brne	.-16     	; 0x2a80 <vfprintf+0x3ce>
    2a90:	37 ce       	rjmp	.-914    	; 0x2700 <vfprintf+0x4e>
    2a92:	f6 01       	movw	r30, r12
    2a94:	26 81       	ldd	r18, Z+6	; 0x06
    2a96:	37 81       	ldd	r19, Z+7	; 0x07
    2a98:	02 c0       	rjmp	.+4      	; 0x2a9e <vfprintf+0x3ec>
    2a9a:	2f ef       	ldi	r18, 0xFF	; 255
    2a9c:	3f ef       	ldi	r19, 0xFF	; 255
    2a9e:	c9 01       	movw	r24, r18
    2aa0:	2c 96       	adiw	r28, 0x0c	; 12
    2aa2:	0f b6       	in	r0, 0x3f	; 63
    2aa4:	f8 94       	cli
    2aa6:	de bf       	out	0x3e, r29	; 62
    2aa8:	0f be       	out	0x3f, r0	; 63
    2aaa:	cd bf       	out	0x3d, r28	; 61
    2aac:	cf 91       	pop	r28
    2aae:	df 91       	pop	r29
    2ab0:	1f 91       	pop	r17
    2ab2:	0f 91       	pop	r16
    2ab4:	ff 90       	pop	r15
    2ab6:	ef 90       	pop	r14
    2ab8:	df 90       	pop	r13
    2aba:	cf 90       	pop	r12
    2abc:	bf 90       	pop	r11
    2abe:	af 90       	pop	r10
    2ac0:	9f 90       	pop	r9
    2ac2:	8f 90       	pop	r8
    2ac4:	7f 90       	pop	r7
    2ac6:	6f 90       	pop	r6
    2ac8:	5f 90       	pop	r5
    2aca:	4f 90       	pop	r4
    2acc:	3f 90       	pop	r3
    2ace:	2f 90       	pop	r2
    2ad0:	08 95       	ret

00002ad2 <strnlen_P>:
    2ad2:	fc 01       	movw	r30, r24
    2ad4:	05 90       	lpm	r0, Z+
    2ad6:	61 50       	subi	r22, 0x01	; 1
    2ad8:	70 40       	sbci	r23, 0x00	; 0
    2ada:	01 10       	cpse	r0, r1
    2adc:	d8 f7       	brcc	.-10     	; 0x2ad4 <strnlen_P+0x2>
    2ade:	80 95       	com	r24
    2ae0:	90 95       	com	r25
    2ae2:	8e 0f       	add	r24, r30
    2ae4:	9f 1f       	adc	r25, r31
    2ae6:	08 95       	ret

00002ae8 <strnlen>:
    2ae8:	fc 01       	movw	r30, r24
    2aea:	61 50       	subi	r22, 0x01	; 1
    2aec:	70 40       	sbci	r23, 0x00	; 0
    2aee:	01 90       	ld	r0, Z+
    2af0:	01 10       	cpse	r0, r1
    2af2:	d8 f7       	brcc	.-10     	; 0x2aea <strnlen+0x2>
    2af4:	80 95       	com	r24
    2af6:	90 95       	com	r25
    2af8:	8e 0f       	add	r24, r30
    2afa:	9f 1f       	adc	r25, r31
    2afc:	08 95       	ret

00002afe <strrev>:
    2afe:	dc 01       	movw	r26, r24
    2b00:	fc 01       	movw	r30, r24
    2b02:	67 2f       	mov	r22, r23
    2b04:	71 91       	ld	r23, Z+
    2b06:	77 23       	and	r23, r23
    2b08:	e1 f7       	brne	.-8      	; 0x2b02 <strrev+0x4>
    2b0a:	32 97       	sbiw	r30, 0x02	; 2
    2b0c:	04 c0       	rjmp	.+8      	; 0x2b16 <strrev+0x18>
    2b0e:	7c 91       	ld	r23, X
    2b10:	6d 93       	st	X+, r22
    2b12:	70 83       	st	Z, r23
    2b14:	62 91       	ld	r22, -Z
    2b16:	ae 17       	cp	r26, r30
    2b18:	bf 07       	cpc	r27, r31
    2b1a:	c8 f3       	brcs	.-14     	; 0x2b0e <strrev+0x10>
    2b1c:	08 95       	ret

00002b1e <fputc>:
    2b1e:	0f 93       	push	r16
    2b20:	1f 93       	push	r17
    2b22:	cf 93       	push	r28
    2b24:	df 93       	push	r29
    2b26:	8c 01       	movw	r16, r24
    2b28:	eb 01       	movw	r28, r22
    2b2a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b2c:	81 ff       	sbrs	r24, 1
    2b2e:	1b c0       	rjmp	.+54     	; 0x2b66 <fputc+0x48>
    2b30:	82 ff       	sbrs	r24, 2
    2b32:	0d c0       	rjmp	.+26     	; 0x2b4e <fputc+0x30>
    2b34:	2e 81       	ldd	r18, Y+6	; 0x06
    2b36:	3f 81       	ldd	r19, Y+7	; 0x07
    2b38:	8c 81       	ldd	r24, Y+4	; 0x04
    2b3a:	9d 81       	ldd	r25, Y+5	; 0x05
    2b3c:	28 17       	cp	r18, r24
    2b3e:	39 07       	cpc	r19, r25
    2b40:	64 f4       	brge	.+24     	; 0x2b5a <fputc+0x3c>
    2b42:	e8 81       	ld	r30, Y
    2b44:	f9 81       	ldd	r31, Y+1	; 0x01
    2b46:	01 93       	st	Z+, r16
    2b48:	f9 83       	std	Y+1, r31	; 0x01
    2b4a:	e8 83       	st	Y, r30
    2b4c:	06 c0       	rjmp	.+12     	; 0x2b5a <fputc+0x3c>
    2b4e:	e8 85       	ldd	r30, Y+8	; 0x08
    2b50:	f9 85       	ldd	r31, Y+9	; 0x09
    2b52:	80 2f       	mov	r24, r16
    2b54:	09 95       	icall
    2b56:	00 97       	sbiw	r24, 0x00	; 0
    2b58:	31 f4       	brne	.+12     	; 0x2b66 <fputc+0x48>
    2b5a:	8e 81       	ldd	r24, Y+6	; 0x06
    2b5c:	9f 81       	ldd	r25, Y+7	; 0x07
    2b5e:	01 96       	adiw	r24, 0x01	; 1
    2b60:	9f 83       	std	Y+7, r25	; 0x07
    2b62:	8e 83       	std	Y+6, r24	; 0x06
    2b64:	02 c0       	rjmp	.+4      	; 0x2b6a <fputc+0x4c>
    2b66:	0f ef       	ldi	r16, 0xFF	; 255
    2b68:	1f ef       	ldi	r17, 0xFF	; 255
    2b6a:	c8 01       	movw	r24, r16
    2b6c:	df 91       	pop	r29
    2b6e:	cf 91       	pop	r28
    2b70:	1f 91       	pop	r17
    2b72:	0f 91       	pop	r16
    2b74:	08 95       	ret

00002b76 <__ultoa_invert>:
    2b76:	fa 01       	movw	r30, r20
    2b78:	aa 27       	eor	r26, r26
    2b7a:	28 30       	cpi	r18, 0x08	; 8
    2b7c:	51 f1       	breq	.+84     	; 0x2bd2 <__ultoa_invert+0x5c>
    2b7e:	20 31       	cpi	r18, 0x10	; 16
    2b80:	81 f1       	breq	.+96     	; 0x2be2 <__ultoa_invert+0x6c>
    2b82:	e8 94       	clt
    2b84:	6f 93       	push	r22
    2b86:	6e 7f       	andi	r22, 0xFE	; 254
    2b88:	6e 5f       	subi	r22, 0xFE	; 254
    2b8a:	7f 4f       	sbci	r23, 0xFF	; 255
    2b8c:	8f 4f       	sbci	r24, 0xFF	; 255
    2b8e:	9f 4f       	sbci	r25, 0xFF	; 255
    2b90:	af 4f       	sbci	r26, 0xFF	; 255
    2b92:	b1 e0       	ldi	r27, 0x01	; 1
    2b94:	3e d0       	rcall	.+124    	; 0x2c12 <__ultoa_invert+0x9c>
    2b96:	b4 e0       	ldi	r27, 0x04	; 4
    2b98:	3c d0       	rcall	.+120    	; 0x2c12 <__ultoa_invert+0x9c>
    2b9a:	67 0f       	add	r22, r23
    2b9c:	78 1f       	adc	r23, r24
    2b9e:	89 1f       	adc	r24, r25
    2ba0:	9a 1f       	adc	r25, r26
    2ba2:	a1 1d       	adc	r26, r1
    2ba4:	68 0f       	add	r22, r24
    2ba6:	79 1f       	adc	r23, r25
    2ba8:	8a 1f       	adc	r24, r26
    2baa:	91 1d       	adc	r25, r1
    2bac:	a1 1d       	adc	r26, r1
    2bae:	6a 0f       	add	r22, r26
    2bb0:	71 1d       	adc	r23, r1
    2bb2:	81 1d       	adc	r24, r1
    2bb4:	91 1d       	adc	r25, r1
    2bb6:	a1 1d       	adc	r26, r1
    2bb8:	20 d0       	rcall	.+64     	; 0x2bfa <__ultoa_invert+0x84>
    2bba:	09 f4       	brne	.+2      	; 0x2bbe <__ultoa_invert+0x48>
    2bbc:	68 94       	set
    2bbe:	3f 91       	pop	r19
    2bc0:	2a e0       	ldi	r18, 0x0A	; 10
    2bc2:	26 9f       	mul	r18, r22
    2bc4:	11 24       	eor	r1, r1
    2bc6:	30 19       	sub	r19, r0
    2bc8:	30 5d       	subi	r19, 0xD0	; 208
    2bca:	31 93       	st	Z+, r19
    2bcc:	de f6       	brtc	.-74     	; 0x2b84 <__ultoa_invert+0xe>
    2bce:	cf 01       	movw	r24, r30
    2bd0:	08 95       	ret
    2bd2:	46 2f       	mov	r20, r22
    2bd4:	47 70       	andi	r20, 0x07	; 7
    2bd6:	40 5d       	subi	r20, 0xD0	; 208
    2bd8:	41 93       	st	Z+, r20
    2bda:	b3 e0       	ldi	r27, 0x03	; 3
    2bdc:	0f d0       	rcall	.+30     	; 0x2bfc <__ultoa_invert+0x86>
    2bde:	c9 f7       	brne	.-14     	; 0x2bd2 <__ultoa_invert+0x5c>
    2be0:	f6 cf       	rjmp	.-20     	; 0x2bce <__ultoa_invert+0x58>
    2be2:	46 2f       	mov	r20, r22
    2be4:	4f 70       	andi	r20, 0x0F	; 15
    2be6:	40 5d       	subi	r20, 0xD0	; 208
    2be8:	4a 33       	cpi	r20, 0x3A	; 58
    2bea:	18 f0       	brcs	.+6      	; 0x2bf2 <__ultoa_invert+0x7c>
    2bec:	49 5d       	subi	r20, 0xD9	; 217
    2bee:	31 fd       	sbrc	r19, 1
    2bf0:	40 52       	subi	r20, 0x20	; 32
    2bf2:	41 93       	st	Z+, r20
    2bf4:	02 d0       	rcall	.+4      	; 0x2bfa <__ultoa_invert+0x84>
    2bf6:	a9 f7       	brne	.-22     	; 0x2be2 <__ultoa_invert+0x6c>
    2bf8:	ea cf       	rjmp	.-44     	; 0x2bce <__ultoa_invert+0x58>
    2bfa:	b4 e0       	ldi	r27, 0x04	; 4
    2bfc:	a6 95       	lsr	r26
    2bfe:	97 95       	ror	r25
    2c00:	87 95       	ror	r24
    2c02:	77 95       	ror	r23
    2c04:	67 95       	ror	r22
    2c06:	ba 95       	dec	r27
    2c08:	c9 f7       	brne	.-14     	; 0x2bfc <__ultoa_invert+0x86>
    2c0a:	00 97       	sbiw	r24, 0x00	; 0
    2c0c:	61 05       	cpc	r22, r1
    2c0e:	71 05       	cpc	r23, r1
    2c10:	08 95       	ret
    2c12:	9b 01       	movw	r18, r22
    2c14:	ac 01       	movw	r20, r24
    2c16:	0a 2e       	mov	r0, r26
    2c18:	06 94       	lsr	r0
    2c1a:	57 95       	ror	r21
    2c1c:	47 95       	ror	r20
    2c1e:	37 95       	ror	r19
    2c20:	27 95       	ror	r18
    2c22:	ba 95       	dec	r27
    2c24:	c9 f7       	brne	.-14     	; 0x2c18 <__ultoa_invert+0xa2>
    2c26:	62 0f       	add	r22, r18
    2c28:	73 1f       	adc	r23, r19
    2c2a:	84 1f       	adc	r24, r20
    2c2c:	95 1f       	adc	r25, r21
    2c2e:	a0 1d       	adc	r26, r0
    2c30:	08 95       	ret

00002c32 <_exit>:
    2c32:	f8 94       	cli

00002c34 <__stop_program>:
    2c34:	ff cf       	rjmp	.-2      	; 0x2c34 <__stop_program>
